(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 14.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    626515,      11556]
NotebookOptionsPosition[    461631,       8420]
NotebookOutlinePosition[    619033,      11399]
CellTagsIndexPosition[    617353,      11350]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Feynman Amplitude and Scattering Cross-Section for a Toy Theory\
\>", "Title",
 TaggingRules->{},
 CellChangeTimes->{{3.6033921403010273`*^9, 3.6033921517544317`*^9}, {
  3.6251539747096786`*^9, 3.625153999596521*^9}, {3.627227062880781*^9, 
  3.62722707281571*^9}, {3.627242358817459*^9, 3.6272423787980213`*^9}, {
  3.627242909362167*^9, 3.627242913583419*^9}},
 CellTags->{"Name", "Title"},
 CellID->20345292,ExpressionUUID->"995c4733-e412-4b21-989a-55649c965229"],

Cell[CellGroupData[{

Cell[TextData[{
 "Caption",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CaptionCells", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "The caption provides all the information needed to understand the \
Demonstration. It should be between three and five sentences long, but \
clarity is more important than length. Include only text in this section \
\[LongDash] no code, graphics, etc. Do not change the cell style or copy \
cells from other sections. Do not copy text from books or the web. Write your \
ideas in your own words. If you want to refer to something on the web, link \
to it in the Details.", 
           StyleBox["\n", FontSize -> 4]}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCaptionCells"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "8a3dff19-beea-41c8-89f7-74f115cbdaa6"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "CaptionCells"},
 CellTags->{"Caption", "CaptionCells", "TemplateCellGroup"},
 CellID->138150581,ExpressionUUID->"8b6acf92-4382-43ee-99f4-244f895c8d7c"],

Cell[TextData[{
 "Amplitude and differential cross sections for two-body scattering ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"A", "+", "A"}], " ", "\[Rule]", " ", 
     RowBox[{"A", "+", "A"}]}], ")"}], TraditionalForm]], "InlineMath",
  ExpressionUUID->"2a7f3b31-b23c-4da1-ac8b-96eadcd04865"],
 " are calculated using a second-order Feynman diagram of a toy theory (no \
spin, no charge, no polarization, no color) in the center of mass system. The \
graphs show the Feynman amplitude \[ScriptCapitalM] and the differential \
cross section d\[Sigma]/d\[CapitalOmega] as functions of the scattering angle \
\[Theta], in radians. You can vary the mass ",
 Cell[BoxData[
  FormBox["m", TraditionalForm]], "InlineMath",ExpressionUUID->
  "c26120c9-c014-4771-996f-351a39b7844b"],
 " of the exchanged virtual particle and see how the curves behave."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.624905540818069*^9, 3.624905572900361*^9}, {
   3.6249056352387533`*^9, 3.6249057984833927`*^9}, {3.6249060860934887`*^9, 
   3.624906136693892*^9}, 3.6249061699573174`*^9, {3.624906237046809*^9, 
   3.624906258280949*^9}, {3.624906291817175*^9, 3.6249062945846786`*^9}, {
   3.624906328101941*^9, 3.6249065071847773`*^9}, {3.624906563102956*^9, 
   3.624906594756863*^9}, {3.624906689463539*^9, 3.624906695168311*^9}, 
   3.624966822441889*^9, {3.625153312878523*^9, 3.625153329697755*^9}, {
   3.6270522228160477`*^9, 3.6270523377946663`*^9}, {3.627052381177844*^9, 
   3.627052384393526*^9}, 3.627135097074963*^9, {3.627135452916011*^9, 
   3.6271354532748566`*^9}, {3.6271357383216*^9, 3.6271357387116175`*^9}, {
   3.627136205374868*^9, 3.6271362057024765`*^9}, {3.6272252725017223`*^9, 
   3.6272252833590927`*^9}, {3.6272253765508127`*^9, 3.627225406166898*^9}, {
   3.627225460954439*^9, 3.627225478281041*^9}, {3.627225527297655*^9, 
   3.627225529634899*^9}, {3.6272264466136293`*^9, 3.627226577093231*^9}, {
   3.627226859874977*^9, 3.62722686689609*^9}, {3.6272414158264713`*^9, 
   3.6272414236370497`*^9}, {3.627242230336403*^9, 3.6272422647998953`*^9}, {
   3.6272423066737022`*^9, 3.627242328255159*^9}, {3.627308002448591*^9, 
   3.627308019366363*^9}, {3.627327749777311*^9, 3.627327756643487*^9}},
 CellID->1681142296,ExpressionUUID->"c87aeb91-6475-413d-881a-1b495ef3ce9a"],

Cell[TextData[{
 "The general relation between differential cross section and Feynman \
amplitude is: ",
 Cell[BoxData[
  FormBox[
  Cell["\[LineSeparator]", "InlineMath",ExpressionUUID->
    "a6079a2e-679e-46ed-b28a-9eb6c8d939fc"], TraditionalForm]], "InlineMath",
  ExpressionUUID->"3c7cd9f4-1772-4e76-9cfd-fd1255387c0e"],
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         FractionBox[
          RowBox[{"\[DifferentialD]", " ", "\[Sigma]"}], 
          RowBox[{"\[DifferentialD]", " ", "\[CapitalOmega]"}]], "=", 
         RowBox[{
          FractionBox[
           SuperscriptBox["\[HBar]", "2"], 
           RowBox[{"64", 
            SuperscriptBox["\[Pi]", "2"], "s"}]], 
          FractionBox[
           SubscriptBox["p", "f"], 
           SubscriptBox["p", "i"]]}]}], " ", "\[RightBracketingBar]"}], 
       SubscriptBox["\[ScriptCapitalM]", 
        StyleBox[
         RowBox[{"f", " ", "i"}],
         FontSlant->"Italic"]]}], "\[RightBracketingBar]"}], " "}], "2"], 
   TraditionalForm]], "InlineMath",ExpressionUUID->
  "4a759593-133a-4ff7-a911-12274f9f2ae4"],
 "."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.624905540818069*^9, 3.624905572900361*^9}, {
   3.6249056352387533`*^9, 3.6249057984833927`*^9}, {3.6249060860934887`*^9, 
   3.624906136693892*^9}, 3.6249061699573174`*^9, {3.624906237046809*^9, 
   3.624906258280949*^9}, {3.624906291817175*^9, 3.6249062945846786`*^9}, {
   3.624906328101941*^9, 3.6249065071847773`*^9}, {3.624906563102956*^9, 
   3.624906594756863*^9}, {3.624906689463539*^9, 3.624906695168311*^9}, 
   3.624966822441889*^9, {3.625153312878523*^9, 3.625153329697755*^9}, {
   3.6270522228160477`*^9, 3.6270523377946663`*^9}, {3.627052381177844*^9, 
   3.627052384393526*^9}, 3.627135097074963*^9, {3.627135452916011*^9, 
   3.6271354532748566`*^9}, {3.6271357383216*^9, 3.6271357387116175`*^9}, {
   3.627136205374868*^9, 3.6271362057024765`*^9}, {3.6272252725017223`*^9, 
   3.6272252833590927`*^9}, {3.6272253765508127`*^9, 3.627225406166898*^9}, {
   3.627225460954439*^9, 3.627225478281041*^9}, {3.627225527297655*^9, 
   3.627225529634899*^9}, {3.6272264466136293`*^9, 3.627226577093231*^9}, {
   3.627226859874977*^9, 3.62722686689609*^9}, {3.6272414158264713`*^9, 
   3.627241500922637*^9}, {3.627241531211792*^9, 3.6272416802206078`*^9}, {
   3.6272417294152327`*^9, 3.6272417974856033`*^9}, {3.627241835161881*^9, 
   3.62724194765462*^9}, {3.627242043777885*^9, 3.627242045757918*^9}, {
   3.6272421470864058`*^9, 3.627242189987267*^9}, {3.627242418035346*^9, 
   3.6272424341513853`*^9}, {3.6272425259473543`*^9, 3.627242675067224*^9}, 
   3.627308035273953*^9, {3.6273081202575283`*^9, 3.62730812061565*^9}, {
   3.627308187250347*^9, 3.627308191344154*^9}, {3.627308268261304*^9, 
   3.6273082844485598`*^9}, {3.627308428056015*^9, 3.627308436829214*^9}},
 CellID->873849716,ExpressionUUID->"3a01bb12-1059-4eb9-b58c-3725f2931a3c"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Initialization Code",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"InitializationCode", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{"Provide any code that must be evaluated before the ", 
           StyleBox["Manipulate", "MRbig"], 
           ". This will automatically be built into the ", 
           StyleBox["Manipulate", "MRbig"], 
           " in the final notebook version. Never use a package that is not \
included in the default distribution of ", 
           StyleBox["Mathematica", FontSlant -> "Italic"], 
           ". To use a package, use the ", 
           StyleBox["Initialization", "MRbig"], " option (with ", 
           StyleBox["Get", "MRbig"], ", not ", 
           StyleBox["Needs", "MRbig"], ") in the ", 
           StyleBox["Manipulate", "MRbig"], 
           " itself, and use the full name of the function from the package. \
For example:\n", 
           StyleBox[
           "  Manipulate[\n  \[Ellipsis]\n  ComputationalGeometry`ConvexHull[\
\[Ellipsis]]\[Ellipsis]\n  \[Ellipsis]\n  Initialization :> \
Get[\"ComputationalGeometry`\"],\n  \[Ellipsis]\n  ]", "MR"], 
           "\nIf you provide initialization code, include a ", 
           StyleBox["SaveDefinitions->True", "MRbig"], " option in the ", 
           StyleBox["Manipulate", "MRbig"], ".", 
           StyleBox["\n", FontSize -> 4]}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoInitializationCode"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "d1f8a492-d0d0-4f6c-b361-b42528deb417"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "InitializationCode"},
 DefaultNewCellStyle->"Input",
 CellTags->{"Initialization Code", "InitializationCode", "TemplateCellGroup"},
 
 CellID->447669593,ExpressionUUID->"2c92aa16-5ef4-4000-8e2f-66ab015b8611"],

Cell[TextData[{
 "If you provide initialization code, include a ",
 StyleBox["SaveDefinitions->True", "MRbig"],
 " option in the ",
 StyleBox["Manipulate", "MRbig"],
 "."
}], "CodeText",
 Editable->False,
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "samplecell", "TabNext"},
 CellID->687519280,ExpressionUUID->"10e7c42c-f640-4e54-bce7-9137664b6044"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Manipulate",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"ManipulateGroup", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{"This section contains the ", 
           StyleBox["Manipulate", "MRbig"], 
           " input cell and its evaluated output cell. Make all control \
labels or labels in the output as descriptive as possible, with only proper \
nouns and proper adjectives capitalized. More description of the controls can \
be provided in the Details section below, if necessary. If you change this ", 
           
           StyleBox["Manipulate", "MRbig"], 
           " after creating screenshots and/or thumbnails, use ", 
           StyleBox["Update Thumbnail & Snapshots", FontWeight -> "Bold"], 
           " in the toolbar to update any copies in later sections. You can \
control the Flash preview for the Demonstration with the ", 
           StyleBox["AutorunSequencing", "MRbig"], " option. Use ", 
           StyleBox["SaveDefinitions->True", "MRbig"], 
           " if you provided initialization code in the previous section."}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoManipulateGroup"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "0df665a2-ff5b-4ceb-b98e-9ec5e6ac90bf"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "ManipulateGroup"},
 DefaultNewCellStyle->"Input",
 CellTags->{"Manipulate", "ManipulateGroup", "TemplateCellGroup"},
 CellID->791025314,ExpressionUUID->"c0ec5477-bc83-49be-aa1d-9f8cfdec5168"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[ScriptCapitalM]", "[", 
         RowBox[{"\[Theta]", ",", "p", ",", "\[ScriptM]"}], "]"}], ",", " ", 
        RowBox[{"DCS", "[", 
         RowBox[{"\[Theta]", ",", "p", ",", "p", ",", "\[ScriptM]"}], "]"}]}],
        "}"}], "[", 
      RowBox[{"[", "chooseplot", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "0", ",", 
       RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "\"\<amplitude\>\"", ",", "\"\<differential cross section\>\""}], 
        "}"}], "[", 
       RowBox[{"[", "chooseplot", "]"}], "]"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\[Theta]\>\"", ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "\"\<\[ScriptCapitalM]\>\"", ",", " ", 
           "\"\<d\[Sigma]/d\[CapitalOmega]\>\""}], "}"}], "[", 
         RowBox[{"[", "chooseplot", "]"}], "]"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"550", ",", "350"}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"ImagePadding", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"60", ",", "Automatic"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"30", ",", "Automatic"}], "}"}]}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\[ScriptM]", ",", "0", ",", 
       "\"\<exchange particle mass \[ScriptM]\>\""}], "}"}], ",", "0", ",", 
     "10", ",", 
     RowBox[{"1", "/", "10"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"chooseplot", ",", "1", ",", "\"\<choose plot\>\""}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "\[Rule]", " ", "\"\<amplitude\>\""}], ",", " ", 
       RowBox[{"2", "\[Rule]", " ", "\"\<differential cross section\>\""}]}], 
      "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Initialization", "\[RuleDelayed]", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"SP", "[", 
        RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "4", "]"}], "]"}], "*", 
           RowBox[{"y", "[", 
            RowBox[{"[", "4", "]"}], "]"}]}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"g", "=", "1"}], ";", "\[IndentingNewLine]", 
      RowBox[{"p", "=", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"S", "=", 
       RowBox[{"1", "/", 
        RowBox[{"2", "!"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[HBar]", "=", "1"}], ";", "\[IndentingNewLine]", 
      RowBox[{"c", "=", "1"}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[ScriptCapitalM]", "[", 
        RowBox[{"\[Theta]_", ",", "p_", ",", "\[ScriptM]_"}], "]"}], ":=", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"g", "^", "2"}]}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", 
              RowBox[{"SP", "[", 
               RowBox[{"p", ",", "p"}], "]"}], " ", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}]}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"\[ScriptM]", " ", "c"}], ")"}], "^", "2"}]}], ")"}]}],
           "+", 
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", 
              RowBox[{"SP", "[", 
               RowBox[{"p", ",", "p"}], "]"}], " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}]}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"\[ScriptM]", " ", "c"}], ")"}], "^", "2"}]}], 
            ")"}]}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"DCS", "[", 
        RowBox[{"\[Theta]_", ",", "v1_", ",", "v2_", ",", "\[ScriptM]_"}], 
        "]"}], ":=", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"\[HBar]", "/", 
           RowBox[{"(", 
            RowBox[{"8", " ", "\[Pi]"}], ")"}]}], ")"}], "^", "2"}], "*", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"S", " ", 
           RowBox[{
            RowBox[{"\[ScriptCapitalM]", "[", 
             RowBox[{"\[Theta]", ",", "v1", ",", "\[ScriptM]"}], "]"}], "^", 
            "2"}]}], ")"}], "/", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"v1", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "+", 
            RowBox[{"v2", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "^", "2"}]}]}]}]}], 
     ")"}]}]}], "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.625155602839891*^9, 3.625155677103343*^9}, {
   3.625155747056756*^9, 3.625155764320434*^9}, {3.62705166016158*^9, 
   3.6270516635469418`*^9}, {3.627051739295126*^9, 3.627051803428619*^9}, {
   3.627063088044896*^9, 3.62706309178438*^9}, {3.627076723195137*^9, 
   3.627076767969367*^9}, {3.627135067768163*^9, 3.627135082153363*^9}, {
   3.6271357134188824`*^9, 3.6271357211266284`*^9}, {3.627136186199976*^9, 
   3.6271361874324074`*^9}, {3.6271484997735977`*^9, 3.62714860822301*^9}, {
   3.6272249863368883`*^9, 3.627224986750043*^9}, {3.627225094999887*^9, 
   3.627225165234331*^9}, 3.6272252575900183`*^9, {3.6272258210321093`*^9, 
   3.62722591715501*^9}, 3.627225989299489*^9, {3.627226034614676*^9, 
   3.62722604737955*^9}, {3.627226117189889*^9, 3.6272261771236267`*^9}, {
   3.627226297780776*^9, 3.627226321387294*^9}, 3.627226731511491*^9, {
   3.627236472272905*^9, 3.627236484967992*^9}, {3.627236531502039*^9, 
   3.627236577270564*^9}, {3.6272366144017477`*^9, 3.627236622054908*^9}, 
   3.627236659541771*^9, {3.6272367212981205`*^9, 3.6272367634425383`*^9}, {
   3.627236850762912*^9, 3.6272370297482643`*^9}},
 CellID->1561965383,ExpressionUUID->"7c58953f-62a7-43bd-8885-1b54cee47d26"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`chooseplot$$ = 
    1, $CellContext`\[ScriptM]$$ = Rational[4, 5], Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`\[ScriptM]$$], 
       Rational[4, 5], "exchange particle mass \[ScriptM]"}, 0, 10, 
      Rational[1, 10]}, {{
       Hold[$CellContext`chooseplot$$], 1, "choose plot"}, {
      1 -> "amplitude", 2 -> "differential cross section"}}}, 
    Typeset`size$$ = {550., {173., 177.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`\[ScriptM]$7116$$ = 
    0, $CellContext`chooseplot$7117$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`chooseplot$$ = 
        1, $CellContext`\[ScriptM]$$ = Rational[4, 5]}, "ControllerVariables" :> {
        Hold[$CellContext`\[ScriptM]$$, $CellContext`\[ScriptM]$7116$$, 0], 
        Hold[$CellContext`chooseplot$$, $CellContext`chooseplot$7117$$, 
         False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[
        Part[{
          $CellContext`\[ScriptCapitalM][$CellContext`\[Theta], \
$CellContext`p, $CellContext`\[ScriptM]$$], 
          $CellContext`DCS[$CellContext`\[Theta], $CellContext`p, \
$CellContext`p, $CellContext`\[ScriptM]$$]}, $CellContext`chooseplot$$], \
{$CellContext`\[Theta], 0, Pi/2}, Frame -> True, PlotLabel -> 
        Part[{"amplitude", 
           "differential cross section"}, $CellContext`chooseplot$$], 
        FrameLabel -> {"\[Theta]", 
          
          Part[{"\[ScriptCapitalM]", 
            "d\[Sigma]/d\[CapitalOmega]"}, $CellContext`chooseplot$$]}, 
        ImageSize -> {550, 350}, 
        ImagePadding -> {{60, Automatic}, {30, Automatic}}], 
      "Specifications" :> {{{$CellContext`\[ScriptM]$$, 
          Rational[4, 5], "exchange particle mass \[ScriptM]"}, 0, 10, 
         Rational[1, 10]}, {{$CellContext`chooseplot$$, 1, "choose plot"}, {
         1 -> "amplitude", 2 -> "differential cross section"}}}, 
      "Options" :> {}, "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{35.919000000000004`, {6., 9.256}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>(($CellContext`SP[
         Pattern[$CellContext`x, 
          Blank[]], 
         Pattern[$CellContext`y, 
          Blank[]]] := -(Part[$CellContext`x, 2] Part[$CellContext`y, 2] + 
         Part[$CellContext`x, 3] Part[$CellContext`y, 3] + 
         Part[$CellContext`x, 4] Part[$CellContext`y, 4]); $CellContext`g = 
       1; $CellContext`p = {1, 1, 0, 0}; $CellContext`S = 
       1/Factorial[2]; $CellContext`\[HBar] = 1; $CellContext`c = 
       1; $CellContext`\[ScriptCapitalM][
         Pattern[$CellContext`\[Theta], 
          Blank[]], 
         Pattern[$CellContext`p, 
          Blank[]], 
         Pattern[$CellContext`\[ScriptM], 
          Blank[]]] := (-$CellContext`g^2) (
         1/((2 $CellContext`SP[$CellContext`p, $CellContext`p]) (1 - 
            Cos[$CellContext`\[Theta]]) - ($CellContext`\[ScriptM] \
$CellContext`c)^2) + 
         1/((2 $CellContext`SP[$CellContext`p, $CellContext`p]) (1 + 
            Cos[$CellContext`\[Theta]]) - ($CellContext`\[ScriptM] \
$CellContext`c)^2)); $CellContext`DCS[
         Pattern[$CellContext`\[Theta], 
          Blank[]], 
         Pattern[$CellContext`v1, 
          Blank[]], 
         Pattern[$CellContext`v2, 
          Blank[]], 
         Pattern[$CellContext`\[ScriptM], 
          Blank[]]] := ($CellContext`\[HBar]/(8 
          Pi))^2 (($CellContext`S \
$CellContext`\[ScriptCapitalM][$CellContext`\[Theta], $CellContext`v1, \
$CellContext`\[ScriptM]]^2)/(Part[$CellContext`v1, 1] + 
          Part[$CellContext`v2, 1])^2)); Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 TaggingRules->{},
 CellID->457239182,ExpressionUUID->"a17c8fd3-d318-41eb-888b-8305b87e838e"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Snapshots",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"SnapshotGroup", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "To create snapshots, click 'Add Snapshot' in the toolbar at least \
three times, and adjust the controls of each copy to show a range of \
interesting settings. Optional captions for the screenshots may be included \
in the Details section.", 
           StyleBox["\n", FontSize -> 4]}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoSnapshotGroup"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "d8d69b59-cacc-45f3-90ed-5fede002dc5c"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "SnapshotGroup"},
 DefaultNewCellStyle->"Text",
 CellTags->{"SnapshotGroup", "Snapshots", "TemplateCellGroup"},
 CellID->98938448,ExpressionUUID->"28d25da0-61b1-4f4c-a0e3-5ad86af21678"],

Cell[BoxData[
 PaneBox[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
/bW2Ib/+9a/VQ0uzSIjpc+bgwYNyU2JBIu6BBx6QMajFAwMDtcFL4MgUiZdH
H31UbcXVV18t/x8dHe3O1jn65z//qTbnvPPOk3XKDyrQsrKy1AwrVqyQKT17
9pR7pV7lZxleeHi4fsyXXHLJaaedJll6//33y9MkdfnLX/5Spt93333ys5pZ
klCmDBw40P09qQ899URI5ckw1J6RPVxeXu5io6644gp5Ch577DF5OuSmPIqM
XBaXqFRblJmZ2eqTIj766CP1vMjgZQNlSy+99NLi4mJ37rUjWz116lQ1fqlj
eY3JTdl7clMiVA6NJEjVYHx9fR0Xl8On1FN58DhNyis5OTkhIeHo0aMSnp0R
erJaWbk8hDwQoQdYid2fpvz8/Jb+0SH0AAB6ng29/v37y4H0u+++q24eOXJE
8uGCCy7QTuKomJIDb4mdXr16yTG89m/Wf/7zH7lrxIgR6qZU1TXXXCPH9vHx
8dU/5onc/Pbbb9UMCxcu1FdDaGjorbfeqi0u/65dfPHFZ599tvxQ/WM0yU3t
ZNM777wjU+RB1c2wsDAVkhkZGWrKnDlzVAxqodfq1tlRTSRlp50gGzZsmP5B
Jb5uu+027YTm7Nmz5d633npL3dTGvH37dv1qHd+6aRd67uxJbb9JGpx55pkS
blIKaoqkt8wwY8YMFxv18ssvq5tr1qxRz8vOnTvVlBdffFGmfPPNN60+KUI2
//TTT1dVKCTNZH6tvl3fa2fPnj0yZqlveXRpultuuUW2Wj2Ds2bNkgiVVamb
48ePd1xcfy6vM0IvKSlJ9r88p/J0dEboyWpl5fIQ6qSeBwcPwFx2f5rkj5XT
v4HVp4bedhtCDwC6M8+G3nXXXXfZZZfppwwdOlQOrQ8dOqRulpaW9unT56yz
znrooYdkuj5h5LD8oosu0kdTVFTUF198kZycXP1jntx8883avVJP0hcuLjUp
GSWLREZGVv8YTQ888IB2r+SbOnWlbn7wwQdyc9GiRfo13HTTTfrQa3Xr7Kgm
+vzzz7Up5eXlPXv2/NWvfuV0fjk+l/n/9a9/qZtqzI8//rjdbK2Gnjt7Ugu9
lStXys2PP/5YmzknJ0emPPnkky42SjvtKE+oOmGnzaBW+P777ztdXP+kiNtv
v13tIqdvRnJ9ryMZjLwkZJHevXtLaebl5amy69Gjx1NPPSWbr07wbdmyxXFZ
A0IvLi5u//79lZWVnRF6slpZuXrbKqEHWAmhBwBoHw+GXn5+vjqu/r2OmrJ0
6VJtNjkcPeOMM2Tia6+9pk1UcfHXv/61pZWrPNEiSLnyyislarSbCQkJEydO
fOSRR/74xz9ef/316qHV+TIVTUOGDNEvLr151113qZ/Vaax9+/bpZ3j55Ze1
0HNz6/RUE8XExOgn3n333RIjRUVF6uaaNWsk3O65554bb7xRvcfymWeeUXep
MQ8fPtxuta5Dz809qYXeiBEjnG7XxRdf7GKj9O8dsnu49evXy5S5c+eqmy6e
FCERp9LsF7/4Rd++fWVvaCf7Wr3XUXBwsFr/l19+KTflUdRN2bfFxcVSu/Lz
hRde6PRdqZ391k0VemFhYQ0NDZ0RerJaWTmhB1hPW9+6WdYaQg8AugkPhp78
A6SOq5/TkWp47LHHNm/erM0m/2ydd955MtuoUaO0iRkZGTLl4YcfbmnlTi8h
og89aTQ5hldvv3ziiSdUo9mFnl00nX322VroqfeU2p3refzxx7XQc3Pr9FQT
qfNomr/85S8yUXKs+se6lOz905/+JA0ridfx0Gvrnnz11VfVqVL9dl133XXa
Z/qcbpSboef6SVEOHTok2/jb3/5WizLtvZqt3mvn3XfflXlkD6ubEuA+tg9d
SuJV/3jS9qWXXnK6bGdfjEX6KzY2VnZI54WerFwegtADLKatF2Mh9AAAimff
unnppZe29L5Ejfq0VJ8+fXr06BESEqJNlxbo3bu3fs7i4uK0tDR1/qXV0Hv9
9ddlhnnz5mn3Sjq5H3rqs2b6k4zy0CpStLduurN1eqqJ7K7WIiu54oor5IcT
J07Ivb/85S+1aIqMjOx46FW3cU8uWLBAbn722Wdt2ig3Q8/1k2JHcuyBBx6Q
e2fPnt3We5V7773XR/dO2gEDBvjorkLz5JNPys1169a5uaUepL5bQZ4FOWaT
nzsj9GS1snJ5CL5hAei2CD0AgJ5nQ0+dAlu7dq02ZdasWZIG2oH9okWLZIaR
I0fKlDPOOOPXv/51SUmJuksdh2tRUFlZqY7b1dspWw09FSDadzckJCSoTHMz
9LKysiSOZJ4JEybs37//22+/vfXWW9VZJC30Wt06O2pId9xxh/Zewfnz58uU
J554QhuS9iFBIcNzJ/SGDBki01esWKFNsQu9Nu1JmSg3b7/9du1qlikpKU89
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
l90W6UPPxfAmT56sskjGJqt9/vnnXTy0Cj0pDjne7mA0eZZd6O3cuXPq1KmV
lZXqZkFBgdz7t7/9rYOP0pHQk6dDDok9GHqbNm16++23ZcO1GeTF0LNnT3lp
6ZdyOtF4qampMvhHHnlEP9FxE1wg9FxQv/K7du3SpmRnZ0+cOHH79u2d9IiE
HgDAGgg9b5ebmysJIwdC1113nRxqStHIz6+88oq6Vx0jXWnz2GOPqXtvvfVW
LYXkSOY3v/mNTPzVr371+OOPX3DBBfLzqFGjtPW3OsNHH32kHkIe6/777z/t
tNMuvfRSOeZX90qG9OnTR2a46aabHnzwwZ/85Cc9evSQY+CWNuef//yn2hap
tkcffVR+kJtXXXVVVlaWfou00HM9vMWLF8tEmXLJJZdIY44fP97FnvSW0LNj
ydCzIy9yuffhhx9udaIpnIZemxB6LjiGXmcj9AAA1kDoebv//Oc/chQ0YsQI
dVMO+6+55hqprfj4+Oofs+iee+6RQxe5WVhYqM5waaH08ssvy82xY8eqmzLD
r3/9a5ni7+/v5gy33Xbb6aefnpmZqW5OnTpVQjIwMFDd7N+/v8z87rvvqptH
jhw5//zzJcckqZxujgo9KTvtuprDhg2TKbKZ6qZd6LU6vLa+ddPN0JNWvffe
ey+88EJJSFl5WFiYdtfIkSNvvPFG2VIpa8lVadVVq1bV19fLTvjlL3957rnn
yoL79u2zmz85Ofnf//73RRdddPnll/v6+sbFxWkz2IWe5KrMrz6jN336dLW9
slqZqM0ju+sPf/iDfsBz5syRGZKSktTNpqamefPmyUgkvW+++ea1a9c6hp7s
ujFjxshSvXr1kgSTTfZg6O3fv18Geemll8omP//887JD9KEn++S3v/2t+sza
uHHjpOLVaVmZKOXe0kRl2bJlkr3yMrvllltkPfoPvg0ZMkRmlhfnX//6V9nw
d955x/2lDhw4IDP87Gc/u/jii2Wc2mlEeVq1s8Yy23PPPee4CSIjI0N+F2TO
s88++6abbvLz85PdpT2EO6EnLwn5XZBl5YHuvPPOadOmubNdixcv/vvf/y4v
VHloGYC8UPXrlFf7Cy+8IC9LWae8YD766CP9vbKsPJDcdcUVVzz99NMJCQku
hud6Zhe718WmyV8V2S71X2/kb4LaRjW//PzWW29pa4iNjZWdIGuQ37gHH3xw
xowZ8lK02z8tPYOOCD0AgDUQet5Osk4OlfXdFBUV9cUXX0g4VP+YRevWrdPu
HTp0qEyRA3ttcTns0T/7GzdulBnkIMrNGW6//Xb1WSS793MqkjmXXXaZfooa
wKFDh5xujgo9WZs2RY67evbsKUf16qZd6LU6vM4IPdm9sk45/pTjRulcyWo5
utau1SlHueoU5+9+9zs5xpYDe5lBSkTmkfn/9Kc/qWWlSfXzywbKYbDMoPrl
6quv1q6LYhd68oPclIny84oVK5544gm5KcUkx64TJ05U8/z5z3+Wx9WPedSo
UTKbNkjpcdUmUqPqlKvsSX3oyW6Xw2aZIkfm6kyx5Lzks0dCT46x5VWhtvrh
hx+Wlcv26kNPckluqkNxCVLZLeq07JNPPikH7S1NFB9//LFMlD0pY1Z78p57
7pEoVveqfSWLSPhI5C5atMj9paRfrr32Whmt7Fi5KYtry8o+lCnyOpSRvPHG
G46bINWgVivVrFpDftaSsNyN0JOXsaSKOtmt9pj8/N///tf1dn3wwQcyXV54
0j6S8/Lzz3/+8+joaHWvvAJlo9TpYInu3r17y8+SSPplZQYZm/SjvIZl/fn5
+U6H53pm17vXxabl5ubKLpUOVTtcft63b59Mlx0lU+Sx1BokotV/7pCVy3Oh
wlBSWhue62fQEaEHALAGQs+ryXGIHLHIkVVLM6gsksN7bcrixYtlyvLly6tt
b/t0XFy9D00KxZ0ZhESZHNfJlF/84hd9+/Zds2aNOtoXcqTnY/N7HTVl6dKl
TgesQi8mJkY/8e6775aHkCPD6lNDz53hdUboyRjuuOMO7fon6ih38uTJ+nDr
16+furl+/Xof2wVD9uzZo6aok7BbtmzRzy9Hs9qFNEeOHClT+vfv32roNbfw
1k3XoRcXFyfjkWP+zMxMfffpQ09d50Smq5vyjEhuS0fU19d3PPSeffZZWbls
prop+1xePC2FnlCvc9lG/UocJ8owzjzzzMsvvzw5OVlNUbtatkJ/wC8tII3T
1qXkFSXH/ypMevXqJVPkBaBmcPrWTf0m7Nq1S175w4YNU3fJ31vZ+fIEyQ9q
Squhp85ca2vIzs5WJ+5VtTndLnmu5Vm+6KKL4uPj1ZQFCxbIbPLbpG5u2LBB
bg4ePFjdTEpKuuuuu7T8/OMf/yhpn5aWpm5OmTJFNkFK3+nwXMzc6u51vWnl
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
3qs9n1WX9KBeNKPo1vS8JjH5nVetmW/axbsiJ0/frjlzp0a8/ex9d15Z9/Py
nr8qel6IW+XXl/+9tfcZt/o3RuhBPkIPAAAAO8hqcxjnV3pH5z91TZZ9GhZl
lJ3/Oe1Zkyis325UxiaX7NQ5YVTdHhZ1bvXvhNCDfIQeAAAAZHK6XEsr1nGj
uXtorvHLZEXT8NvavielXZlv2q89/ZR4/+PpW9W/XC2LSgyhJwcJPYQdQg8A
AAChyel0La/ajPMrQ5OLXYOzzd1Tde1jZY1D72r78sq6cwo77r5uS89rSslt
OJ9Vd+ZOzW83Kg9dKduTXLLjpxIl9BB2ojRUzwIAAADsGJvdsbxmMy2tiVQc
N5pFLfaNmrqG5j73GVt6phu/TNZ3THxoH6tuGa1oGn5W1n39WdPVJ42pjxoy
37S/qel9Xd37quqfg/Je/HuY3l//vbX1bn6MXpSXoP5JCT14o+8AAACAoCL0
IB+hBwAAAAQVoQf5CD0AAAAgqAg9yEfoAQAAAEFF6EE+Qg8AAAAIKkIP8hF6
AAAAQFARepCP0AMAAACCitCDfIQeAAAAEFSEHuQj9AAAAICgIvQgH6EHAAAA
BBWhB/kIPQAAACCoCD3IR+gBAAAAQUXoQT5CDwAAAAgqQg/yEXoAAABAUBF6
kI/QAwAAAIKK0IN8hB4AAAAQVIQe5CP0AAAAgKAi9CAfoQcAAAAEFaEH+bb9
U0chAgqxAwKqsPcBCoXvDkjoQT5CDwhH7ICAKux9gELhuwMSepCP0APCETsg
oAp7H6BQ+O6AhB7ki6jQY2YJwm7gv5lZirAb+G9mliXsZg67gf9mZinCbuC/
mVmK9YEJPchH6IW4sJs57Ab+m5mlCLuB/2ZmWcJu5rAb+G9mliLsBv6bmaUg
9KAQoRfiwm7msBv4b2aWIuwG/puZZQm7mcNu4L+ZWYqwG/hvZpaC0INChF6I
C7uZw27gv5lZirAb+G9mliXsZg67gf9mZinCbuC/mVkKQg8KRQEAAAAIsqD+
Sk/oAQAAAIDOEHoAAAAAoDOEHgAAAADoDKEHAAAAADpD6AEAAACAzhB6AAAA
AKAzhB4AAAAA6AyhBwAAAAA6Q+gBAAAAgM4QegAAAACgM4QeAie++/n5+Xfu
3MnKyqqqqjKbzZvepbOzMzc3NyMj4+XLl93d3RKGBPRqS3uT2D2LfZmZmZEz
LaBLJSUlaWlp4tFw0y238YgJwI/5+fn09PTy8vJNt2xtbfV++Kuvr5cwZKgh
9BAg8SB15MiRKI1Tp075/6Xx3bt3Ud8Sj3rSBgb0ZKt7U3Nzc5QvLS0t0mYG
dKaxsdG9H83NzfnfchuPmAD8sFqtCQkJYlfKzs7edONz5855P/zFxcVJmDPU
EHoI0N27d8Vucv78+d7e3q6urrNnz4p3L1y4sNH2Y2NjsbGx0dHRxcXFIyMj
b9++de9onz9/ljk2oAPb2Jtev34tNoiPj3/6rYmJCZmTA/rgcrkqKyv37t0b
YOht9RETgB8zMzMpKSnuvW/T0LPb7eIRU2yZm5urffgrLS2VM21IIfQQiO7u
brHLxMTELC4uulfEG+79aHBw0OddLl26JD76+PHj9RWxl4mV69evSxgY0JNt
7E3p6eliA/GrqZQBAT0zGo3ufXCd/9DbxiMmgI2UlZXt27dvfe/bNPSGh4fF
ZkeOHJEzXogj9BCIFy9eiL0mLS1Nu3jjxg2xmJeX57291WqNjo4WHx0aGlpf
HBkZEStifXV1NegTA3qxvb3p+PHjYoOBgQFZYwK65X7h9J49e8rLy9295j/0
tvqICcAP9yNgUlJSTk5OIKFXW1srNrt27Zqc8UIcoYdAXL9+Xew14sFOu5if
n7/RrjQ4OOj+LdTlcmnX3Q+R/PIJBG4be5P4H7X7Xz6LiorEzpuQkHDv3r2m
piZZIwO6UlFRIX7DdB9hJ3Jv09Db6iMmAD9E4hkMBqfTWVhYGEjoPX78WGyW
np5+//79xMTEy5cvP3/+fGlpSc60oYbQQyDEXub9MjDx7kYHHXR2dvp83tx9
cDqH6QGB28be1NXV5X0cupCVlSVjYkC/AnlGb6uPmAACUVBQEEjoJScnez/8
HT58ODJfOE3oIRDuMx3V1dVpFxsaGsTi2bNnvbdva2sTHzpx4oTH+pkzZ8Q6
zywAgdvG3lRSUuJ+aHv27Jl4aBseHs7MzHSvfPz4UcrUgD4FEnpbfcQEEIhA
Qs/lch04cEBsdvr0adE4k5OTBoPh6NGjYkU8aNpsNmnThghCD4FITEz0/hVR
PIqJRfGI5r19R0eH+NDJkyc91sUvq2Jd/OIaxFkBfdnG3mQ0GsXe6nElhbS0
NLF9cnJyEGcF9C6Q0NvqIyaAQAQYeuJhsby8fP1USMLAwID7QL+urq7gjxla
CD0E4ubNm2IHef/+vXaxtLRULKampnpvPzY2Jj508OBBj3WxItZ7enqCOCug
Lzu1N4n/24vtDx06tNMDAhEkkNDb6iMmgEAE+NJNn/744w9x37Kysh2fKsQR
egjEo0ePxA7y/Plz7aJ4VyxmZmZ6b282m92vE7NareuLFovFvWg0GoM+MaAX
29ibFhYWhoeHxX+1i+6XgBJ6wPcIJPS2+ogJIBCBhJ7NZpucnNSepNrN/YJq
Qo/Qg0/uo8h///137eLp06fFYnl5uc+7uM8U0dDQsL5iMBjEyi+//BLcWQHd
2eredPnyZfHRGzduaBfdp3xPSkoK7qyArgUSett4xASwqUBCr7e31/2voCMj
I+uLIl7cV+Lr7OwM/pihhdBDIMR31v06sfWjy8V32X0WI7PZ7F4Ru4/4cZqa
mnK/677wUHx8/MrKinhX/DcuLk6svH37VskfAQhfm+5NJpNJ7H3rB+WJdfcj
3frFF8Qbe/fu9T4TIIAt8Rl6Hg9/gTxiAtiqjUJPuwPabDb3g11GRobdbhcr
4r93794VK8ePH+dkLIQeNvLq1auofy/mde1f7sNaDQbD+gbuf65cv3KQeDhz
P9KJPUvsYu7LN589e9bhcCj6EwDhatO9yf0En9gr3e+urq6eOnXK3XrJycni
8c792+mlS5fYAYHv4TP0PB7+/g7gERPAVm0Ueh47YHl5ufvh75dffrlz587v
v/8u3hZ7bmtrq/SR1SP0ECCXyyV2Ive/kwh79ux5+fKldgP3yd4LCwvXV6am
puLj46P+Ky4ubmxsTPrggB7435saGxvde+X6yszMjOi79e3379//6NEjKg/4
Tu4XgJlMJu2i98Pfpo+YALaqqKhI7E0PHjzwWPfeAaurq92HPLj98ccf669v
iTSEHrbE6XROTEyI3zDF9zrAu5jN5uHhYfHDIx74gjoboHtb3ZvEfir21snJ
SbHnBns2AB628YgJYEeIvW9mZkY8YroPeYhYhB4AAAAA6AyhBwAAAAA6Q+gB
AAAAgM4QegAAAACgM4QeAAAAAOgMoQcAAAAAOkPoAQAAAIDOEHoAAAAAoDOE
HgAAAADoDKEHAAAAADpD6AEAAACAzhB6AAAAAKAzhB4AAAAA6AyhBwAAAAA6
Q+gBAAAAgM4QegAAAACgM4QeAAAAAOgMoQcAAAAAOkPoAQAAAIDOEHoAAIS7
ycnJ+/fvJyQknD59+vbt2yMjI6onAgAoRugBABDWxMNubGxsVFRUTExM1L/2
7ds3PT2tei4AgEqEHgAA4aunpyfmX+Xl5Xa7fW5u7tSpU6L1nj59qno0AIBK
hB4AAGHK6XSeO3dOZF1hYeH64vv378XK1atXFQ4GAFCO0AMAIEw1NzeLpjt2
7Jjdbl9fbGhoEIsXL15UOBgAQDlCDwCAMHXjxg3RdK9evdIu1tXVicXU1FRV
UwEAQgGhBwBAOLLb7Xv37hVNV15ePqDx4MEDsZiZmal6QACASoQeAADhqLe3
N2pjRUVFqgcEAKhE6AEAEI4qKipE0B0/fvyJxuPHj92hJzJQ9YAAAJUIPQAA
wtGzZ89E0N2/f1+7ODAwIBYPHDjgcDhUDQYACAWEHgAA4SgrK0s03cuXL7WL
7mf0srOzVU0FAAgRhB4AAOHIfdKVJ0+erK+YTKZ9+/aJxeHhYYWDAQBCAaEH
AEA4evfunWi6U6dOWa1W8e7KykpycjLn2wQAuBF6AACEo+np6ejoaFF2Z8+e
vXfv3tGjR8XbcXFx4rFY9WgAAPUIPQAAwlRdXZ37tZpCbGxsbm7uysqK6qEA
ACGB0AMAIHw5HI7xf9ntdtWzAABCCKEHAAAAADpD6AEAAACAzhB6AAAAAKAz
hB4AAAAA6AyhBwAAAAA6Q+gBAAAAgM4QegAAAACgM4QeAAAAAOgMoQcAAAAA
OkPoAQAAAIDOEHoAAAAAoDOEHgAAAADoDKEHAAAAADpD6AEAAACAzhB6AAAA
AKAzhB4AAAAA6AyhBwAAAAA6Q+gBAAAAgM4QegAAAACgM4QeAAAAAOgMoQcA
AAAAOkPoAQAAAIDOEHoAAAAAoDOEHgAAAADoDKEHAAAAADpD6AEAAACAzhB6
AAAAAKAzhB4AAAAA6AyhBwAAAAA6E6TQ+wQAAAAAUCcYoQcAAAAAUGsHQw8A
AAAAEBYIPQAAAADQGUIPAAAAAHTGHXpLS0v/v707VmEQhsIw+v7vWpRAlbiY
/nChtCBdHKpwzhQyZf3IDWmtrev67+MAAABwSsoufZfK673P87wsy79PBAAA
wCkpu/RdKm+MMU1Tik/rAQAA3FeaLmWXvtv3PaG3bVuiz0s9AACA+0rTpezS
d+8/1uuCL/se6wEAANxLgq4qL4vxrfZrhlPuAQAAXF/arSY26+ZuHKkZzmit
PQEAALi2tFtF3OfE5qHee3rwAQAAwLXVTwq/Ew8AAAAAAAC4mhcfJfdd
     "], {{0, 461.}, {593.5, 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{144, 144}],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSizeRaw->{593.5, 461.},
   PlotRange->{{0, 593.5}, {0, 461.}}]]], "Output",
 TaggingRules->{
  "Settings" :> {$CellContext`\[ScriptM] = 
     Rational[4, 5], $CellContext`chooseplot = 1}},
 CellID->435020502,ExpressionUUID->"26d41ef0-86f8-4af3-82e1-f3977c89b51a"],

Cell[BoxData[
 PaneBox[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
Qy8xMXH58uWlpaVNEXparVZu3nRK6AFwIvQAAA3TiKGXm5trjqt/42DmfPDB
B3YxHdAedthhmvn444/bmSYu/vSnP9W2cpMnNoKMM888U1FjJzdt2tSzZ89b
brnld7/73fnnn28e2pwvM9HUoUMH593Vm1dddZX52ZzGWrp0qXOBhx9+2IZe
mFvnZJooPj7eOfPqq69WjBQUFJjJTz/9VOF2zTXXXHjhheY9lvfcc4+5yYz5
qaeeClht6NALc0/a0OvUqVON23XSSSeF2Cjne4cCHm78+PGa88Ybb5jJEE+K
KOJMmv30pz+97777tDfsyb46bw02f/58s/7PPvtMk3oUM6l9u3PnTtWufj7+
+ONrfFdq6LdumtBbtmxZRUVFU4SeVquVE3oAgtX3rZtFdSH0AKCFaMTQ0z9A
5rj6Hw6qhttuu23KlCl2Mf2zdfTRR2uxp59+2s7MyMjQnJtvvrm2ldd4CRFn
6KnRdAxv3n55xx13mEYLCL2AaDryyCNt6Jn3lAac67n99ttt6IW5dU6micx5
NOuPf/yjZirH9nxXl8re3//+92pYJd7Bh1599+Rjjz1mTpU6t+u8886zn+mr
caPCDL3QT4qxevVqbeOvfvUrG2X2vZp13hrg5Zdf1jLaw2ZSAR5V/aFLJd6e
707aPvTQQzXeN/TFWNRfCQkJ2pymCz2tXA9B6AEIUN+LsRB6AACjcd+6ecop
p9T2vkTLfFqqdevWrVq1iomJsfPVAqeddppzyZ07d6anp5vzL3WGXrt27bTA
W2+9ZW9VOoUfeuazZs6TjHpoEyn2rZvhbJ2TaaKAq7VoJWeccYZ+2LZtm279
2c9+ZqNp/fr1Bx96e+q5J4cMGaLJjz76qF4bFWbohX5SAijHbrjhBt06cODA
+t5qXHvttVGOd9K2bds2ynEVmjvvvFOT48aNC3NLLfPdCtqHOuLSz00Relqt
Vq6H4BsWADQYoQcAcGrc0DOnwMaOHWvnvPbaa0oDe2A/dOhQLdClSxfNOeyw
w37xi18UFhaam8xxuI2C0tJSc9xu3k5ZZ+iZALHf3bBp0yaTaWGGXmZmpuJI
yzz33HPLly+fOHHipZdeas4i2dCrc+sCmCFdccUV9r2CgwYN0pw77rjDDsl+
SFA0vHBCr0OHDpr/4Ycf2jkBoVevPamZmrz88svt1Sw3b9581113Pf/88yE2
KszQC/2k5OfnP/DAA08//bRGaBYYPXp01HeXowl9a7Ds7OxDDz30/PPPt3PO
OussLf/555/vqY41c81P5zcvhMmE3q5duxTLBQUFTRF6Wq35GghCD0CDcdVN
AIBT44aemuiEE05QQOkQvXfv3n/+8591aN26dWtzYZDk5ORjjjlGh9/mi8y6
d+9uos/cNykp6eSTT1b9qXRUGeZC/fZteHWGnmmos88+W6WmOjjllFM0jPBD
b0/1hTePOuqoqO8oGczpJxt6obcumMmcY4899je/+c2zzz6rtR1++OHaA+ZS
JDqe1yC1wH333de3b19VpBlwnaGngouqvt6IbkpISNgTFHr13ZPmvNuFF16o
Z6Rbt27miiW1neOrV+iFflLEjO22227Tkr169dLubdWq1dq1a8O5NcDIkSO1
8GOPPWYm16xZo0nt8Ly8vD3fXehG7r777vq+1G3obd++PSsrqylCT6vVygk9
AAeD0AMAODX6F6YvWLDg+uuv/8EPfhBVfbXDf/zjH/a6/bfcckvUdxfe31P9
fkIlwCGHHGIvgaIfbrrpJnOF/KOPPvrBBx+0321tPnr2z3/+0/lYasbzzjvP
/FxaWtq5c2dzXz3u448/bt7iaKrKHPbb6/wbGuTVV1/tnKMhTZ48WRE3ZswY
HXWbz9Apo8LZumCmiWbOnKmGiqr+DoIrr7zS+TFApZz99Nm5556rPRPluOBM
jWOWgoICZZr5AjvzvlDlXsD7Tuu1J82us19GoL3qPF0Y4K677tIypp6MqAMv
ZzphwgR7PjH0k7KnujrvvPNOsy3mGqr2axrqvDWAXl3HH3/89OnTzWSfPn2c
PasnzsR7wBfWh0PlpQ3RkVJ2dnZaWlpThJ5Wq5XrIfRAhB6AhiH0AABOjR56
hipp06ZNtX3pdmj6JyklJaVhh7vaCj2uvaZl+DZv3ty3b1/1nZ2jfaJwOOqo
o4K3Isytc578UrPYb9MLkJmZqeP8+g5Yeyk/P7/OZeq1JxWtIS510mB1Pimh
FwjzOR02bJiNWfniiy9UynZST9aUKVPsu0DrS/tQa9AO1/7UXm3cyjNPk1au
h6DyADQYoQcAcGqi0Is4+nfQfEavQ4cOY8eOHTBgwJVXXhkV9IUO9RL8LkdE
KPVXSUmJuaZNRkZG44aeVqjVauV6CEIPQIMF11wIXg8WANDkCD1r8eLFv/zl
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
hte7d2+TRRqbVnv//feHeGgTeioOHW8fZDQ1roDQmzt3bt++fUtLS81kXl6e
bv3zn/98kI9yMKGnp0OHxI0YepMnT37xxRe14XYBvRiOPfZYvbSc96pxpvvS
0tI0+FtuucU5M3gTQiD0QjC/8gsWLLBzsrKyevbsOWPGjCZ6REIPAOAPhF6k
y8nJUcLoQOi8887ToaaKRj8/8sgj5lZzjHRmtdtuu83ceumll9oU0pHML3/5
S838+c9/fvvttx933HH6+emnn7brr3OBwYMHm4fQY11//fWHHHLIKaecomN+
c6sypHXr1lrgoosuuvHGG3/4wx+2atVKx8C1bc7f/vY3sy2qtltvvVU/aPKs
s87KzMx0bpENvdDDGzZsmGZqzsknn6zG7NGjR4g9GSmhF8CXoRdAL3LdevPN
N9c50xM1hl69EHohBIdeUyP0AAD+QOhFun/96186CurUqZOZ1GH/Oeeco9pK
Skra810WXXPNNTp00WR+fr45w2VD6eGHH9bks88+aya1wC9+8QvNmTlzZpgL
XHbZZYceeuj27dvNZN++fRWSc+bMMZOPPvqoFn755ZfN5Nq1a4855hjlmJKq
xs0xoaeys9fVfPLJJzVHm2kmA0KvzuHV962bYYaeWvXaa689/vjjlZBa+bJl
y+xNXbp0ufDCC7WlKmvlqlp19OjR+/bt00742c9+dtRRR+mOS5cuDVg+NTX1
n//854knnnj66adHR0cnJibaBQJCT7mq5c1n9Pr162e2V6vVTLuMdtdvf/tb
54Bff/11LZCSkmImq6qq3nrrLY1E6X3xxRePHTs2OPS067p166Z7nXDCCUow
bXIjht7y5cs1yFNOOUWbfP/992uHOENP++RXv/qV+cxa9+7dVfHmtKxmqtxr
m2mMGDFC2auX2SWXXKL1OD/41qFDBy2sF+ef/vQnbfhLL70U/r1WrFihBX78
4x+fdNJJGqc9jain1Z411mL/+Mc/gjdBMjIy9LugJY888siLLrqoc+fO2l32
IcIJPb0k9Lug++qBrrzyyldffTWc7Ro2bNhf/vIXvVD10BqAXqjOderV/sAD
D+hlqXXqBTN48GDnrbqvHkg3nXHGGXffffemTZtCDC/0wiF2b4hN018VbZf5
rzf6m2C20Syvn1944QW7hoSEBO0ErUG/cTfeeGP//v31UgzYP7U9g8EIPQCA
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
lGBmyRChp3FqbH379tXkyy+/rJ9zcnL2hx16esQ+ffqYtFSW7tixQ5s5YMCA
4NDTfDPn2Wef1To1hrS0NLulkydPduVpAQDUgNADACBMy5cvNwmzcuVK53wV
jZmvf1X3O2Ktc+fOqiSzTElJiQ0l593Hjh1rZprP+tn7dujQQT/bxZKSksz8
cePGmTl1XnUz+DN6YYaehmcmp0+fbpfZt2+fHisg9Pr376/Jjh07mpA0Kisr
X331VTM/nA8hAgCaAqEHAECYSktLU1NTlXvOK6uoa/QPnymgFStW7HfE2vDh
w51379Wrlzmd55w5b948s3Bubq7zvgrAgEc39fTGG2+YyaYLvS+//DK6+kOF
u3fvdi62ZMkSZ+jt3bvXTI4ePTpgqHPnzjU3bdy4se7dCgBoAoQeAAD1Ul5e
vn79+mnTpo0cObJfv34KN3uqTg243xFrEydOdN7RvKexd+/ezpn29FlA6Jlm
dBozZow5S2gmmy70Bg0aFF39ns+AAdi7m9DLzMw0k+YCLE72GjLK2PrvYABA
IyD0AAAIn7rMVkywgNBbuHCh874m9Pr37x+wwhpDLy4uLuChlY3mJvMmz6YL
PXOZ0IBx7q++sKcz9OxFOEOYMGFCw/YzAOAgEXoAAIRp06ZN5topprBGjx79
9ddfp6WlJScn1xh6ixcvdt7dhF6/fv2cM23omU/z2fsGf1fdRx99FF193U4z
eTChF/AZQ3uVThN65o4BZx6Dx2avxDJixIh1tdAjNmA/AwAOHqEHAECYRo0a
ZdIm4H2VCjoz3/wL2CihN3PmzIBHN1c+0UrMZANCTw9R48Dsd0YEfEYv4PsR
EhISnKFnLy8T/HHCoqKiVatWJSUlaZk69ikAoGkQegAAhMl86UD79u2dF2Mp
Ly9//fXXnQHVKKHXvXt356PYk4b2c391hp55uFdeecWupLi42CwzcuRIO7Oi
osKO34Sejg3M5KxZs5xDNZ/dc55t1CBNEjovECpDhgwxS5pTnAAA9xF6AACE
6X//+5/pl2nTpumfPM3JycmxUSNz5szZ30ihZ07e7dq1q6qqKikpyXwwsEuX
Lvb7GuoMPTNaVZj+rU9PT99ffYHQZ555xiy2YMGCkpISzX///fftI5rQ2717
t/kmBSXtokWLVILa2M8//9wuZkNv2bJlZo6W37x5s4aqQ4WvvvrKzNSYVcFN
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
ed68yt0GAewboQf5CD0AgHKW1bXJ2eXe4fXDgmVNwyIG3+R1Jn5ovvmqNizp
07m4ohNXc1XFoPtyLCL71LW8c3HFfz4sF2F4+01dYnrz8+z2v4u6syvWTyKt
bh9r6TWJH2R0yjy7uLJq5aAhgHWEHuQj9AAAfsHucMybV4cnFzv6p0VPFdQO
fCg1vsjteJjeJHow/HHFb3eLRYUpPD641UFDUan/vVXwe0LJ5aRPMc+r497W
u/IwrbAro7xX/CCfWkbquybEz9U3Oj8+bZ4zr1KIgM4QepCP0AMA6Ixl1TY1
ZxkYm2/7PFXV9q8kvPGqNiK5QjTXmRsFP1zJUZ6B2xXi5cygqNwfr+efiyu+
9KAsMrni2ouauNT1SHya1fY2v0v8ULlV/SUNQ+JnbOqZ7ByY6R9b78TZxRXL
6hq3LwR8CqEH+Qg9AEDAstkdC0ur49NLn0fmWnpN61VYN/ixvPdNXmfyx5b4
1PqYZ9WhieXn4opCYn3uWOGOy/cR2cFXDSJpf41fT8XwxxUxz6tvv6m7/65R
/HSifNMKuz6W9Rqq+4sbhipbRxu6JkQa9wzNDowviGCcnreYl62ra3YnN7YA
DozQg3yEHgAAuySqZ25xZWzK3Dsy19prqm4fK2kYyq7se1fU/TynPfFD8523
9dFPq/5KLBdtdfpa3rHIbOW5dyiL+EFczXgurvjC/dLLSZ+iUqquv6wVLfzg
fdOTjNaXX7PxQ6kxu+Jzfu1ASeN6OdZ1jrcYTZ390+Kfa2hCxOPSzIJlUcSj
1cYBRwQaQg/yEXoAAHiPze4wL1tNc8uDEwvdgzPNxvU8LG4YyqnsSy/peWXo
SP7YkvB3o4imyCeVlx6U/XKn6NS1vB/0UojbLEfDs4KickJi887e/NqP90pF
IEckV1x9Vi3+NeLe1t/7u/HRh+aUzLYXuR2pBV3inyujvDe3qr+gbrCsaViE
ZG3HeFPPZNvnqa6BGdGSg+MLo1Nm0+zyzMKKyEnLqo0LpcJ3EHqQj9ADAMAH
ORzO5ZU10SxjU+a+0fnO/unG7smqtlERiSJ2PpQa3+Z3Pc1qS0xvjkutv/ai
RiTSxQdl5+KKTl/PFwF1JEx9yvnI8n1EtvgHORljOHMj/+fbhb/Frx+UFFEZ
/rgiKqUy5nn1jVe1d97WJ6Q1PHjflPRPy3pa5rS/yetMK+xOLzGKuhRVnl8z
UFS/HpgVraMi1es7J1yNKR6XnqHZzyNzA+MLw5OL49NLIurFo7awtLpkWVu1
rscm577iC6EHFYLcqJ4FAAAcGqvNbrZYp+cto1Pm/rH5roH144k17WPlzSMF
tQNZFZ/TS3pEzqzX4ofm+NSG6y9ro59WXU76JDroXFzxmRsFwVcNujn7VO0i
ulv05n+u5JyIzg2JzRMxfvZmgajOX+OLf08ouXi/9M+H5eJfXtR6VEpVzPox
zZqbr9cPa95Na7j/rlHkvCjQJxmt4sESEfrK0CEyX3To++Iekfwfy3vFoylq
1FDdLx5ZEaQljUPrTdoyUtU2Kh7xus7xxu71Mm3pNbnitHtwxjg02zsy1zc6
LxJ1aGJhxLQ4NmWemFkyzS6L54xo1TnzqshV87J1aWXNsmoT0SqeUaJbOe12
l4I28eq3I/SwGX0HAAC24XQ6rWt28Qu/+P1/fNosuqBnaFb0QkPXhOiI0sbh
/BpXNhpTC7pEhogeeZjeJApFpErM8+rI5Iq/Esv/uFf6y52i9XiMMfxwJeeI
6vJiOfjyXVjW0fCsYxHZ4gENiso5Hp0bfNVwMsawXrLX8n78GrP/vVXw0+1C
8dCfiysSVfvb3fWwFU+GC/dKRd5eelAmClc8PUIfrXduWNKn8McV4gkT+aQy
KkUsVdFPq64+qxblG/u8+tqLGrFcf1l741XtTbG8rr39pk4sd97Wi69z5mbB
2a/LlSeVCWkNCX83iuXe340ik8Xy4H2TaxHPTLGIcE78sL48+r9FdLT78vjj
v5bkTUt1+9he9yNCD/IRegAAQD6b3WFZXZs3r07NWcamzIMTC70jc50DM629
JpGQ1V+PPBbVD+bV9IuK/FBqTCvsfmXoeJbdJn7xFr+xx6c2iF/yxW/+ogVE
HYhYuHC/9Lf4YpEVIjFETor08LsLpbL4y/I8p32vT3hCD/IRegAAQK+cTuea
zS6KcmFpdWZhZXJ2edRkHhxf+Dwy1z0409433WJc78qa9rGK1tGypmFXWmZX
9n0s700v6Ukr7Hqd1yl+q3+S2froQ7MIzIS0hri39Tdf17oaM/JJZVjSJ1dm
nr9bci6u6KdbhWdu5IfE5p2Izv3hCrGpz4XQg18g9AAAALzK4XBabfYVq23J
sp6cs4sr0/OWiZmlsSnz8OTiwNfwNA7Ndg6I9pwS7dnYPVnXOV79NT/Lm0dK
GodEgebXDhiq1yM089Pnf8qMokP/LupOLeh6k9f5MrdDpMfTrLbkjNakf1oS
07826d+N8akNd97W33pdd/3lepnGPKuOSlmP0/DHFZeTPoUmlv/5sOzi/dI/
7q1X6q/xxb/cKfrpduHZmwWiVU9fyxO5GhxjEMUaFJUjovVYRLboVq7zQ+jB
XxB6AAAA2BOn02l3OGx2h3XNvmq1WVZtSytrZot1cdkqSnbOvH78VMTs1JzF
NLssknZ8er1qR03rYTs0sTA4viDytn9svm90TkRu7/B65/YMzXYPzoja7eyf
bu8Ty1Tb56nWXlNLr6nZaGrqmRT929g90dA1US+WzonajnGx1LSPfSzvfZHb
LuLrWXZbblWfqOOKlpFPXxeRyWIpaxp2LaWN64sI55KG9aX46yIiesNSWPev
pWDTIqbd678YoQf5CD0AAADAqwg9yEfoAQAAAF5F6EE+Qg8AAADwKkIP8hF6
AAAAgFcRepCP0AMAAAC8itCDfIQeAAAA4FWEHuQj9AAAAACvIvQgH6EHAAAA
eBWhB/kIPQAAAMCrCD3IR+gBAAAAXkXo4VCIBy4zM/Phw4fJycklJSVms3mb
jQk9AAAAwKsIPRycyLqff/45yM2FCxempqa22p7QAwAAALyK0MPBJSYmiidS
ZGSk0Wjs7OwMDQ0VH165cmWr7Qk9AAAAwKsIPRxQV1eXeBadOHFiYWHBtUb8
ITg4WKzs7+/3+CmEHgAAAOBVhB4O6N27d+JZFBcX577y7t27YmVqaqrHTyH0
AAAAAK8i9HBAd+7cEc+ijIwM95WZmZli5e3btz1+CqEHAAAAeBWhhwOKjo4W
z6Li4mL3leLDbd6mF7QFKfMCAAAA+rHVr9aEHg4oIiJCPIsqKircV9bU1IiV
oaGhHj+FpgMAAAC8itDDAUVFRYlnUWVlpftK0X1ipWhAj59C6AEAAABeRejh
gO7duyeeRfn5+e4r8/LyxMrr1697/BRCDwAAAPAqQg8H9PLlS/EsSktLc18p
PhQrk5KSPH4KoQcAAAB4FaGHA3Jdd+XSpUvuKy9evChWFhYWevwUQg8AAADw
KkIPByQelDNnzrhfj0U8QOLDn376yWw2e/wUQg8AAADwKkIPB5eeni6eSMeP
H7/9lfiD+LC6unqr7Qk9AAAAwKsIPRyc0+nMyMgICQlx3bDj5MmT79+/32Z7
Qg8AAADwKkIPh8XhcIyNjY2MjIiHafstCT0AAADAqwg9yEfoAQAAAF5F6EE+
Qg8AAADwKkIP8hF6AAAAgFcRepCP0AMAAAC8itCDfIQeAAAA4FWEHuQj9AAA
AACvIvQgH6EHAAAAeBWhB/kIPQAAAMCrCD3IR+gBAAAAXkXoQT5CDwAAAPAq
Qg/yEXoAAACAVxF6kI/QAwAAALyK0IN8QW5UzwIAAADoQdAmXv12hB422/ez
jjAEFGIHBFRh7wMU8t8dkNCDfIQe4I/YAQFV2PsAhfx3ByT0IB+hB/gjdkBA
FfY+QCH/3QEJPcgXUKHHzBL43cBfmFkKvxv4CzPL4ncz+93AX5hZCr8b+Asz
S6ENTOhBPkLPx/ndzH438BdmlsLvBv7CzLL43cx+N/AXZpbC7wb+wsxSEHpQ
iNDzcX43s98N/IWZpfC7gb8wsyx+N7PfDfyFmaXwu4G/MLMUhB4UIvR8nN/N
7HcDf2FmKfxu4C/MLIvfzex3A39hZin8buAvzCwFoQeFNt/jAwAAAMDh8uqv
9IQeAAAAAOgMoQcAAAAAOkPoAQAAAIDOEHoAAAAAoDOEHgAAAADoDKEHAAAA
ADpD6AEAAACAzhB6AAAAAKAzhB4AAAAA6AyhBwAAAAA6Q+hh98Sjn5mZ+fDh
w+Tk5JKSErPZvOOntLe3v3jxIiEh4f37911dXRKGBPRqT3uT2D1zPZmampIz
LaBLBoMhLi5OvBruuOU+XjEBbGN2djY+Pr6wsHDHLZuamja//FVVVUkY0tcQ
etgl8SL1888/B7m5cOHC9r80ZmRkBP2beNWTNjCgJ3vdmxoaGoI8aWxslDYz
oDO1tbWu/WhmZmb7LffxiglgG1arNSIiQuxKT5482XHjy5cvb375CwsLkzCn
ryH0sEuJiYliN4mMjDQajZ2dnaGhoeLDK1eubLX9yMhIcHDw8ePHc3Nzh4aG
Pn786NrRWltbZY4N6MA+9qYPHz6IDcLDw9/829jYmMzJAX1wOp3FxcUhISG7
DL29vmIC2MbU1NS1a9dce9+OoWez2cQrptjyxYsX7i9/eXl5cqb1KYQedqOr
q0vsMidOnFhYWHCtEX9w7Uf9/f0ePyU2Nlb87atXr7Q1Yi8Ta+7cuSNhYEBP
9rE3xcfHiw3Er6ZSBgT0zGQyufZBzfaht49XTABbKSgoOHXqlLb37Rh6g4OD
YrOff/5Zzng+jtDDbrx7907sNXFxce4r7969K1ampqZu3t5qtR4/flz87cDA
gLZyaGhIrBHrLRaL1ycG9GJ/e9P58+fFBn19fbLGBHTLdeL0yZMnCwsLXb22
fejt9RUTwDZcr4DR0dHPnj3bTeiVl5eLzW7fvi1nPB9H6GE37ty5I/Ya8WLn
vjIzM3OrXam/v9/1W6jT6XRf73qJ5JdPYPf2sTeJ/6F2/T+fOTk5YueNiIh4
9OhRfX29rJEBXSkqKhK/YbreYSdyb8fQ2+srJoBtiMSrrq52OBzZ2dm7Cb1X
r16JzeLj41NSUqKiom7cuJGWlra4uChnWl9D6GE3xF62+TQw8eFWbzpob2/3
eNzc9eZ03qYH7N4+9qbOzs7N70MXkpOTZUwM6Ndujujt9RUTwG5kZWXtJvRi
YmI2v/z99NNPgXniNKGH3XBd6aiiosJ9ZU1NjVgZGhq6efvm5mbxV7///vuG
9X/++adYz5EFYPf2sTcZDAbXS9vbt2/FS9vg4GBSUpJrTWVlpZSpAX3aTejt
9RUTwG7sJvScTuePP/4oNrt48aJonPHx8erq6nPnzok14kVzbW1N2rQ+gtDD
bkRFRW3+FVG8iomV4hVt8/ZtbW3ir/74448N68Uvq2K9+MXVi7MC+rKPvclk
Mom9dcOdFOLi4sT2MTExXpwV0LvdhN5eXzEB7MYuQ0+8LBYWFmqXQhL6+vpc
b/Tr7Oz0/pi+hdDDbty7d0/sIPn5+e4r8/LyxMrr169v3n5kZET81ZkzZzas
F2vE+u7ubi/OCujLYe1N4n/txfZnz5497AGBALKb0NvrKyaA3djlqZse/fXX
X+JzCwoKDn0qH0foYTdevnwpdpC0tDT3leJDsTIpKWnz9maz2XWemNVq1Vau
rq66VppMJq9PDOjFPvam+fn5wcFB8V/3la5TQAk94CB2E3p7fcUEsBu7Cb21
tbXx8XH3i1S7uE6oJvQIPXjkehf5pUuX3FdevHhRrCwsLPT4Ka4rRdTU1Ghr
qqurxZr//ve/3p0V0J297k03btwQf3v37l33la5LvkdHR3t3VkDXdhN6+3jF
BLCj3YSe0Wh0/b+gQ0ND2koRL6478bW3t3t/TN9C6GE3xCPrOk9Me3e5eJRd
VzEym82uNWL3EU+niYkJ14euGw+Fh4cvLy+LD8V/w8LCxJqPHz8q+REA/7Xj
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
AAAAAAAAAAAA8DX/H6kePIY=
     "], {{0, 461.}, {593.5, 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{144, 144}],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSizeRaw->{593.5, 461.},
   PlotRange->{{0, 593.5}, {0, 461.}}]]], "Output",
 TaggingRules->{
  "Settings" :> {$CellContext`\[ScriptM] = 
     Rational[1, 5], $CellContext`chooseplot = 1}},
 CellTags->"Snapshot",
 CellID->203531714,ExpressionUUID->"8dbcc7e4-36e5-45fa-ae0f-243f0494b04a"],

Cell[BoxData[
 PaneBox[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzs3Ql4VNXB/3Hcaq1L615369bWpa1v3atvq3VtbV2L1trXPcgiCMiOCAgI
KIhLQVAEWWWRRQghwbAbBAwBspCQkBAIWUlCEkISsv1/75yX+7/OTGYm20xm
8v08Pj5zz5x777lLkvPj3OUXL/Z4POz4Dh069P6x/vf4C/3u7tXrhQFP/EwT
/+jeu3On7q+8/FD3N17p9Eqv2148QYVT9L+ZJ3bo8L+f611UVVWVlZUdBAAA
AAC0bcpuSnCusc4p4hU7lJSUHAYAAAAAtG3KbibENRT3ysvL9W1paWm5QwUA
AAAAoG0z8U05TmlOH9ymPOXBI0eOBLqlAAAAAIBGUI5TmnPKeuaKTVIeAAAA
AAQpK+tZ13AWFRWZKzYD3TQAAAAAQBOZaziV75TyKisrzQBfoBsFAAAAAGgW
c1OeUp4SX0lJCRdtAgAAAECwU7JTvlPKO3jw4OHDhwPdHAAAAABAC1C+M6/Y
I+gBAAAAQGgg6AEAAABAiCHoAQAAAECIIegBAAAAQIgh6AEAAABAiCHoAQAA
AECIIegBAAAAQIgh6AEAAABAiCHoAQAAAECIIegBAAAAQGClO2xxiPohU2gq
+L5Agh4AAAAABBZBDwAAAABCRqLDct+Yyr4slqAHAAAAAIFC0AMAAACAkGGu
xnRNc4d+yLWCL5dxEvQAAAAAwP8IegAAAAAQYsxTVpoQ9MyMnhdO0AMAAAAA
/yPoAQAAAECIMW9PcBvuGmIqmxk9L5ygBwAAAAD+R9ADAAAAgBBD0AMAAACA
EEPQAwAAAIAQQ9ADAAAAgBDDUzcBAAAAIMQQ9AAAAAAgxKQ7NCHomRk9L5yg
BwAAAAD+R9ADAAAAgJCU6OCa5twylX1ZLEEPAAAAAAKFoAcAAAAAIclcjWme
shL1Q6bQl8s17Qh6AAAAABBYBD0AAAAAgGcEPQAAAAAIMQQ9AAAAAAgxBD0A
AAAACDEEPQAAAAAIMQQ9AAAAAAgxBD0AAAAACDEEPQAAAAAIMQQ9AAAAAAgx
BD0AweiIR4FuHQAAQIAR9AAEEXuaK28AiQ8AAICgByAoOOU7/coqdSixMSX6
yinxBbrtAAAA/kbQA9D2WRHP5LtDhw4VFBTk5eXl5OQcOHBgv4M+aFKF+koV
rMRH1gMAAO0QQQ9AG2ePeEVFRYpyWVlZ2dnZ+sWlksrKyloHfdCkCvWVKqia
KtvjXqC3AwAAwH8IegDaMivlHTp0SNlNIa6goECF9R6pgqqpsmbRjGQ9AADQ
3hD0ALRZJuWVlZUVFxcrteXm5mrSc8SzU2XNohk1uxZC1gMAAO0HQQ9A22Sl
vMLCwgMHDhQUFPge8ew0o2bXQsh6AACg/SDoAWiDrJRXVFSUlZWl31FNS3mG
ZtdCtCiyHgAAaCcIegDaGvOcTHNfXnPG8lzH9cz9ejyHEwAAhLxgCXpqYa9e
vWbMmBHohrRFmZmZzz77rI87hz2Jts8M55WWlubm5ubk5DQ/5RlalBaoxTKo
BwAAQl6wBL29e/d26NDhqaeeCnRDAi8xMTEqKkqHzCqZOnWqds61117ry+zs
SbRxZrjN3JqXlZWlDy0V9LQoLdDcrMegHgAACG0EvaATFhamXbFhwwarJD8/
/80334yMjPRldvYk2jj7cF5eXl5LpTxDC2RQD6FquW/CHQLdWABAqyPoBR3X
oNco7Em0cebuvOLi4v379+tDywY9LVCL1cLNnXqB3lagJRH0AAB2LR70du/e
3aNHj1//+tdnnnnmY489tmDBAuurxx9/XOXWwJN6WY8++qhKtm3bZs3bvXv3
G2644Sc/+cltt902evRoa14rnnzyySf/9V//dcopp9xyyy1Tpkyxrzo7O/ul
l1666qqrTj75ZC2kZ8+eZWVl5qv4+HitaOTIkVqmvlKF6667bvr06fbZy8vL
R40a9Yc//OHHP/7xtddeO2PGjCFDhmiulJQUX7bOVbdu3VQzISGhY8eOZ511
1oUXXvjiiy/GxcXZ62gJWuNPf/rTc8899957712zZo31ldXmfv36/eIXvzjp
pJNyc3NVosraFZdeeqk+r1692rRKn9Vaezu97kl7M6ZNm/bwww+ffvrpv/3t
b3v37n3gwAHPGxUTE3PfffedeuqpapiOgvbzoEGD1CStTptjWuX1oBifffbZ
7bffrhkvueSSJ554Ii0tzfdv3UpKStLmW5MZGRmHDh2yJnNycuxXvVp0Nmr3
auekH7MHgZDmoCO4Y8cOHcqWTXmGFquFaxVmXYHeYsAL65eSfkHp15SHf6Bw
zXQlx7h+5fV3KQAg2LVs0MvPz1dEUo64/vrr//znPyuOHX/88UuXLjXfKsVo
8uqrrzYd78mTJ6vmc889Z75VD1wJQiVXXnnl/fffr769Pj///PPmWxNPLrro
oh/96Ed33XWXIkMHh/nz51sbcs0115hVK7MoiNnjzJYtWzSpsKAQd88996gN
ZvaoqCir8Qo4KlF4eeCBB8xWXH755fr/zp07fdk6V3//+9/N5px22mlapj6Y
gJaVlWUqfP755yo544wz9K3Sqz6reZs3b7a3+bzzzjvuuOMUS++++24dJqXL
yy67TOX//d//rc+msiKhSl5++WXf96Q96JkDoZSnZpg9oz1cWlrqYaMuvvhi
HYIHH3xQh0OTWotartkVKs0W7d+/3+tBkQ8//NAcFzVeG6gtPf/884uKinz5
1om2esSIEab9Ssc6xzSpvadJhVB1jRRITWPCwsJcZ1f3Kf2HAt25a6eUvFJT
U5OTk7dt26aQ3hpBT4vVwrUKrYigh7bP6VdTXl5eQ390CHoAALuWDXovvPCC
OtJvvfWWmYyNjVV8+OlPf2oN4pgwpY63ws5ZZ52lPrz1N+vf//63vurevbuZ
VKr6xS9+ob79rl27Ko7FE00uWrTIVPj444/tqWHDhg033nijNbv+rp177rkn
n3yyPlQcC02atAabhgwZohKt1EzGxMSYIJmZmWlK3n33XRMGraDndeucmEyk
ZGcNkHXr1s2+UoWvm266yRrQHDt2rL4dPHiwmbTavGLFCvtiXS/ddAp6vuxJ
a7+pu3vSSScpuKn3a0oUvVXhnXfe8bBRzz77rJmcPXu2OS6rVq0yJc8884xK
vvrqK68HRbT5J5xwgkmFomim+lb69vytk/Xr16vNSt9auzLdb37zG221OYJj
xoxRCNWizGS/fv1cZ7eP5RH0AsgM5+lc1fmvU7c1gp4Wq4VrFWZQL9BbDHjh
9KtJv6zc/g6s+GHQW+FA0AOA9qxlg96VV155wQUX2Eu6du2qrvXWrVvN5KFD
h6699tof/ehH9957r8rtEUbd8rPPPtsemnbs2DFr1qzU1NSKY/HkhhtusL5V
elK+8PCoScUozbJ9+/aKY6Hpnnvusb5VfDNDV2by/fff1+SkSZPsS7j++uvt
Qc/r1jkxmWjmzJlWSWlp6RlnnHH11Ve7ra8+p+o/+eSTZtK0+aGHHnKq5jXo
+bInraA3bdo0Tf7nP/+xKmdnZ6vkkUce8bBR1rCjDqgZsLMqmAWOGzfO7ez2
gyI333yz2UVuL0by/K0rNUanhGa58MILlTRzc3NNsjv++OMfffRRbb4Z4Fu2
bJnrvAS9NsIEvaSkpE2bNpWXl7dG0NNitXBziS9BD20fQQ8A0DQtGPTy8vJM
v/p3Nqbk008/taqpi3XiiSeq8JVXXrEKTbj405/+1NDCTTyxQpBxySWXKNRY
k8nJyYMGDbr//vt///vfX3XVVWbVZrzMhKYuXbrYZ1fevO2228xnM4z17bff
2is8++yzVtDzcevsTCZKSEiwF95+++0KI4WFhWZy9uzZCm533nnnddddZ66x
fPzxx81Xps2vvfaa02I9Bz0f96QV9Lp37+52u84991wPG2W/dshpdQsWLFDJ
e++9ZyY9HBRRiDPR7Oc//3nHjh21N6zBPq/fulq9erVZ/ty5czWptZhJ7dui
oiKlXX3+2c9+5vaqVC7dbCOsoBcTE1NTU9MaQU+L1cIJeggWjb10s8Qbgh4A
tBMtGPT0B8j0q/9ho9Tw4IMPfv3111Y1/dk67bTTVK1nz55WYWZmpkruu+++
hhbu9hEi9qCnjKY+vLn88uGHHzYZzSnoOYWmk08+2Qp65ppSp7Gehx56yAp6
Pm6dnclEZhzN8sc//lGFimMVx9KlYu8dd9yhDKuI1/yg19g9+eKLL5qhUvt2
XXnlldY9fW43yseg5/mgGFu3btU2/upXv7JCmXWtptdvnbz11luqoz1sJhXA
OzhuulTEqzg2aPuvf/3L7bw8jKWNMEEvMTFRJ0/rBT0tXKsg6CEoNPZhLAQ9
AIDRspdunn/++Q1dl2gxd0tde+21xx9//Lp166xyZYELL7zQXrOoqCgjI8OM
v3gNeq+++qoqjB8/3vpW0cn3oGfuNbMPMmrVJqRYl276snV2JhM5Pa1FC7n4
4ov1Yd++ffr2sssus0LT9u3bmx/0Khq5Jz/66CNNfvHFF43aKB+DnueD4kRx
7J577tG3Y8eObey3xl133dXBdiXtSy+91MH2FJpHHnlEk/PmzfNxSxEQ5t0K
OmPVv9Xn1gh6WqwWrlXwhgWEGIIeAMCuZYOeGQKbM2eOVTJmzBhFA6tjP2nS
JFV4/fXXVXLiiSdec801xcXF5ivTD7dCQXl5uem3m8spvQY9E0CsdzckJyeb
mOZj0MvKylI4Up0BAwZs2rRp0aJFN954oxlFsoKe161zYpp0yy23WNcKfvDB
Byp5+OGHrSZZNwmKmudL0OvSpYvKP//8c6vEKeg1ak+qUJM333yz9TTLtLS0
Rx99dODAgR42yseg5/mgFBQUPP300z179lQLTYXp06d3OPY4Gs/fusrOzj7h
hBOuuuoqq+TSSy9V/S+//LLCER/MMz/tb15AG2SC3qFDhzIyMgoLC1sj6Gmx
5qUbBD2EGJ66CQCwa9mgp0x01llnKUCpiz5s2LC//OUv6lpfe+215sEgKSkp
p59+urrf5kVmffv2NaHPzLtr167zzjtP6U9JRynDPKjfugzPa9AzGeryyy9X
UlM6OP/889UM34NehePBm6eeemqHYxQZzPCTFfQ8b50rE3POOOOM3/3ud336
9NHSTjrpJO0B8ygS9TDVSFXo2LHjiBEjlCJNg70GPSW4Do7njeirxMTECpeg
19g9acbdrrvuOh2R3r17myeWNDTG16ig5/mgiGnbgw8+qJpDhw7V7j3++ONj
Y2N9+dbJ1KlTVfnFF180k99//70mtcPz8/Mrjj3oRh577LGWemUkWoMV9Pbv
33/gwIHWCHparBZO0EPoIegBAOxa/IXpa9asufvuu3/84x93cDzt8B//+If1
3P7777+/w7EH71c4ridUBDjuuOOsR6Dow7333muekH/aaac988wz1rutza1n
//znP+3rUma88sorzefy8vIePXqYebXeV155xVziaFKV6fZbz/k31Mjbb7/d
XqImLV26VCFuxowZ6geae+gUo3zZOlcmE0VERChDdXC8g+DWW2+13waoKGfd
fXbFFVdoz3SwPXDGbZulsLBQMc28wM5cF6q453TdaaP2pNl11ssItFftw4VO
Hn30UdUx6cno8MPHmS5cuNAaT/R8UCocqfORRx4x22KeoWq9psHrt050dv3s
Zz8LDw83k8OHD7fnWR04E96dXliPtkbJS6eN+qXZ2dnp6emtEfS0WC1cq9CK
CHoIJQQ9AIBdiwc9QykpOTm5oZdue6Y/Sbt3725aB0xbofVaz7T0XVpa2ogR
I5TvrBLtEwWHU0891XUrfNw6++CXMov1Nj0nWVlZ6nk2tsHaSwUFBV7rNGpP
KrR6eNRJk3k9KJ4r+HhMJ0+ebIVZmT9/vpKyNamD9fXXX1tXgaIt0xmr46XT
W2evzuGWTXnmh0IL1ypIeQgxBD0AgF0rBb2go7+D5h69Ll26zJkzZ/To0bfe
emsHlxc6NIrrVY4AvFL+KisrM08QyszMbNmgpwVqsVq4VkHQQ4hxTXMeBLqx
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
op2zZcsWq0Qn2/Dhw9euXduq69XPQmpqKkEPABC8CHrBLicnRxFGHaErr7xS
vX0lGn1+/vnnzbcmFl3i8OCDD5pvb7zxRqvrkp2d/ctf/lKFV1999UMPPaRu
sz737NnTWr7XCh9++KFZhdZ19913H3fcceeff35RUZH5Vn3ga6+91vzz+5//
/OdTTjnl+OOPV1RpaHP+/ve/m21RanvggQf0QZOXXnppVlaWfYusoOe5eZMn
T1ahSs477zxlzH79+nndn20/6DkJyaDnRL+d9K0OpdfCgHAb9BqFoOeBa9Dz
D4IeACDYEfSC3b///W/1grp3724m1ef8xS9+obS1a9euimOx6M4771Rs0WRB
QYEZ4bKC0rPPPqvJPn36mElVuOaaa1QSERHhY4WbbrrphBNO2L9/v5kcMWKE
gmRUVJSZfOGFF1T5rbfeMpPqO51++umKY+o+ud0cE/SU7Kznanbr1k0l2kwz
6RT0vDavlS7dnDt37u23364NOeeccxRgV61aZX2lfumvfvWr9evX33vvvaee
eqoOx6RJk5R8+/fvrzisrK0ZtX+c6sfFxT355JNnnXXWBRdcoJy+detWq4JT
0Hv99ddV39yjpx1rDVmq0Krz9NNP//a3v7U3+O2331aFbdu2mcmSkpJRo0ap
JT/+8Y+VxKdOneoa9JKSkl577TXNdeaZZz7yyCPa5BYMejt37tQatbHnnnuu
DuL27dvtQU+R/LrrrjP3rL355psmy2tnqvBvf/tbQ4XG7Nmz1dozzjhD56GW
Y7/xTbtOlb/99lsdGu2xkSNH+j6XTjmdnDpA559/vtppDSNqN5pTzrTkmWee
cd0E0QnQqVMn1dQO16HRGVtdXW2twpegpzO5V69emlcruuOOO8aNG+fLds2Y
MePRRx/VEdSq1YAdO3bYl6mzXT9ZOkW1zJtvvnnKlCn2bzXvH/7wB32ln8eO
HTtmZWV5aJ7nyh52r4dN08+gtutnP/uZds7ll19uttHU12ed0tYSMjMztRO0
BP160Q/7+++/X1dX57R/GjqCDSHoAQCCHUEv2KmTdvbZZ9tzk/pys2bNUhel
4lgsmjdvnvWtua1pzpw51uzqaduP/pIlS1Rh8ODBPlZQ/9DcMua2O3TllVeq
M28vMQ1QkHG7OSboaWlWiRKE+odXX321mXQKel6b1xpB79NPP9Uy1ar7779f
HVd9Vu9dXVDz7cMPP6ySiy666Prrr9d6f/SjH2nyvvvuUx3Vv/XWW8281mNP
TH0ziKkK1iCmVcEp6OmDJlWoz//5z38efPBBTWonqCP9xhtvmDpai9Zrb7PZ
7VYjFZQ0ecoppygamMR02WWX2YOegrYZKVYP+Z577jFDsV999VWLBD31sbV/
tHCt+qGHHlL33tx4aAU9xSVNmq74xIkTtWma/PnPf64srE57Q4Xy+eefm937
l7/8xWzXn/70p6NHj5pvH3vsMTOLgs/dd989ffp03+fSEVGmVmt1HDWp2a15
zRFUfFBLBg0a5LoJNTU1ysua/M1vfqNmK2vosxUJ630IejohdSCskWvtMX3W
z4Ln7Zo0aZL5RwCdh7/73e+OO+648847Lz093XxbWVmpjVIFNenFF1+8+OKL
9VkRyT6vKqhtOkl09LV8/Yy7bZ7nyp53r4dN08+1dql+xs0O1+ft27erXDtK
JVqXWYJCtDlXtXAdCxMMFaWt5nk+gg0h6AEAgh1BL6hlZ2ebXlNDFUwsUu/I
Kpk8ebJKpk6dWuG47NN1dnMp4F//+ldfKohCmTqQpp/ZsWPH2bNnl5SUmK/M
9XjyOxtToqzktsEm6CUkJNgLb7/9dq2isLCw4odBz5fmtUbQ+5//+Z/f//73
1vNP3nnnHa1i4MCB9uCmbryZnDFjhibV/pUrV5qSp59+2qRve/1LLrnEepCm
uVbt2Wef9Rr0Shu4dNNz0FPKVnsUN3bt2mXPffag99xzz2lS5WZy8+bNZihW
nermBz2zB/r162cmtc8vvPDChoKeqLNt8oh9Ia6Fisbaau1JnRimxAxTvvfe
e/YOv3a4Mk5j53r00Udra2tNMDnnnHNUkpmZaSq4vXTTvgk6VXTC9OrVy3xV
VVWlwKW4oQ+mxGvQMyPj1hK0t6+88krlKZPa3G6XzpATTjjh3HPP3b9/vykx
/0Bx1113mckVK1ZoskePHmZSv0zuvPNOK37ecsstJ554YkFBgZkcM2aMNmHd
unVum+ehstfd63nT6t1duukU9My5OmDAADOpE8PE6ujoaFPi9Qi6RdADAAQ7
gl5QU0fFjBY1VMH10SX2oKc+mD4/+OCD9llMeLznnnt8qWAoOJhr/ExYuO66
68yVnCaDmJBiUdbTAr/++mu3DTZBzwxHWv74xz+qUOt12iJfmueHp24mJydr
FY8//rg9uFljZ+r9mn1i1f/ss89UMnbsWHv96dOnWxUUac0gppls8aA3ceJE
ewNKHVdyXn755fagp862krt9CZ07d1aFTZs2NbQffA96l112mZJOTU2NVfLF
F180P+jNnj1bJfbrDxVLzaGxd/i///57+3J8nMtcNGionSqxHgbiNei5Mqex
graZ9Br0dDiUTexXe+qsmz9/vglxbrfLPJryo48+shcqkZ188slmNC0iIkIV
9MPltpFm6HnevHn2ayAb4qGy193redPqfQh6WoLT6WQy7LBhw8yk1yPoFkEP
ABDsCHrB7qKLLrrwwgvtJepHmav+KrwFPbngggsuvfRS++yrVq1Shd69e/tY
wW7Hjh1KWCZEmJLzzz/fuurSFyboOT2tRQu5+OKLzWenLfLavFYKejNmzFBL
7rjjjmuvvdY84ubRRx+1B7esrCyrsulOW5Nz585VyZgxY+z14+LinJLacccd
Zx6t2eJBz0S2yMhIewWz503QU+NNQv+tjSn55JNPmhn0TD//z3/+s71QB7T5
Qa9Xr16mkf9l08HxKB57h1+p1r4cH+dSs61ZzBhuVFSUmfQl6OlHcujQoQ89
9NDNN99s7ukT640MnoOe2z1m53a7Xn/9dRVu2LDBXhgWFqbCbdu21TveXajc
18HxfgqdyUOGDFGusWoqtR1//PH6Vj9iOi4LFiywxh9deajsefd63bR6b0FP
P6r6SXFagvnXHp3S9v3j4Qi6RdADAAQ7gl6wM3cqjR8/3kyq83bXXXeZLn2F
D0Hvr3/9q/n3dmv2u+++u4PtJj7PFQoKCp5++umePXuq3FSYPn16B9stcuah
l9bSRAFHHTB1Nd1ujokb6n+aoCoffPBBB8dlaWbSaYu8tt90+a644gof96cv
Qc88AOfEE0+87bbbHn/8cUW85gc96ypK47//+787OC4ta42g9/zzz+vzmjVr
7BXMYk3QMx1pecJGWU95edGiRc0MeuaIOMUi9aibH/RMilE7n7a5+uqrne5l
cwpETZhr9OjRjQp633///ZlnnqnJiy++WA02lxr6HvTMJdAPPvhgQ7vU7XZ1
6tSpg+NmWHvha6+91sE2tqUIox9YtfyMM87o4LjAWEHeqrxz5079aJun5soN
N9xgXZzpqqHKnnev102r9xb0zPXb+j1gn8Xkx/vuu6+h/eN0BN0i6AEAgh1B
L9gpIJx33nkKHUocAwcOVPQwscJ86zXo6auzzz5boUD9/H79+pl/4Vf0sM4H
rxXMGtVVUyIbOnToWWeddfzxx6uPZL5V908lJ598snp3w4YNU5dSldUb9PzU
TXU7f/e73/Xp0+fJJ5886aSTTj/9dOs2Q6ct8to8Mc++0KonTpzodX96DXom
WF122WVWlFM3vvlBz+k5JzqmF110kfnchKB3xx132OtIx44draA3btw4fdbe
sM9iHohhXbqpBljXjvrI90s3zz33XO1Ae4nyY/ODnkKKSrR7G1qv20DUhLka
G/TMk2PtV1E+9dRTvgc9UULU+WAvUfpQxjEXYbrdrilTpnRwXBJsL7znnnv0
42l/+bhRVVWlmvo1okBqbmSzS05OVmjqYHtUiwdOlb3uXs+bVu/DpZsXXnjh
5Zdfbl/C+vXrO9huAiXoAQDaJ4JeCDCPVT/llFPUdTnttNPUw9QBNV+98sor
pj9pVTbdv2nTplkl6hSZxyqqXF2m5557znoLni8V9u7dq862ebbkcccdpxC3
atUq++xr1qy5++67zZPu1MlUTsnIyGhoW0zQi4iIMLlDC7z11luXLVtmVXDd
Iq/tnzNnzgUXXKBvb775Zq8702vQi4mJ6eB4Y4VVYgbLmhn01LbCwkJTMn78
eBMczKTnoGfu07ziiivsjTRjRp9//rmZ1DEyadcEvW+++Uafr7nmGnWnTQVz
i5w96JmHec6cOdNa5qhRo9RU6xE0zQl6DzzwgGmemaysrDSX8zUz6JnErRPG
et6jjsITTzwxZMiQhjr8TZvLKSaY8aOrrrrKvlj7JpglWHeE6XCYAT7fg97j
jz9uj4rKYubGVXNfntvt2rZtm/lHFSvWrV69+oQTTrj++uvNpJLdv/71L/ud
azol9HOkI6h9q6/69OljhT79EHWw3fVm57my193redOke/fumpw1a5a1Rqeg
Z35p6HeatQT9PlTJwoULTQlBDwDQPhH0Qoa6Mer/NLlPotmVHZpcQedPcnKy
eTCmW8pNqlB67ILMhpg+m9JWhSNCWm/T88pr+5XdrMeBeuA16Gkh5513nhr5
5JNPDh8+XIHo5JNPbn7QO+OMM37729/26tVL/V4ziKmOri9BT0yIe+ihh9Rb
NiXmgfbqtCtuDBgw4NJLLzVJ3HpEjHkYxa9+9avXX3/9qaeeUk3zrnkr6OmD
GYrt2LHjW2+9ZS7B/fWvf90iT93cuXPnqaeeqoWrGf3799eGm0fiNzPo1R8b
O7vhhhsGDhzYr1+/888/3z6c5DYQNWEu15hw9tlnq+Rvf/vbp59+6roJ5uk3
CuNvvvmmAtHPf/5z8+8evge99PR0tUonho6+IpIZsb3nnns8b1ePHj06OB4E
1Ldv3xdffFGHWOu17tpT+zs47pXTVk+ZMsVcBP7000+bb80q/vrXv6rxI0eO
1AYqJCYkJLhtnufKnnev500TndUdHO8r6dmzp077epegp8lzzjnHXDYwaNAg
c42BNsd6PAtBDwDQPhH00KbYg15A+HKPXkxMjHkdmOm9z5s3r4PtqZtmExRR
7UHv7rvvtia//PJLlbz77rv2oLds2TJzf9Nxxx13yy23LF682Kq/Z88elSuO
mUlz1Z8KrQozZ85UdlDhTTfdZBWqb2+ym2mbGQm1npmZn5//73//2yREZUCl
D/PQe/szYVatWvWnP/3JGop94okn1O9taJ80KuhJeHi4NtM8wePGG2+Mjo7W
h3/961/m22effdacBmZSv51MlLYvwW1hbW1t7969zbsIOzjesm0fCdImqFBN
dWpMY+dSSFeJ9o9VsnDhQvOGiFtvvdV1E8zyzUN7lIA6d+5sLke0nrppHo9j
UkxDFPwfeOABs5DTTz9dh88aqvOwXToNrrrqKn2rJHXnnXfqNLNXmD179iWX
XGK2WllbrbIOnyKqThvzjxg6TNdff/369esbapvnyp53r+dNq3c8NEap2Sw8
IiKi3vHmCH3WTrPqbN68+b777jNLUCTUyWx/5Z8vR9CVgp5WRNADAAQvgh7a
lDYV9EpKSjzkmoyMjN27d3uo4CP7CKA6ltbb9BpL2U0tt5eo/QkJCdnZ2Q3N
om1UBae5nBQUFMTHx1uXlXrQqKBnFBUVWWmuZeXk5Hh4ckjLzmXRtnt4NGVN
TY3OGcWWJi+/3nEz3b59+3x55YGdgpiH9eoo6PRz+5XarBPSxzZ7rex593re
NH2rzOW5AarT0IY0wbZt2/bs2UPQAwAEL4Ie2hQlnbi4uAD2rHwPei3F9VLP
INWEoAe0WfpFRNADAAQ1gh5gl5ubqx+HoqIigl5jEfQQMqqqqnbs2KGgp7+M
BD0AQJAi6AF2+fn5BQUF/gx6ycnJW7du9c+6WtVehwqCHoJfZmamgl5GRgZB
DwAQvAh6gJ0CS15eXmFh4SGHQIen4FNB0EPwi4qKSkhI0K8Cgh4AIHgR9AA7
RZXc3Fwr6IXAQJufaR9WV1cHup8ONF1NTc2SJUtSUlL0l7G8vJygBwAIUgQ9
wIm6dvn5+f68ejOUaAfu2LEj0F11oOl0AsfGxubk5OhkJuUBAIIXQQ9wonyn
rOfnR7KEDO3A8PDw/fv3B7q3DjSFTt2lS5cmJSUp6HHdJgAgqBH0AFd5eXnm
tXTKeuZVCybx2QU6UbVR2nt79+6Njo6OjY0NdJ8daBydtJGRkQkJCeYPIikP
ABDUCHqAK3Xw1OsrLy83T+C0sp5dCdzR3svJyUlNTd2wYcPatWuVlwPdeQe8
04m6xmHHjh3mnyxIeQCAYEfQA9yqrKxU36+qqsq8Qr3IoRjeaNcpHWdnZ6el
pSnrbdy4MSoqKjY2VoV1dXWB7s4D/59OSJ2WOjl1iq5fv14pLzMzU38Kzb9X
AAAQ7Ah6gAfq8tXU1Cji5ebmmos5C+FRheNdhErHBw4c2Lt3b3x8/LfffmsS
X0xMjPm8zmGtwzrAL+znm05CnYo6Ic3ZqJT3/fff5+Tk6MecP4UAgJBB0AO8
Ki0trayszHXIgUcVjks3s7Ozs7Ky9u3bl5GRkZqaumvXru3bt2/btk3d6a0O
W4AAMWegTkWdkDt37kxOTt6/f3+x4/LsQP+mAQCgJRH0AB8dgQ/sO+qwg2Ky
utDqSBcVFR08pgAIEOsktG6/LSsr4315AIDQQ9ADAAAAgBBD0AMAAACAEEPQ
AwAAAIAQQ9ADAAAAgBBD0AMAAACAEEPQAwAAAIAQQ9ADAAAAgBBD0AMAAACA
EEPQAwAAAIAQQ9ADAAAAgBDje9D7FgAAAADQBhD0AAAAACDEtHjQqwcAAAAA
BMj3339P0AMAAACAUELQAwAAAIAQQ9ADAAAAgBBD0AMAAACAEEPQAwAAAIAQ
Q9ADAAAAgBBD0AMAAACAEEPQAwAAAIAQQ9ADAAAAgBBD0AMAAACAEEPQAwAA
AIAQQ9ADAAAAgBBD0AMAAACAEEPQAwAAAIAQQ9ADAAAAgBBD0AMAAACAEEPQ
AwAAAIAQQ9ADAAAAgBBD0AMAAACAEEPQAwAAAIAQQ9ADAAAAgBBD0AMAAACA
EEPQAwAAAIAQQ9ADAAAAgBBD0AMAAACAEEPQAwAAAIAQQ9ADAAAAgBBD0AMA
AACAEEPQAwAAAIAQQ9ADAAAAgBBD0AMAAACAEEPQAwAAAIAQQ9ADAAAAgBBD
0AMAAACAEEPQAwAAAIAQQ9ADAAAAgBBD0AMAAACAEEPQAwAAAIAQQ9ADALSe
kpKSOQ7Z2dmmRH93NPn111/bq+3fv3/evHmjRo0aMmTI+PHjCwoK6urqVq9e
PWnSpMGDB6s8PDw8EM33Tn8Wrc+VlZVz587V1qWnpzdqIZs2bdJcERERLd26
9k7dkpqaGvO5yUcHAIIUQQ8A0Hr27dsX5hAXF2dKZsyYock33njDqlNUVKTJ
MBv9rVmyZIm95MsvvwzQFjRIzf7kk0/Gjh1rLzGtXbduXaMWNXnyZM315ptv
tnQb2zXF5969eyclJZnJJh8dAAhSBD0AQOvxJehFRkaaOkOHDl2wYMGiRYtU
2K1bN5V07dp1ypQpCxcuTE5ODswGNGzChAlq4ZgxY6wSgl7bkZaWZo4FQQ9A
u0XQAwC0HtegV1BQkJKSsnfvXqvO3LlzTZ3CwkJTor81pmT69OkBaLRvxo8f
7xT0amtrd+/era0rKytr1KIIei0uNTXVKeg1+egAQJAi6AEAWlZNTU1RUZH6
1fXugp4rpTmnMT4lPs+DL5WVlSUlJV5bcvToUfs9dHbFxcX61usS6h2p88iR
I67lrkHPa2O0XW7b09igV1VV5XXzVcEcAifaltLSUs/zakYdQc/7x5c6bqkB
vhw7Hw+xHDp0yLUZrkHPM7M51dXVvlRu6JQAgDaFoAcAaCl79+59//33X331
VXWwu3fv/tFHH23fvt0p6C1fvlyJZty4cfq8ceNGfTZXaZqkIyNGjOjfv78p
6dmzp0qUg8y8Cjjz588fPHhwp06d9G2vXr20itzcXHsbFi9erFkWLly4YMGC
1157TTXHjh2bmJhovk1JSXnvvfd69Oih2dXOYcOGRUZG2gORQtCQIUO0hJyc
HC1BH0xLBg0apJabmunp6Srv3LmzWYg+a6vrHf1/M++2bdusBaryxx9/PGDA
ANNm6du379KlS+3ZxMegp7YtWbJE0dKsWvtt4sSJBw4cMN8q7wxx2Llz59Ch
Q1Whd+/eM2bMMG3WvDNnztSqTRvMrrPmtajl77zzjlm+Gqyt/uKLL5zCqS91
XCm1qTFar2mADsHo0aNd478vh9jQqTV16lRriwYOHBgdHW0evaLyPn36mPI3
3nhDO1aV3R4dURtGjhzZtWtXVdZGaddFREQ09pQAgDaIoAcAaBEFBQXKZWEN
cHuPXnh4uGtNkyDshg8frsr5+flWH9tOeUd/y6xmfPbZZ651TN9+2bJlVtqy
U/RTvjCzW4OJVoKwU4JQnYSEBKdyVa53dxfY6tWrXRdifPDBB1abfQl6lZWV
yiOuy1GY3bdvnyrk5eW5fqskW+8YVzXZ1kmXLl02bNhgrWLTpk1um6qtKy4u
9r2OK3UP3n77bbcz2p+/6uMhli1btrhdmjlAyqFO5dpMt/foKaK6Xc6oUaOs
6OrLKQEAbRBBDwDQfApKimNhjiGe5cuX5+bmpqWljR492uoPuw16+puSmZn5
4YcfhjkG7zIdDhw4YI0DLl68WCXq/9cfe/iJfP7551lZWcqV6rGb0cDXX3/d
uvHKHvS05ClTprz11ls1NTXW0zn69OmjmKBuf3p6urXMpUuXmtmtXr0MHjxY
NTMyMlatWmUNYKnC0aNH1aoRI0aoRAvX55ycnHqXoKdqZgBLzYuOjlY1tWHJ
kiXWqJa2wqzUa9BT+xUMzVzTpk1TcNu7d++XX35pSpSh6n8Y9BRJFGEUDJU0
lRCt9KSdr3l1dCIjI80WKeuZ3SsDBgww+yc5OVn7U/83DRPr9Ra+1HEVExNj
6syZM0c7UMdu/fr12i1hjqE9K2X7eIh37dplGt+7d++tW7eqmuKntY06ecyM
ZtLs+SNHjrgGPXWBrFNCn9XJSUlJsUKi9pXvp4TPPygA4D8EPQBA823evNm1
t19dXW11vz08ddPco9evXz+rxOpab9y40ZTEx8ebEqfHs1iRcN68eabECnrK
FPaapgPftWtXE8qM2tpaM0ymcnNHmLXq11577dChQ1bNqKgoU65kYUpc79Fz
ihLW4Jd2jr0lCpWm3Bql8hr0lCzMLE7jR6YNoo2ygp5arqRj1VGkMuVOr6iI
jY015Z988okmFaPM5MKFC606CokKU927dzfr9aWOWzoWZkYr09U7nraqlNS/
f3/zYjvfD7H5l4FXX33Vfknn7t27TTVF+3p39+i5Bj3zUg8FSX1lLUeZ2kT4
sGNJ3PdTAgDaFIIeAKD5vvrqK9NndnpIhZJaiwQ9s/ww25M5DXXLzfWiynGm
xAp69hSgfOE2RMiqVavMVwoa9lVbAzqGFRysJnkNeuXl5ZpLcc/+iA9FS/2V
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
loqpysvLe3t7/dunp6fPrUF85MbGRhl6TqdT7r+4uJicnCy2OByOtcYg9ICI
c3u8t6q7NK3381lLn91p9GgAAMAAhF7IxDA5OTmm1SwWyzpPmZubO3PmjOYp
jx8/DrqzPDS2f//+SA3sdruzs7PFa968eVPzraqqKs1U1dXV8ltjY2OmNVy9
evXt27fii8zMTPWr5efni40dHR1rTULoAVukrWdUc4eW7zJrHr+wsdAeAACJ
htALWUlJifjppaamms3mvr6+O3fuyPxZ5yCdXIlgz549LS0t3d3dV65ckU+x
2+2aPV+8eCG/FanQm5ycPH36tHxNTeg5HI7k5OSkpKS6urpPnz5VVlbK3d6/
fy93WOvvYmVlRewvr9FTv+DBgwfFxnVuyULoAVtncnoxo/Cl5tDeLyXWGdey
0aMBAAD9EHqhEY2ze/du8dMTleffKA/wPXr0KOhTRGqJmBI7qG9Ucvz48cCD
euPj47t27Ypg6FksFv8LBoaeXOX87t27/i33798XWy5cuLDhK/t8PvkRXr9+
Lbf09/eLhykpKSyvABjFqyh363s0rbfr9JOugUmjRwMAADoh9EIjJqmvr791
69bi4qJ/4+3bt4OeGCmVl5eL7xYVFak3OhyO7u5u/wVugtfrPXnypNhTHv6L
SOjJwMzNzZVHIdUTut1u+d2hoSH/RnmcTmxXf7q1iL9isfOOHTvET6OioiI1
NVU8DHoZoB+hB+ig0zax89QTdetty6h+YOlVFE7jBAAg/hF6kWKz2VJSUsTP
s62tLegO169fF9999erV2NiY6CDRXCIVxdea3UQrid3OnDkzODi4VugpiiKe
LgpRvbGyslK8eNC3FolntVrFs2prazWhJ99FNJ3mAJy8ocrHjx8389nb29v3
7t0rDxfu27dPvMv6+6910d9m3gvA5k3PLQUutJf1W8uXmY3/Gw4AAIgJa/2r
NaEXvurq6gMHDvjPivR4PEF3k2dIlpaWyoaSduzY0dzc7N+nv79fNJcIRqfT
OTQ0tFboiUKUz/W3XllZmey18fHxdUatqanRhJ54BXnZoGZPsUV9md5miJlH
R0c3sydNB+hG8fnKGv/alrmq9ZJ/qW/v1f5XJgAAEE8IvfDJW1lKJSUl4iME
3e3w4cP+y+4sFovoO3mKpug+uRKB+HTp6en+693WCT2xZ15enmy9rq4uWXlC
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
3/s6TyH0ABhiaHRWcyvOvReejX6ZN3ouAAAij9BDmAoLC8VvUVlZmXxos9mS
kpLS09MVRVnrKYQeAKM4ZxcPX1l1K87kvPo+u9PouQAAiDBCD+GYmpoSWZeT
k6PeaLfbh4eHfWvf6IDQA2CgxeWVX0qs6tb7Prv2ddeI0XMBABBJhB7C0dfX
J36FHjx48P79+1u3buXl5ZWUlIjKW/9ZhB4AY3m8yvU/OjW34qx+OWD0XAAA
RAyhh3BYrVbxK3To0CGTys6dO3t6etZ5FqEHIBqUN/6lab2bVe8VhWUXAADx
gNBDOOrq6mTc5efn9/X12e32y5cvi4eHDx/2ete8bzmhByBKNHc6tmetWnbh
zJ3WZbfH6LkAAAgXoRcORVHEMMXFxVeuXKmtrR0cHNzMU6xW6/3790UQiT9t
Nptmh4mJicePHxcWFl69evWPP/749OlTBAeempoqKChoaGgI/FZ3d3dpaamY
qry8vLe31799enr63BrER25sbJSh53T+51YGi4uLycnJYovD4VhrDEIPQPTo
/vjlx9w6desdvfpiem7J6LkAAAgLoRcyMUxOTo5pNYvFss5T5ubmzpw5o3mK
yDr/Dk1NTbKS/JKSkqqrqyMysNvtzs7OFq958+ZNzbeqqqo0U/nfdGxszLQG
kaJv374VX2RmZqpfLT8/X2zs6OhYaxJCD0BUcUzMpZ6zqFvv57OWz+NzRs8F
AEDoCL2QlZSUiJ9eamqq2Wzu6+u7c+eOzJ/Ag3R+ciWCPXv2tLS0dHd3X7ly
RT7FbreL7w4PD8vKEzFotVrfvHlTUFAgdxCvH+a0k5OTp0+flq+mCT2HwyHe
VxRlXV3dp0+fKisr5W7v37+XO6z1d7GysiL2l9foqV/w4MGDYuM6t2Qh9ABE
m2nX8rFrL9Stl5Rb1/1x0ui5AAAIEaEXGtE4u3fvFj89UXn+jfIA36NHj4I+
RaSWiCmxg/pGJcePH/cf1BN/iq/T0tL8V7cpinL48GGx8d69e+FMa7FYdu3a
5T8Spwk9ucr53bt3/Vvu378vtly4cGHDV/b5fPIjvH79Wm7p7+8XD1NSUlhe
AUBsWXZ7ztxpU7fe9qyaF28/Gz0XAAChIPRCIyapr6+/devW4uKif+Pt27eD
nhgplZeXi+8WFRWpNzocju7ubnmBm8ir/fv3iz/VOzx48EA8q6CgIJxpZWDm
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
vMiHDx+OHz8uHp44cSL8aUUtnj59Wr6dJvQcDkdycnJSUlJdXd2nT58qKyvl
bu/fv5c7rPV3sbKyIvaX1+ipX/DgwYNi4zq3ZCH0ACAm1L0e1LTew4bejZ8G
AIgChF5oROPs3r1b/PRE5fk3ygN8jx49CvoUkVoipsQO6huVyJSTB/V6e3vF
1z/++OPs7Kz8rvhCnga5mZNC12GxWHbt2uU/EqcJPbnK+d27d/1b7t+/L7Zc
uHBhw1f2+XzyI7x+/Vpu6e/vFw9TUlJYXgEA4kDL++HtWTXq1it6/E5R1vxf
eABAlCD0QiMmqa+vv3Xr1uLion/j7du3g54YKZWXl4vvFhUVqTc6HI7u7m55
gVtZWZnY4eLFi+odLl26ZPq6fkE408rAzM3NlUch1RO63W753aGhIf9GeZxO
bFd/urWIv2Kx844dO8RPo6KiIjU1VTwMehmgH6EHADHkXf/Ev0+Y1a137t6f
bs+ad9wCAEQDQi9SbDZbSkqK+Hm2tbUF3UGelvnq1auxsTHRQaK5RCqKr/07
XLhwQexQVVWlflZ1dbXYeP78efVGRVHE00UhqjdWVlaKFw/61iLxrFareFZt
ba0m9AYHB2XTaQ7AySOJHz9+3Mxnb29v37t3rzxcuG/fPvEu6++/1kV/m3kv
AID+BhzTO/Lq1a2Xc6NlYWnF6LkAAGv+qzWhFz7RYgcOHPCfFenxeILuJs+Q
LC0tlQ0l7dixo7m5We4gckxsaWxsVD9L3tZSc5meKET5XH/ryaOBotfGx8fX
GbWmpkYTeuIV5GWDmj3lPWH8l+lthtPpHB0d3cyeNB0AxJyRSVfqOYu69dJ/
fT49t2T0XACA4Ai98MlbWUolJSXiIwTd7fDhw3Kf/fv3WywW0XcnT54UD0X3
yZUI5Ou0tLSon9Xa2io2Hj9+XL1R/Bzy8vJk63V1dcnKCzwaGCgw9Do7O00B
d1MRjh07Jra3t7dv/ueweYQeAMSiqbmlQ5eb1K2Xdr5hzBn8//UAAMYi9MLn
dDonJyfNZrMoOPHzFPkWdDf53ZSUlJmZGbnF6/XKA2eyvGT3aU6/FN0nNooG
1Lyav/X8KisrNxw1MPREJ5q+rm+u2VOkn9guMnDD1wwBoQcAMWp+aSXrtxZ1
6+089eTj8IzRcwEAtAi9CJK3JRH8KacmO660tFS9UTz0t6FcbeHp06fqHZ48
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
ERx4amqqoKCgoaEh8Fvd3d2lpaUi08rLy3t7e/3bp6enz61BfOTGxkYZek6n
U+6/uLiYnJwstjgcjrXGIPQAALHI41UKKzo1t+J82NDLrTgBRCFCL2RimJyc
HNNqFotlnae8efPGFExHR4fc4cOHDz/99JP6WykpKWJjRAZ2u93Z2dniNW/e
vKn5lihKzUjV1dXyW2NjY0FnFq5evfr27VvxRWZmpvrV8vPz1R8qEKEHAIhd
lS/6Na136eEbN7fiBBBlCL2QlZSUiJ9eamqq2Wzu6+u7c+eOzB+bzbbWUyoq
KsQOWVlZ91cbGRkR3/V6vfv27RM7iBxra2sTPzoZkmLjyspKmNNOTk6ePn1a
TqgJPYfDkZycnJSUVFdX9+nTp8rKSrnb+/fv5Q5r/V2IqcT+8ho99QsePHhQ
bFznliyEHgAgplm7R77PqVW3XmbRy9n5ZaPnAoD/IfRCIxpn9+7d4qcnKs+/
UXbZo0eP1npWQUGB2KGxsTHod4eGhmRh+U96FK0ktwwMDIQzrcVi2bVrl/9I
nCb05Crnd+/e9W8R7Sm2XLhwYcNX9vl8x48fFzu/fv1abunv75cHIlleAQAQ
x/o/T+88tepWnHvONwxzK04AUYPQC42YpL6+/tatW4uLi/6Nt2/fDnpipJ88
1PXx48eg3x0cHJQh5r8uz3+92/o3sdxQUlKSeJHc3Fx5FFI9odvtlt8Vmenf
KI/Tie3qT7cW8Vcsdt6xY4f4aVRUVKSmpoqHQS8D9CP0AABxYGJ64eClplW3
4syt6/7IrTgBRAVCL1JsNltKSor4eba1tQXdQXw02XFms/nChQvZ2dmFhYXt
7e3+HRRFSUtLEzuIHJM/B3lkbffu3ZpTN8WeYp/u7m71xsrKylevXgV9a5F4
VqtVPKu2tlYTerIuRdNpDsDJwFyrSTXEp9i7d6/8dPv27RPvsv7+a130t5n3
AgAgeiwEuxVnU8cno+cCkEDW+ldrQi981dXVBw4c8J8V6fF4gu724cOHoD//
Gzdu+PcR7SZbb8dX4otdu3a9ePFC81L19fVyH3/rlZWVyV4bHx9fZ9SamhpN
6IlXEFv27Nmj2VNsMaku09sMp9M5Ojq6mT1pOgBA3PAqStHjd5rbs/z+lFtx
AjAYoRc+eStLSR6MC7qbrDPh999/HxwctNvtRUVFcov/SJxoup07d6ozcN++
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
d+bk5IyPjwcKei6XSyLb0NCQd2N1dfXz58/9fmuJeN3d3bJVfX39pqCnvotk
uk074NQFVYJnUg95F9999516d8ePH5fvErx/oJP+QvleAAAAiApzC8v1z8cy
ijuDLL+ubkcvmoqrX/W+mWY33w4E+mhN0Nu92tra77//3nNUpNPp9NtteHjY
78+/uLjY0+fdu3eSuSQwzs/PT0xMBAp6TU1NaieaJ+s9ePBA5bXZ2dkgpdbV
1W0KevIK0nLs2LFNPaXF+zS9UEjN09PTofQk0wEAAHw9Pi07Ol5O5t/r25/V
GDzxfZNWm3rtWaVpZGjszzVnwLW6EAqC3u6pS1kqN2/elLfgt5tKZ+Lu3bvj
4+MWi+X69euqRe2Jk3eXnJzsOd8tSNCTntnZ2SrrvX79WqU8UVNTE7xU36D3
8uXLGJ+rqYgzZ85Iu+8Oxz1B0AMAAPgKrbtcwxPzt5uHTxa2B098cvufjPqs
G12/PTWbrQuyod61Rx+C3u7Nz8/bbLaGhgYJZfLzzMzM9Nttbm5OAt2mRQfy
8vJkE0ltcl/yV8yXNQvUU0GC3oZX1vOorq7eslTfoCc5MebL+uabekr0k3aJ
gVu+5g4Q9AAAAL5yc4vLLT0TF8p6JNBtGfq+/bHhp5vdD9vNkhMd7OkLDUFv
D6nLkoiPHz9ua5MjR46oQyhFc3Nz5xfqZL3Dhw/L/VevXvluKz+No0ePqq08
8TA436A3OTkZ8+UimZt6qvMNR0dHQ3wj20LQAwAAgOJYW39lnitrfBPKbj65
/Su9LvXas4qmNy+GZ5Y+r+pdfuQi6O2Mw+F4//79psuhOJ1OteZCd3e37yaS
/iwWy6YMqI6clKDX1tYW5DzK1NRU3xe8f/++p4P3+XpB+AY9u92uXkHekadx
dXVVNc7NzW35mjtA0AMAAICvRfvqs1eTRQ9fJl5sDSX0ye27S48v3+9v6h5/
P7noXOcIz/9H0NsZSXnyo4uLi/NegEDuq4tVjoyM+G6Sm5srTxUUFHg3qtPr
srKy5AUr/uny5csqwcn9xsbGTa9WWVmpspi8gloIL5Ss5xv0Nv573ZWenh5P
iwTVmC9rwYf409gugh4AAACCm5n//PiFpbCy71BOS4ih71/pdWeudpTUDLb3
W60zS1/5mX0EvZ3x7Ly7devW+vrfxwnLV3VxlYSEBLV3bHFxUd6+56S86upq
Fc08axbInfj4+JgAS6gHOUevtbVVvVRtbe3Glx1wnqw3MzMTpGy/Qa+mpkYa
09PTl5eX5aF8TUtLC/Gkv50h6AEAACB0039+buuzXqkaOPaLKcTQpy7nklLU
8Wv1q9beibfWhZVV/9fGNyqC3o51dHSotHXs2LFr166dPn1aPfSso6f2i8XG
xqqHKysr6qKa6uorhYWFavefZDQVFTcJEvQkQp46dUqlPEVlPUlwm5bD28Rv
0LPb7eqMvKSkpKKiIrWqe0pKit+q9gRBDwAAADuzaF/tHpq61TB0tqjjX+l1
oec+uUlOvHj790rTaNfrqT9mPxn7UE+C3m50dnaq4x4VyXHeB09K4lN72Twt
NptN8p2n/6FDh8rLywPlKavVGuNv4QPFdyuXyxU85YmGhgZ5zRs3bmxqn5mZ
SU9P9xSWlpY2OTkZ/KV2g6AHAACA3XOsrY9a5us63+fdfRH6aX2e2760uhP5
bT/f7r3dPNzeZ5WX+rTs2Pq7RgmC3i5JvJqbmzObzUtLSyFuIu9CYtT09LQr
wg4bttvtFotFfgtbBsZdIugBAABgzy19Xh14O/ug7W1Oee/hkM/s23Tbn9V4
5mpHQWXfvdaRtj7r0JhtZv5zNO77I+hBewQ9AAAAhNtH++pL89xvT8359/q+
L2j7Jm0nuU/dvkmtTchtSbv+TAJgRdObhq6x7qEps3XBtriyFqnr+hH0oD2C
HgAAADTmcK6PT3180v9HeeOb87e6j/y87UM9g+wE/D6/7VzJ87y7L0pqBitN
o41d489eTQ68nTX/sfDBZl+0rzrWtM6DBD1oj6AHAAAA3f3lcI59WJREJtEs
/96L5P88+fZc/V6lP7+nBMb91CQBM6mg/WxRx48lzy+U9fxy5/fC+/1Fj14W
1wzerH8tIfRO8/C91hEp6cHj0Qdtb6va3j5sf/vq3baXtyboQXsEPQAAAEQg
t9s9v/TX8MR8e7+10jQiESz9186E3JZvwpb+Qrzdqt9ivWxfBD1oj6AHAACA
KOJcd83Mfx4asz0d+OPRE3NJzeDPFb1nrnYczmnZl7a9JR52GPQaCHqIAgQ9
AAAAGIPb7V76vPrH7CeJgc8HPzR1jz94PFpa+7qgsi/7VndKUcfxvLb4883/
ztjVQaFlBD1EA4IeAAAAvjbOdZd92TG3uCyp8N3k4tDYnwNvZ3uGpp69mmzv
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
yKZWUgge8QAAAAAAAAAAAABEmv8DRS91kw==
     "], {{0, 461.}, {593.5, 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{144, 144}],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSizeRaw->{593.5, 461.},
   PlotRange->{{0, 593.5}, {0, 461.}}]]], "Output",
 TaggingRules->{
  "Settings" :> {$CellContext`\[ScriptM] = 
     Rational[18, 5], $CellContext`chooseplot = 2}},
 CellTags->"Snapshot",
 CellID->1963551174,ExpressionUUID->"9e2bbe85-b4fe-4a0a-9c03-9077b0b94224"],

Cell[BoxData[
 PaneBox[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzs3Ql8FPX9/3G8aq1H611v69XWo63/elfbaj1bW8+itfanYg0qAgIil3IJ
CKh4oCAgR0FEBOUWIYZTo9xXAuFKCIQkJCbkMJBAIP+3+5Wvw+5md4Fkhp19
PR999LHz3e/MfuZY8n07szO/aNT83qRDGzRo0OrH+r97H2tzY8uWj7W772ea
+GezVk81bvbEf+9o9twTjZ9oeU2jw9Q4UP834vAGDb57XROiqqqqvLz8GwAA
AADAwU3ZTQkuNNYFRbytAaWlpd8CAAAAAA5uym4mxNUW9yoqKvRuWVlZRcB2
AAAAAMDBzcQ35TilOb0Im/KUB7dt2+Z1pQAAAACAfaAcpzQXlPXMFZukPAAA
AACIUzbr2Ws4i4uLzRWbXpcGAAAAANhP5hpO5TulvMrKSnOCz+uiAAAAAAAH
xPwoTylPia+0tJSLNgEAAAAg3inZKd8p5X3zzTfffvut1+UAAAAAAOqA8p15
xB5BDwAAAAD8gaAHAAAAAD5D0AMAAAAAnyHoAQAAAIDPEPQAAAAAwGcIegAA
AADgMwQ9AAAAAPAZgh4AAAAA+AxBDwAAAAB8hqAHAAAAAN7KDJgfMH1vptF0
iH2BBD0AAAAA8BZBDwAAAAB8Iz1gcmxM51gWS9ADAAAAAK8Q9AAAAADAN8zV
mKFprmRvoR1iuYyToAcAAAAA7iPoAQAAAIDPmLus7EfQMzNGXjhBDwAAAADc
R9ADAAAAAJ8xT08IG+5qYzqbGSMvnKAHAAAAAO4j6AEAAACAzxD0AAAAAMBn
CHoAAAAA4DMEPQAAAADwGe66CQAAAAA+Q9ADAAAAAJ/JDNiPoGdmjLxwgh4A
AAAAuI+gBwAAAAC+lB4QmubCMp1jWSxBDwAAAAC8QtADAAAAAF8yV2Oau6xM
35tpjOVyTSeCHgAAAAB4i6AHAAAAAIiMoAcAAAAAPkPQAwAAAACfIegBAAAA
gM8Q9AAAAADAZwh6AAAAAOAzBD0AAAAA8BmCHgAAAAD4DEEPAAAAAHyGoAfs
h20ReV0dAAAAEh1BD4idM81V1ILEBwAAAM8R9IBYBOU7fV/KAkodTIveCkp8
XtcOAACAhEPQA6KyEc/ku5KSksLCwi1btuTl5W3evHlTgF5oUo16Sx1s4iPr
AQAAwH0EPSAyZ8QrLi5WlMvJycnNzdW3Ri2VlZW7AvRCk2rUW+qgbursjHte
rwcAAAASCEEPiMCmvJKSEmU3hbjCwkI11kSkDuqmzppFM5L1AAAA4DKCHlAb
k/LKy8u3bt2q1Jafn6/JyBHPSZ01i2bU7FoIWQ8AAACuIegBYdmUV1RUtHnz
5sLCwtgjnpNm1OxaCFkPAAAAriHoAaFsyisuLs7JydEXZP9SnqHZtRAtiqwH
AAAAdxD0gCDmPpnmd3kHci4v9Lye+b0e9+EEAABAfYuXoKcKW7ZsOXz4cK8L
ORhlZ2c//PDDMW4ctmRU5nReWVlZfn5+Xl7egac8Q4vSArVYTuoBAACgvsVL
0NuwYUODBg0eeOABrwvxXnp6+vTp07XLbMvgwYO1cS6++OJYZmdLRmZOt5mf
5uXk5OhFXQU9LUoLND/W46QeAAAA6hVBL+4kJSVpU8ydO9e2FBQUvPjii9Om
TYtldrZkZM7TeVu2bKmrlGdogZzUA1BPJsdmSoDXxQIA6h1BL+6EBr19wpaM
zPw6b+vWrZs2bdKLug16WqAWq4WbX+p5va4AfIWgBwBwqvOgt2bNmubNm//6
178+/vjj77nnnjFjxti37r33XrXbE08a6N59991qWbx4sZ23WbNml1122U9+
8pNrrrmmZ8+edl4bT959993/9//+31FHHXXVVVcNHDjQ+dG5ubmPP/74BRdc
cOSRR2ohLVq0KC8vN2+tWLFCH9S9e3ctU2+pwyWXXDJs2DDn7BUVFT169PjD
H/7w4x//+OKLLx4+fHjHjh011+rVq2NZu1DPPPOMeqalpTVs2PCEE044/fTT
GzVqtGTJEmcfLUGf+NOf/vTkk0+++eabZ86cad+yNbdp0+YXv/jFEUcckZ+f
rxZ11qY4++yz9XrGjBmmKr1Wtc46o25JZxlDhw698847jz322N/+9retWrXa
vHlz5JVKTU295ZZbjj76aBWmvaDt3KFDB5Wkj9PqmKqi7hTjvffeu/baazXj
WWeddd99961bty72d8NauXKlVt9OZmVllZSU2Mm8vDznVa+WjkZtXnVev379
2rVrly9fruXUbcoztNhly5apwnUB6wEgosw99K+3/pmK8N+IQjNd6R6hb0X9
txQAEO/qNugVFBQoIilHXHrppX/5y18Uxw499NAJEyaYd5ViNHnhhReagfeA
AQPU85FHHjHvagSuBKGW888//9Zbb9XYXq8fffRR866JJ2ecccaPfvSjG264
QZGhQcBHH31kV+Siiy4yH63MoiDmjDPz58/XpMKCQtxNN92kGszs06dPt8Ur
4KhF4eW2224za3Huuefq/zXmj2XtQv3jH/8wq3PMMcdomXphAlpOTo7pMGTI
ELUcd9xxelfpVa9V3rx585w1n3LKKYcccohi6Y033qjdpHR5zjnnqP2Pf/yj
XpvOioRq+e9//xv7lnQGPbMjlPJUhtky2sJlZWURVurMM8/ULrj99tu1OzSp
T1Hlml2h0qzRpk2bou4Ueeutt8x+UfFaQa3pqaeeWlxcHMu7QbTW3bp1M/Ur
HesY06S2niYVQjU0UiA1xSQlJYXOruGTxlEaUyl8Kdorjyv01UfQ02IXL16c
kZGhOEnQAxBV5t62bNlS2x8dgh4AwKlug95jjz2mgXSnTp3M5KJFixQffvrT
n9qTOCZMaeCtsHPCCSdoDG//Zv3nP//RW82aNTOTSlW/+MUvNLZftWrV9j3x
RJOffPKJ6fD22287U8PcuXMvv/xyO7v+rp188slHHnmkXmzfE5o0aU82dezY
US36UDOZmppqgmR2drZpeeWVV0wYtEEv6toFMZlIyc6eIHvmmWecH6rwdcUV
V9gTmr1799a7L7zwgpm0NX/66afOxYZeuhkU9GLZkna7KXEcccQRCm4KIKZF
0VsdXn755Qgr9fDDD5vJkSNHmv2SnJxsWh566CG1fPzxx1F3imj1DzvsMJMK
RdFM/W36jvxukDlz5qhmpW99ujLdb37zG6212YO9evVSCNWizGSbNm1CZ9dm
MUFP+UvbZMGCBdpu9RH0tFjtWe0Lc1LP6yEkgINdUNDTP1Zh/w3cvnfQ+zSA
oAcAiaxug975559/2mmnOVuaNGmiobWGzWaypKTk4osv/tGPfnTzzTer3Rlh
NCw/8cQTnaFp2bJl77//vgbe2/fEk8suu8y+q/SkfBHhVpOKUZpl6dKl2/eE
pptuusm+q/hmTl2Zyddff12T/fv3dy7h0ksvdQa9qGsXxGSiESNG2JaysrLj
jjvuwgsvDNtfw371v//++82kqfmOO+4I6hY16MWyJW3QGzp0qCbfeecd2zk3
N1ctd911V4SVsqcdtUPNCTvbwSzwtddeCzu7c6fIlVdeaTZR2IuRIr8bSsXo
kNAsp59+upJmfn6+SXaHHnro3XffrdU3J/gmTZoUOq8z6CmFff311xUVFfUR
9LTYr776ylxfStADEBVBDwCwf+ow6G3ZssWMq3/nYFoGDRpku2mUe/jhh6vx
iSeesI0mXPz5z3+ubeEmntgQZJx11lkKNXYyIyOjQ4cOt9566+9///sLLrjA
fLQ5X2ZC09NPP+2cXXnzmmuuMa/Naawvv/zS2eHhhx+2QS/GtXMymSgtLc3Z
eO211yqMFBUVmcmRI0cquF1//fWXXHKJucby3nvvNW+Zmps2bRq02MhBL8Yt
aYNes2bNwq7XySefHGGlnNcOBX3cmDFj1PLqq6+ayQg7RRTiTDT7+c9/3rBh
Q20Ne7Iv6ruhZsyYYZY/atQoTepTzKS2bXFxsdKuXv/sZz8Le1WqvXTTBL3U
1NTq6ur6CHparBZO0AMQo329dLM0GoIeACSIOgx6+gNkxtX/dFBquP322ydO
nGi76c/WMccco24tWrSwjdnZ2Wq55ZZbalt42FuIOIOeMprG8ObyyzvvvNNk
tKCgFxSajjzySBv0zDWlQed67rjjDhv0Ylw7J5OJzHk0609/+pMaFce270mX
ir3XXXedMqwi3oEHvX3dko0aNTKnSp3rdf7559vf9IVdqRiDXuSdYixYsEDr
+Ktf/cqGMnutZtR3g3Tq1El9tIXNpAJ4g8CPLhXxtu85afvvf/877Lz2Ziza
X0ph9Rr0tFnS09MJegBisa83YyHoAQCMur1089RTT63tukTL/Frq4osvPvTQ
Q2fPnm3blQVOP/10Z8/i4mINvM35l6hB78knn1SHPn362HcVnWIPeua3Zs6T
jPpoE1LspZuxrJ2TyURBd2vRQs4880y92Lhxo94955xzbGhaunTpgQe97fu4
Jfv27avJ//3vf/u0UjEGvcg7JYji2E033aR3e/fuva/vGjfccEMDx5W0jz/+
eAPHXWjuuusuTY4ePTrC2plnK2hzaXCl1/UR9LRYLVwfwRMWANQtgh4AwKlu
g545BfbBBx/Yll69eika2IF9//791eHZZ59Vy+GHH37RRRdt3brVvGXG4TYU
VFRUmHG7uZwyatAzAcQ+uyEjI8PEtBiDXk5OjsKR+rRr1+6rr7765JNPLr/8
cnMWyQa9qGsXxJR01VVX2WsF33zzTbXceeedtiT7I0FRebEEvaefflrtQ4YM
sS1BQW+ftqQaNXnllVfau1muW7fu7rvvbt++fYSVijHoRd4phYWFDz74YIsW
LVSh6TBs2LAGe25HE/ndULm5uYcddtgFF1xgW84++2z1//DDD7cHEpy556fz
yQuhTNArKSlRLi4qKqqPoKfFmic+EPQA1C3uugkAcKrboKdMdMIJJyhAaYje
pUuXv/71rxpaX3zxxebGIKtXrz722GM1/DYPMnv++edN6DPzrlq16pRTTlH6
U9JRyjA36reX4UUNeiZDnXvuuUpqSgennnqqyog96G0P3Hjz6KOPbrCHIoM5
/WSDXuS1C2ViznHHHfe73/2udevWWtoRRxyhLWBuRaJBvopUh4YNG3br1k0p
0hQcNegpwTUI3G9Eb6Wnp28PCXr7uiXNebdLLrlEe6RVq1bmjiW1nePbp6AX
eaeIqe32229Xz86dO2vzHnrooYsWLYrl3SCDBw9W50aNGpnJhQsXalIbvKCg
YPueG93IPffcE+FQt0Fv06ZNmzdvro+gp8Vq4QQ9AHWOoAcAcKrzB6bPnDnz
xhtv/PGPf9wgcLfDf/7zn/a+/bfeemuDPTfe3x64nlAR4JBDDrG3QNGLm2++
2dwh/5hjjnnooYfss63NT8/+9a9/OT9LmfH88883rysqKpo3b27m1ec+8cQT
5hJHk6rMsN/e599Qkddee62zRSVNmDBBIW748OEaipvf0ClGxbJ2oUwmmjp1
qjJUg8AzCK6++mrnzwAV5eyvz8477zxtmQaOG86ErVmKiooU08wD7Mx1oYp7
Qded7tOWNJvOPoxAW9V5ujDI3XffrT4mPRkN9r6d6dixY+35xMg7ZXsgdd51
111mXcw9VO1jGqK+G0RH189+9rMpU6aYya5duzrzrHacCe9BD6wPouSlmjUo
ys3NzczMrI+gp8Vq4foIfRBBD0AdIugBAJzqPOgZSkkZGRm1PXQ7Mv1JWrNm
zf6NgbUW+lx7T8vYrVu3rlu3bsp3tkXbRMHh6KOPDl2LGNfOefJLmcU+TS9I
Tk6OBv/7WrC2UmFhYdQ++7QlFVoj3Opkv0XdKZE7xLhPBwwYYMOsfPTRR0rK
dlI7a+LEifYq0Ai0udRZ21abThuwblOe2SNauD6ClAegbhH0AABO9RT04o7+
Dprf6D399NMffPBBz549r7766gYhD3TYJ6FXOeLgp/xVXl5ubl+TnZ1dt0FP
C9RitXB9BEEPQN0KTXMReF0sAKDeEfSsuXPn/vKXv2zg8NBDD9l7xewHgl48
sldv5ufnZ2RkKJTVVcrTorRALZbrNgHUB4IeAMCJoOekjZCWljZ+/PiUlJSo
F0ZGtW7duiVLljCejzv2pF5mZqZ2Yl0FPS1KC+R0HgAAAFxA0AOCOE/qrVy5
Misr68BTnhaiRXE6DwAAAO4g6AGhzEm9rVu35ubmKqAd4I/1NLsWokVpgZzO
AwAAgAsIekBY9gLOTZs2paenr1+/fv9SnmbU7FoIF20CAADANQQ9oDb6UpSV
lRUVFSmmLV++fOXKlXode8RTZ82iGTW7XmtRfMsAAADgDoIeEIHJesXFxbm5
uatWrVq6dOnq1auj3opTHdRNnTWLZtQkKQ8AAABuIugBkemrYa7h3LJlS1ZW
Vnp6+oIFC5YtW7Z27dr8/HwluOoAvdCkGvWWOqibOmsWc8Um3y8AAAC4iaAH
RFVRUaEvSGlpaVFRkdJcdnb26tWrV6xYoUCXmpr6ZYBeaFKNeksd1E2dNYtm
1OxerwEAAAASC0EPiMW2bdu+DVB227p1a2FhoaJcbm7upk2bNgbohSbVqLfU
wUQ84e4rAAAAcB9BD4idjXtlZWWKciUBWwPMazWan+MR8QAAAOAhgh6wH8zF
nGFxoSYAAAA8R9ADAAAAAJ8h6AEAAACAzxD0AAAAAMBnCHoAAAAA4DMEPQAA
AADwGYIeAAAAAPgMQQ8AAAAAfIagBwAAAAA+Q9ADAAAAAJ8h6AEAAACAzxD0
AAAAAMBnCHpAjLYhBs4NVbHHt8BBTIeo1/+6AABQ974l6AHRlJWVVVZW5gfk
5ubmoXbaXPr/3IDNATk5ORs3btwQkLVHZmbmesB1OvCyHHRk6vgsKioqLi4u
Ly/3+l8aAADqEkEPiKC0tLS6ulqDQEW8goICfVOKEJE2mvknRZtry5YtmzZt
ysjIWLly5Zo1a0y+MzTkXge4LtNBB6EOzhUrVqSlpeXm5paUlOibbs5KAwDg
AwQ9IKzKykpFlaqqKqUVk+80CNyKaLTptKG0xbTdNH7WQPqLL75YtGiRNqYi
cw1w0FCmy8nJ0cE5d+7c9PT0JUuW6Gu+c+dOruQEAPgDQQ8IpRGgxoEa7xUW
Fpp8VxKiFOFo62m0nJeXp2Hz119/rbjn9XAeiE4Hqg7XBQsWrF+/vqqqSt99
Tu0BAOIdQQ8IpVGfuVDTmfKCEk0ZwtHWUzqeP3/+4sWLvR68A/tm0aJFqamp
WVlZlZWV2wP/wcfrf4oAANh/BD0giEJcRUWFSXkm33kdnuKJNuDMmTNzcnK8
HrMD+0OHbnJycmZmZkFBgb2RLAAA8YigBwTR0E5jPFLe/tEGTEtL83q0Duw/
HcCrVq0qLCzczkk9AEA8I+gBTooq+fn5+kbYyzW9Tk5xRttw586dXg/Vgf1X
XV09ZcqUdevWmZtwkvUAAHGKoAc4Kaps2bKlqKjIBD2vY1P80Tb0epwOHKiU
lJTVq1cXFBRwVxYAQPwi6AFOGtqZO21yOm9fmUeibyfoIf5lZ2enp6freNZf
RoIeACBOEfQAJ3PdJkFvP6wO2E7QQ/yrqqpasWJFZmYmQQ8AEL8Iev42evTo
li1bbt682etC6kx9r5F5PLp5pAJBb58Q9OAny5YtW79+fXl5OUEPABCnCHr+
9t///rdBgwYrVqzwupA6s69rpAN7+vTpixcvjrE/QW+/EfTgJ0uWLCHoAQDi
GkHP3wh6GzduVP/bbrstxv7OoOd1cvpeXl5e8+bNhw4daiYHDBjw8MMPb9iw
oW4/ZdSoUfqUrKys/V7CgQS9ioqK559/XjWYyeHDhz/22GNFRUW2w65du4YN
G/bMM8+0atUqcuNBInQVIhg3bpxWP8bO0Jf00Ucf/fDDD+v1UxYvXkzQAwDE
NYKevxH0fBD01q1bp1X45z//aSbPO+88TY4YMcJMqtSpU6fOnz//AD/l8ccf
12IXLVq030s4kKCnza5P/9e//mUmL7jgAk2OHTvWdmjSpIlaDjvssCuuuCJy
o/uqq6tnz56dnp7ubAxdhQiefPJJdV6zZk39FBjfdPxr8+ovlG3Rwa/Ndeml
l9br5yro6aMJegCA+EXQ8wGND5s1a3bZZZf95Cc/ueaaa3r27GnfMrEoJSXl
3nvvPfnkk08//XTlBWUf5+wanD/zzDOa/Zhjjrn55pt79+4dNLCJ2uG99967
9tpr9elnnXXWfffdp9FRUHnNmzf/9a9/ffzxx99zzz1jxoyJsC76IPVMS0tr
2LDhCSecoIIbNWq0ZMmSoDVyBr0I5XXp0sWMt1WbFvvAAw9E3ZgHf9CbMGHC
iy++mJ+fbyYzMzP17q233nqAn3JQBb3k5ORu3bpVVFTYDieddNJPf/pTrbVz
rrCN7isoKFDxf/3rX52NoasQAUEvgqefflobZ/78+bZFB1vXrl1nzZpVr5+r
78LatWsJegCA+EXQi3d5eXmKMBoInX/++RrtK9Ho9aOPPmreNbHorIDbb7/d
vHv55ZfboUtubu4vf/lLNV544YV33HGHhs163aJFC7v8qB3eeust8xH6rBtv
vPGQQw459dRTi4uLzbsaA1988cXmP7//5S9/Oeqoow499FBFldpW5x//+IdZ
F6W22267TS80efbZZ+fk5DjXyAa9yOUNGDBAjWo55ZRTlDHbtGkTdXse/EEv
iC+DXhD966R3tSujNnoibNDbJwS9CEKDnjsIegCAeEfQi3f/+c9/NApq1qyZ
mdSY8xe/+IXS1qpVq7bviUXXX3+9YosmCwsLzRkuG5QefvhhTbZu3dpMqsNF
F12klqlTp8bY4YorrjjssMM2bdpkJrt166YgOX36dDP52GOPqXOnTp3MpMZO
xx57rOKYhk9hV8cEPSU7e1/NZ555Ri1aTTMZFPSilldPl26OGjXq2muv1Yqc
dNJJCrDJycn2LY1Lf/WrX82ZM+fmm28++uijtTv69++v5Nu2bVvFYWVtzajt
E9R/yZIl999//wknnHDaaacppy9YsMB2CAp6zz77rPqb3+hpw9pTlmq0fR58
8MHf/va3zoJfeukldVi8eLGZLC0t7dGjhyr58Y9/rCQ+ePDg0KC3cuXKpk2b
aq7jjz/+rrvu0irXYdBbvny5PlEre/LJJ2snLl261Bn0FMkvueQS85u1F198
0WR5bUw1/v3vf6+t0Rg5cqSqPe6443QcajnOH75p06nzl19+qV2jLda9e/fY
59Ihp4NTO+jUU09VnfY0ojajOeRMJQ899FDoKogOgMaNG6unNrh2jY7YnTt3
2o+IJejpSG7ZsqXm1Qddd911r732WizrNXz48Lvvvlt7UB+tApYtW+Zcpo52
fbN0iGqZV1555cCBA53vat4//OEPekvfx4YNG+bk5EQoL3LnCJs3wqrpO6j1
+tnPfqaNc+6555p1NP31Woe0XUJ2drY2gpagf170ZX/99dd3794dtH1q24O1
IegBAOIdQS/eaZB24oknOnOTxnLvv/++hijb98Si0aNH23fNz5o++OADO7tG
2s69P378eHV44YUXYuyg8aH5yVjY4dD555+vwbyzxRSgIBN2dUzQ09JsixKE
xocXXnihmQwKelHLq4+gN2jQIC1TVd16660auOq1Ru8agpp377zzTrWcccYZ
l156qT73Rz/6kSZvueUW9VH/q6++2sxrb3ti+puTmOpgT2LaDkFBTy80qUa9
fuedd26//XZNaiNoIP3cc8+ZPvoUfa6zZrPZbZEKSpo86qijFA1MYjrnnHOc
QU9B25wp1gj5pptuMqdiP/744zoJehpja/to4froO+64Q8N788NDG/QUlzRp
huL9+vXTqmny5z//ubKwBu21NcqQIUPM5v3rX/9q1uvPf/7zjh07zLv33HOP
mUXB58Ybbxw2bFjsc2mPKFOrWu1HTWp2O6/Zg4oPqqRDhw6hq1BdXa28rMnf
/OY3KltZQ69tJKyJIejpgNSOsGeutcX0Wt+FyOvVv39/8x8BdBz+7ne/O+SQ
Q0455ZTMzEzzbmVlpVZKHVRSo0aNzjzzTL1WRHLOqw6qTQeJ9r6Wr+942PIi
d468eSOsmr7X2qT6jpsNrtdLly5VuzaUWvRZZgkK0eZY1cK1L0wwVJS25UXe
g7Uh6AEA4h1BL67l5uaaUVNtHUws0ujItgwYMEAtgwcP3h647DN0dnMp4N/+
9rdYOohCmQaQZpzZsGHDkSNHlpaWmrfM9XjyOwfToqwUtmAT9NLS0pyN1157
rT6iqKho+95BL5by6iPo/d///d/vf/97e/+Tl19+WR/Rvn17Z3DTMN5MDh8+
XJOq/7PPPjMtDz74oEnfzv5nnXWWvZGmuVbt4Ycfjhr0ymq5dDNy0FPKVj2K
G6tWrXLmPmfQe+SRRzSpdjM5b948cypWg+oDD3pmC7Rp08ZMapuffvrptQU9
0WDb5BHnQkIbFY211tqSOjBMizlN+eqrrzoH/Nrgyjj7Otfdd9+9a9cuE0xO
OukktWRnZ5sOYS/ddK6CDhUdMC1btjRvVVVVKXApbuiFaYka9MyZcbsEbe3z
zz9fecqktrDrpSPksMMOO/nkkzdt2mRazH+guOGGG8zkp59+qsnmzZubSf1j
cv3119v4edVVVx1++OGFhYVmslevXlqF2bNnhy0vQueomzfyqtWEu3QzKOiZ
Y7Vdu3ZmUgeGidUpKSmmJeoeDIugBwCIdwS9uKaBijlbVFuH0FuXOIOexmB6
ffvttztnMeHxpptuiqWDoeBgrvEzYeGSSy4xV3KaDGJCiqWspwVOnDgxbMEm
6JnTkdaf/vQnNepzg9YolvJcuOtmRkaGPuLee+91Bjd77kyjX7NNbP/33ntP
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
9Gu1zZs3K1nrT7k+ywa9QYMGOfsofyUFztyF3m2yR48eSXuuO1VhZktqJ2qZ
Ng4HFR+1T1gpKSmmtldeeWXZsmXKhmZp9mnmNfuyi83v77Sjgz5lxowZs2bN
MrExatDbunWrmRwzZkzQcpYvX27eMte1xn5IAMBBhaAHADhw5sLCTp06BbUr
idRJ0Ovfv79p6RLCtD/77LOmpwl6jRs3doaInJwc083cgMWpVatW5i2FEedH
f/rpp84VKSwsNO3KXKYlatAzduzYsXTp0smTJytwKVg1bdo0aQ9lQNMnatAb
OXJkUuCMUoRdYIOevQzVMCdVzY/1gtiLP/XnW5OjR49Ocmjbtu3777+flpbm
vN9ILH1CaeuZCzWNp5566o033tAGd2a6GHdxaWmpmZw+fXqET4wa9NRuJhct
WhQ0r326h8mAsR8SAHBQIegBAA5chw4dkhznXCw7Zj7AoGevpovAXBZogp5z
aTWOy/8iMJcj2o923qWkxhETbHssQW/evHk2SIaKPei99tprSYHbPEbYBTbo
BZ1gMrsm7GMgpk6damYxJwp3796tkGhvgmp17tzZ/o4vlj5h5eXl2chmKY/b
9BTjLl69enXQ1gsratCzFxuHff7C008/nbTnpGHshwQAHFQIegCAA2dST+hp
IztIPsCg9/rrr5tcsLh25qSSCXrt2rVzlmHvxKJ3a5vdPGugtlG9bY/9jF5G
RoZ50kRSIMRpNT///PPMzMzQqBI16JkO9qxlWDbopaamOttNgNL/h85iT885
r+rUn3KNDbSbtEdswgrKmLH0CUsbedq0acqtznurmu0Q4y6254jNGdjaRA16
y5YtM5NLly4Nmnfbtm3mLfMzz9gPCQA4qBD0AAAHzv5Gz3m3DUlPT6+ToGfv
5hH6QzPlKUWA7OxsMxk26Nm7iATdoaUmcCng/PnzV61aZZZch0Fv6NChZtL+
Fs/Qkk27/XMZNeh98sknZpagZ53r7/Lzzz/ftWtX/TWvLegNHDgwKXDZZ9Cu
qdlzolCZSwGqoqJCmWjWrFnOX1lu2LChffv2ZrH5+fmx9Albf05OjjZyWlqa
bdGAYfz48WYu86PCGHfxjh07TLeRI0cGdVNubdu27RtvvFETQ9DLy8szk5Mn
Tw5ajr2vi3mLoAcgThH0AAAHzt6p/rPPPnO224cCHGDQs+EoKKllZmaaR+PZ
00lhg56Yh6Apigbd66Nv375myea8UuyjevMsAPNoAyMoSpjnTShGOe9Vopzy
yiuvBH1E1KBnHxs3btw4Z7u99nLdunW1BT3bRy+c7evXrzft5mnv9iOcD7ar
cZz1y8rKiqVP2Po7duyYFHiSgqKibbQnzt56662afdnF5leHiq7Op7RraeYq
WbM6du3sCbugvVNdXd2sWbOkwDPZtwd+omjZpzxoq9YQ9ADELYIeAODAaZht
ht/KNRr3ahStvwj2Xh8HHvSUlV544QXTOHbsWC1cLenp6fbxDcnJyaZnbUHP
PspNs2gAv3v3bv1RU24yjcoIimA1+zKq79evX9KeZ3mbgBMUJUyHpMCJIRMl
8vLybK5MctxOJJbn6HXq1Mls3pSUFJVaUlKi2c1PybSyWp3agp4+2tymUvNq
K1VVVe3atWvFihUmFilDmduN6u+7udBU8UdLKCsr04xKSeapf+qsuWLpE7b+
jz76yNSmNdXGN1dgmiNBZs6cuU+72ObNl19+OT8/X0tbuXKlfdKEGYRs3LjR
fqLeLS8vD/0Fpb3havfu3c2Fu+o2ZMgQ09irVy9t1X06JADgoELQAwDUCQUN
e2dFZQpzFqaugl5N4Po95y0rTcYx3njjDXuPzdqCngbtzpDlnF3V2gv8Yh/V
K4zYJWhlFb6CooS9S7/5OPOMgKTAiS3zwj54LmrQM6tvb4Fif/pnlmxiZm1B
T7Tx7fqqVOdr5zP+pkyZ4txldg/qxaxZs2LvE0qx1PlrPmf9Wmt7PWqMu7jG
cR7W7D77un///qaDBiTOTxk/fnxo0NMCe/fubfs47zCjCGkvTyXoAYhTBD0A
QF1Zt26duV7RUJpbunSpyQJKPaaPeVJA27Zt7Vzvv/9+0t638lAuMEsIurNi
YWGhBvzOAXyzZs0mTJjg/PWZiY1hQ5Oy3syZM4Nug6mh/tq1a0M/OiguhbYr
CNiLMCU3N9fe+d/mU71wfpySi3KoupkrWlu2bGm6mXAa9gkITvn5+fpEZ4JW
HrFXS+pvtGkMej67sXnz5l69etl5FWr69OkT+mSBlJQUc42rof4dO3Y0p/z2
qU+ooLOZSYHAq6i7fe/LJmPZxTWBZ/BNnz7d+ciGJk2aTJw40ZyWNXTwmFON
SYHzeqF7xyxH0dVGb3McjhgxwvkjxNgPCQA4qBD0AAB1q6CgYOXKlZFvtn8g
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
XVllXdl/dYsKzq3oEX/38qt6RQsXVPcV1vQVve8XfyFLPgyU1Dm7uKzBIrby
Rkt501Bls9iGq1qGa1pHxCZKubbdGcvir7Ho5YbOMZHMTV1jzd3jIpxbeibE
3/C2vsn2vklR0B8HpkREdw1Od1mme4bENiNqum9ktn9kdmC1qcVmGXOW9fC4
VdxBRiY+i8T+NDUvKntsen58ekG09uSs2L6Ie9C02KyLortnPy/OzdtEfVsX
bJ8XlkSDz69muLijfbEtixhfXFqxiW15ZWm1ysUm0lzEufO5ZAod/oPQM5Xe
3l6j6dz+mTKegOvp6fG8SkxMjLgoKyvLdTE7O1ssXr9+3ZsdPBF6AKCY+JF1
dn6xyzLV2OWMxNK6AfFDtfhhW/z4LX4sL3zf/7rC2Yzix/uUvNY/s5sTXzbE
P68TpSDCQUSEaArRF3/EFYvuEA0SfCHvl8hc+pHN5NsPq88s/xiWIzYR7GL7
T0SuyPafI3PFHUTEu9j+60x4Z8UHRTlDXtx3xBZyIV8U/e7VTXS92PZedm77
Ljsb/9fVbf+Vv2NfbAevObdD14qc2/Wi0NXtt5i3xnY41tiKf49zbn+s/reA
2I7cKBHb0fi/t2M3S48b2y3ndsLYbr8T28nV7VSCsZWJ7XSicztjbHec/6vw
93bXuYXd/fs/GVy3iCTnFmls9yuM7dzqJv4NWd0qjS3qgft24WGVsV2U26O/
t0sum/jnyHOLTnHdauR2JfWf7arb9vhf27XH79028U/fNzfx3XPeUlecW8S9
8pintW5b7Na3tH9t4t/q7/2Xn9AzlZaWFnGLh4aGuq0bh1JZ8216UVFR4qLi
4mLXRfGpfBfeN3fwtGsdW/qzAQCUW16xf7Etz83bJme/jE5+tozN9Q3PdA5O
tfVONHaNfWgfrW4ZLm+0lNQNiJbMr+rN/qtb5OTztx1PCtqSV4vy7qvG2+n1
8c8+iJ+LxM9j4uc68XOg+KFR/Hgpfv4UP52KH1/FD7fih17xw7D4OVn85Cx+
nNb+Ez4bGxub4u3R65b1/ile70drQs9UGhoaxC1+9OhRt/VTp06J9draWs+r
REREiIvKy8tdF6urq8XimTNnvNnBE00HANgiu91hW15ZWFz+vLA0+3lRlObY
9LyIzaExa//obO/wTNfgdEf/ZGvvRFPXWP3HT7Wr1VnRNFTW4AzPt7X9BTV9
oj1fV/SI/Mx815VR0vnibUdaYfuTN20pea2PcltEhyZlNt552SBS9Obzurg0
Z41efex8suBycvXFh84mjbxfIbL07J2/TieWnbz97vjNUhGnf8QV/xbz9tD1
ogNXC3+NLth7+U3IxXxRqbvOO0P154hc0ao8H8rGxvZd2wahtx5Cz1Sam5vF
LX7s2DG3dZF+Yl1koOdVzp8/Ly6qqKhwXRRZJxZF4nmzgydCDwCAr6tvwFxe
sYtiXbQtLyw63yxmnbeJbp2e+zI563x/2diUs16Hx60iYAc/zYmG7RuZ7Rma
6bZMdw5OfRyYau+bbOudaOmZaO4eb1xN2roOZ9W+b3O+Ia6qZbiyebi8aeiv
Rueb5t7VD4rILf7g7NzC9/0F1c7Uzat01m5uebcI3qyyLtG8L0s7RfamF38U
5fusSGztzv4taHv8pi01v1VUcPLrFhHCD3KaRQvfz25Kymq6l9l491Vj4suG
xAxnF9964XxLYPzzuvhnH0Qgx6U5X4dmvODN+WK5VOPFdc7X3V185HzBXtQD
40V9zpf5Ra6+AlDkc9jqqwRFRJ+543wZ4epLCp2vMzyx+srDY6tNLbYjN5xl
/Xtc8eFYsTlfyhh63fn6xkPXig5ec77ucf8VsTlfDLlPbKuvkNxz6c3ui84X
T4ZcyHe+ljLK+bpKkeG7zjtfael8yWWk8+WXIsn/s1rlYvsxLCfwjprL5l8b
oYeNWSwWcYvv37/fbV2siPWOjg7Pq9y8eVNcVFBQ4Lr45s0bsRgdHe3NDp4I
PQAA4NccDuexWex2x4rdbhywRWxLy85DuNiWVhaXnPH+ZXVbWHRW/PwXZ8h/
XliyLjgPAiOKfm416o1txro4bWxzzuPGTM4amzP2xTY+7dzGplcPMjM1/2l1
G538bGwjE59XD0TjPCKN8/8EVv9bQGyWsTnjeDXGNjA6229sq0ez6TO24Rmx
9a5uPUPG5jzuTbfFuXUZ26DzfxX+3gac28fVraN/0nVrXz2ETpux9U4YW+vq
1tJjbMbxdsabu923ptUD8oitUW6df28NLlv9x0+eW12H6zYqtw/t/2y1blvb
v7b3bSOum3HUoG9uOX91p+S1GltBdV91y7DbVrXdm7jVvvdvKaFnKlar1Xi9
rs1mk4uLi4vG4tjYmOdVUlJSxEXPnj1zXRSfisW7d+96s4MnQg8AAADYUYSe
2RjHXamurpYrVVVVYuXgwYNr7m8cVuXkyZOuiydOnBCLRUVF3uzgidADAAAA
dhShZzZZWVniRg8PD5+fnxefil/DwsLESmZmprHD9PS0uNXq6uqMT8X33Hhh
pzzcivj+i08PHTpktVq92cEToQcAAADsKELPbER8GV125MiRxMRE8atxeMyV
lRVjB+MJvqCgIHmVjIwMY+X6KuOU62I373dwQ+gBAAAAO4rQM6HR0dHw8HB5
fo2wsDCLxSIvrampEYu7d++WKw6HIysra8+ePcb+4qL09HTXL/jNHdwQegAA
AMCOIvRMy2q19vf3i++5yDRv9rfb7cPDwyIJxa2wuR0kQg8AAADYUYQe1CP0
AAAAgB1F6EE9Qg8AAADYUYQe1CP0AAAAgB1F6EE9Qg8AAADYUYQe1CP0AAAA
gB1F6EE9Qg8AAADYUYQe1CP0AAAAgB1F6EE9Qg8AAADYUYQe1CP0AAAAgB1F
6EE9Qg8AAADYUYQe1CP0AAAAgB1F6EE9Qg8AAADYUYQe1CP0AAAAgB1F6EG9
Tf+toxABjbgDArpw7wM08t87IKEH9Qg9wB9xBwR04d4HaOS/d0BCD+oReoA/
4g4I6MK9D9DIf++AhB7UM1XoMbMCfjfwV2ZWwu8G/srMqvjdzH438FdmVsLv
Bv7KzErIgQk9qEfo+Ti/m9nvBv7KzEr43cBfmVkVv5vZ7wb+ysxK+N3AX5lZ
CUIPGhF6Ps7vZva7gb8ysxJ+N/BXZlbF72b2u4G/MrMSfjfwV2ZWgtCDRoSe
j/O7mf1u4K/MrITfDfyVmVXxu5n9buCvzKyE3w38lZmVIPSg0S4AAAAAO2xH
f6Qn9AAAAAAgwBB6AAAAABBgCD0AAAAACDCEHgAAAAAEGEIPAAAAAAIMoQcA
AAAAAYbQAwAAAIAAQ+gBAAAAQIAh9AAAAAAgwBB6AAAAABBgCD14T9z62dnZ
CQkJSUlJJSUlVqv1m1dpaWlJTk6Oj49PT09vb29XMCQQqL7r3iTunnlrGR8f
VzMtEJDy8/NjY2PFo+E399zEIyaADUxNTcXFxRUVFX1zz/r6es+Hv8rKSgVD
+hpCD14SD1KhoaG7XBw/fnzjHxqzsrJ2/Zt41FM2MBBIvvfe9OHDh11rqaur
UzYzEGBqamqM+9Hk5OTGe27iERPABmw2W0REhLgr3b9//5s7nz171vPhLyws
TMGcvobQg5cSExPF3SQyMrKzs7Otre3MmTPi03Pnzq23v8ViCQkJCQoKysvL
GxgYyMzMNO5oTU1NKscGAsAm7k0vX74UO4SHhz/5t+HhYZWTA4HB4XAUFxfv
2bPHy9D73kdMABsYHx+/fPmyce/7ZugtLy+LR0yxZ3JysuvD35s3b9RM61MI
PXijvb1d3GWCg4NnZ2eNFfGBcT/q7e1d8yqXLl0Sl6ampsoVcS8TKzExMQoG
BgLJJu5NcXFxYgfxo6mSAYFANjY2ZtwHpY1DbxOPmADWU1hYuHfvXnnv+2bo
9ff3i91CQ0PVjOfjCD1448WLF+JeExsb67p448YNsZiWlua5v81mCwoKEpf2
9fXJxYGBAbEi1hcWFnZ8YiBQbO7edOTIEbFDT0+PqjGBgGW8cHr37t1FRUVG
r20cet/7iAlgA8YjYFRU1MOHD70JvbKyMrHb9evX1Yzn4wg9eCMmJkbca8SD
netidnb2enel3t5e46dQh8Phum48RPLDJ+C9TdybxD/Uxv98vn79Wtx5IyIi
7ty5U1tbq2pkIKC8fftW/IRpvMNO5N43Q+97HzEBbEAkXlVVld1uz83N9Sb0
UlNTxW5xcXF//vnn+fPnr1y58uzZs7m5OTXT+hpCD94Q9zLPl4GJT9d700FL
S8uaz5sbb07nbXqA9zZxb2pra/N8H7qQlJSkYmIgcHnzjN73PmIC8EZOTo43
oXfx4kXPh79Dhw6Z84XThB68YRzpqLy83HWxurpaLJ45c8Zz/4aGBnHR0aNH
3dZPnTol1nlmAfDeJu5N+fn5xkPb06dPxUNbf3//3bt3jZWKigolUwOByZvQ
+95HTADe8Cb0HA7Hr7/+KnY7ceKEaJyRkZGqqqrDhw+LFfGgubS0pGxaH0Ho
wRvnz5/3/BFRPIqJRfGI5rl/c3OzuOjYsWNu6+KHVbEufnDdwVmBwLKJe9PY
2Ji4t7qdSSE2Nlbsf/HixR2cFQh03oTe9z5iAvCGl6EnHhaLiorkoZCEnp4e
441+bW1tOz+mbyH04I2bN2+KO0hBQYHr4ps3b8RidHS05/4Wi0VctH//frd1
sSLWOzo6dnBWILBs171J/Gsv9j9w4MB2DwiYiDeh972PmAC84eVLN9d0+vRp
cd3CwsJtn8rHEXrwRkpKiriDPHv2zHVRfCoW796967m/1Wo1Xidms9nk4uLi
orE4Nja24xMDgWIT96aZmZn+/n7xq+ui8RJQQg/YCm9C73sfMQF4w5vQW1pa
GhkZcT1ItcF4QTWhR+hhTca7yE+ePOm6eOLECbFYVFS05lWMI0VUV1fLlaqq
KrFy8ODBnZ0VCDjfe2+6cuWKuPTGjRuui8Yh36OionZ2ViCgeRN6m3jEBPBN
3oReZ2en8b+gAwMDclHEi3EmvpaWlp0f07cQevCGuGWN14nJd5eLW9k4ipHV
ajVWxN1H/HUaHR01PjVOPBQeHj4/Py8+Fb+GhYWJlczMTC1/BMB/ffPeND09
Le598k15Yt14pJMnXxAf7Nmzx/NIgAC+y5qh5/bw580jJoDvtV7oud4Bl5aW
jAe7+Pj45eVlsSJ+TUxMFCtHjhzhYCyEHtaTkZGxa/VkXtdXGW9rraqqkjsY
/10pzxwkHs6MRzpxzxJ3MeP0zWfOnFlZWdH0JwD81TfvTcYTfOJeaXy6sLBw
/Phxo/UuXrwoHu+Mn04vXbrEHRDYijVDz+3h76sXj5gAvtd6oed2BywqKjIe
/g4ePJiQkHDy5Enxsbjn1tfXKx9ZP0IPXnI4HOJOZPw/ibB79+709HTXHYyD
vefm5sqV0dHR8PDwXf8XFhZmsViUDw4Ego3vTTU1Nca9Uq6Mj4+LvpP779u3
LyUlhcoDtsh4Adj09LTroufD3zcfMQF8r9evX4t704MHD9zWPe+ApaWlxlse
DKdPn5avbzEbQg/fxW63Dw8Pi58wxW3t5VWsVmt/f7/4yyMe+HZ0NiDgfe+9
SdxPxb11ZGRE3HN3ejYAbjbxiAlgW4h73/j4uHjENN7yYFqEHgAAAAAEGEIP
AAAAAAIMoQcAAAAAAYbQAwAAAIAAQ+gBAAAAQIAh9AAAAAAgwBB6AAAAABBg
CD0AAAAACDCEHgAAAAAEGEIPAAAAAAIMoQcAAAAAAYbQAwAAAIAAQ+gBAAAA
QIAh9AAAAAAgwBB6AAAAABBgCD0AAAAACDCEHgAAAAAEGEIPAAAAAAIMoQcA
AAAAAYbQAwDA342MjPz5558REREnTpy4ffv2wMCA7onwv/bu3qWVNArg8H+r
BoOdIqRROwXBxk7xA8SPRgtBC4ldClnsRRAstgishshGEiaae3BAsnB3m7uX
d+blearJqU4Xfsw7MwCJCT0AqLX42200GjMzM3NzczNfms1mt9tNvRcAKQk9
AKivh4eHuS/tdrsoipeXl1arFa13enqaejUAUhJ6AFBTHx8fq6urkXVXV1ff
w5ubm5hsbW0lXAyA5IQeANTU/f19NN3S0lJRFN/Du7u7GK6vrydcDIDkhB4A
1NT29nY03cXFxfSw0+nEcHNzM9VWAFSB0AOAOiqKYn5+Ppqu3W4/TTk8PIzh
7u5u6gUBSEnoAUAdPT4+zvy76+vr1AsCkJLQA4A6ur29jaBbXl4+mXJ8fFyG
XmRg6gUBSEnoAUAdnZ2dRdAdHBxMD5+enmK4sLAwHo9TLQZAFQg9AKijvb29
aLrz8/PpYXlHb39/P9VWAFSE0AOAOipfunJycvI96fV6zWYzhs/PzwkXA6AK
hB4A1NHl5WU0XavVGo1G8XMwGGxsbHjfJgAloQcAddTtdmdnZ6PsVlZWdnZ2
FhcX43ptbS3+i1OvBkB6Qg8AaqrT6ZRnNUOj0Tg6OhoMBqmXAqAShB4A1Nd4
PP7zS1EUqXcBoEKEHgAAQGaEHgAAQGaEHgAAQGaEHgAAQGaEHgAAQGaEHgAA
QGaEHgAAQGaEHgAAQGaEHgAAQGaEHgAAQGaEHgAAQGaEHgAAQGaEHgAAQGaE
HgAAQGaEHgAAQGaEHgAAQGaEHgAAQGaEHgAAQGaEHgAAQGaEHgAAQGaEHgAA
QGaEHgAAQGaEHgAAQGaEHgAAQGaEHgAAQGaEHgAAQGaEHgAAQGaEHgAAQGaE
HgAAQGZ+U+j9AQAAQDq/I/QAAABI638MPQAAAGpB6AEAAGRG6AEAAGSmDL23
t7d+v//+/p56HQAAAH5JlF30XVTecDjs9XqDwSD1RgAAAPySKLvou6i8yWTy
+voaxaf1AAAA6iuaLsou+u7z8zNCbzQaRfR5Ug8AAKC+oumi7KLvvr+xXt7g
i7mH9QAAAOolgq6svLiY/FM5L89wyj0AAIDqi3YrT2yWd+4mP1Oe4Qz9fv9v
AAAAqi3arYy46RObPzUcDqMH/wIAAKDayi8p/HfiAQAAAAAAAFXzA7Pzmgc=

     "], {{0, 461.}, {593.5, 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{144, 144}],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSizeRaw->{593.5, 461.},
   PlotRange->{{0, 593.5}, {0, 461.}}]]], "Output",
 TaggingRules->{
  "Settings" :> {$CellContext`\[ScriptM] = 0, $CellContext`chooseplot = 2}},
 CellTags->"Snapshot",
 CellID->1023377969,ExpressionUUID->"6021e95c-1dde-468a-be39-b11856046114"]
}, Closed]],

Cell[CellGroupData[{

Cell["Source & Additional Information", "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Source & Additional Information"},
 CellTags->"SourceInformationGroup",
 CellID->62407265,ExpressionUUID->"e949cd00-c867-43b2-843a-ecb3040c97df"],

Cell[CellGroupData[{

Cell[TextData[{
 "Contributed By",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"AuthorNames", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "'John Smith' for single authors; 'John Smith, Robert Ford, and \
Jane Doe' for multiple authors. To credit people other than Demonstrations \
authors, please see the 'Details & Citations' section."}], "MoreInfoText"], 
        Background -> GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> 
        GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoAuthorNames"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "ff63dfa0-41a7-4279-846e-8ea21a60c2fe"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "AuthorNames"},
 DefaultNewCellStyle->"Item",
 CellTags->{"AuthorNames", "Contributed By", "TemplateCellGroup"},
 CellID->255368948,ExpressionUUID->"ebd2873a-0db1-4593-a72b-104787fd259d"],

Cell["Caique Ronqui", "Text",
 TaggingRules->{},
 CellID->622029586,ExpressionUUID->"b6afadcb-1eee-423c-b3ab-3a7591a0016a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Details & Citations",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"DetailCells", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "This optional section is for a more detailed description of the \
Demonstration than the caption, but it should still be as concise as \
possible. This section may also include numbered snapshot captions (e.g., \
Snapshot 1: phrase or sentence without an initial capital and without a \
period, unless more than one sentence is used) and explanations of the ", 
           StyleBox["Manipulate", "MRbig"], 
           " control labels. Define any symbols undefined so far. Include \
only text in this section \[LongDash] no code, graphics, etc. Do not change \
the cell style or copy cells from other sections. \n\nA book reference uses \
this format: \n   L. D. Schmidt, ", 
           StyleBox[
           "The Engineering of Chemical Reactions", FontSlant -> "Italic"], 
           ", New York: Oxford University Press, 1998. \n\nAn article \
reference uses this format: \n   D. Pearson, \"A Polynomial-Time Algorithm \
for the Change-Making Problem,\" ", 
           StyleBox["Operations Research Letters", FontSlant -> "Italic"], 
           ", ", 
           StyleBox["33", FontWeight -> "Bold"], 
           "(3), 2005 pp. 231\[Dash]234."}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoDetailCells"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "a67a473b-8df1-4c3a-a472-aa81964dd1a1"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "DetailCells"},
 DefaultNewCellStyle->"Text",
 CellTags->{
  "AuthorNotes", "DetailCells", "Details & Citations", "TemplateCellGroup"},
 CellID->441931514,ExpressionUUID->"3b6cb1a5-3373-4390-acbe-b5e58b14d20f"],

Cell["Details, references or citation information", "Text",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->111711384,ExpressionUUID->"b44443b2-ac27-49b5-82c4-3bc1bf431af2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "References",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"ReferenceCells", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "This optional section is for a more detailed description of the \
Demonstration than the caption, but it should still be as concise as \
possible. This section may also include numbered snapshot captions (e.g., \
Snapshot 1: phrase or sentence without an initial capital and without a \
period, unless more than one sentence is used) and explanations of the ", 
           StyleBox["Manipulate", "MRbig"], 
           " control labels. Define any symbols undefined so far. Include \
only text in this section \[LongDash] no code, graphics, etc. Do not change \
the cell style or copy cells from other sections. \n\nA book reference uses \
this format: \n   L. D. Schmidt, ", 
           StyleBox[
           "The Engineering of Chemical Reactions", FontSlant -> "Italic"], 
           ", New York: Oxford University Press, 1998. \n\nAn article \
reference uses this format: \n   D. Pearson, \"A Polynomial-Time Algorithm \
for the Change-Making Problem,\" ", 
           StyleBox["Operations Research Letters", FontSlant -> "Italic"], 
           ", ", 
           StyleBox["33", FontWeight -> "Bold"], 
           "(3), 2005 pp. 231\[Dash]234."}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoReferenceCells"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "3385b575-60e6-4de6-92c7-8694559d996b"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "ReferenceCells"},
 DefaultNewCellStyle->"Text",
 CellTags->{"ReferenceCells", "References", "TemplateCellGroup"},
 CellID->592881655,ExpressionUUID->"104ac704-e551-4a7c-a07c-1ba981002e23"],

Cell[TextData[{
 "[1] J. D. Griffiths, ",
 StyleBox["Introduction to Elementary Particles",
  FontSlant->"Italic"],
 ", Weinheim, Germany: Wiley-VCH Verlag GmbH, 2008. ",
 ButtonBox["doi:10.1002/9783527618460",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://dx.doi.org/10.1002/9783527618460"], None},
  ButtonNote->"http://dx.doi.org/10.1002/9783527618460"],
 "."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.624891908874378*^9, 3.6248919324873753`*^9}, {
   3.624891974738253*^9, 3.624891994633683*^9}, 3.624907051640833*^9, {
   3.627135423539044*^9, 3.62713542428794*^9}, {3.627148642521819*^9, 
   3.627148647863772*^9}, 3.627307706349021*^9, {3.627307744385919*^9, 
   3.6273077455546427`*^9}, {3.627307805322826*^9, 3.6273078068218307`*^9}, {
   3.627307874726241*^9, 3.627307922541605*^9}},
 CellID->1705372193,ExpressionUUID->"b8efa94d-fc10-4d95-9cec-bdac620c4d42"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Submission Notes",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"SubmissionNotes", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Enter any additional information that you would like to \
communicate to the reviewer here. This section will not be included in the \
published resource.", 
           StyleBox["\n", FontSize -> 4]}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoSubmissionNotes"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "e5757e32-339c-4623-8871-92f044700c4f"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "SubmissionNotes"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Submission Notes", "SubmissionNotes", "TemplateCellGroup"},
 CellID->797097429,ExpressionUUID->"dd34accf-2e03-48cb-a622-4efbeda83270"],

Cell["Additional information for the reviewer.", "Text",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->820829112,ExpressionUUID->"e9ba1f57-4050-48b3-9613-0f23ca8abafd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Keywords",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Keywords", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List relevant terms (e.g. functional areas, algorithm names, related \
concepts) that should be used to include the demonstration in search \
results.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20,
         FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoKeywords"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "db9baa68-69a8-485d-bd9d-b76ca2aa6975"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Keywords"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Keywords", "TemplateCellGroup"},
 CellID->938146184,ExpressionUUID->"e09edf6f-dabd-41a9-a9ae-e7b3d4df9542"],

Cell["amplitude", "Item",
 TaggingRules->{},
 CellID->639559915,ExpressionUUID->"7a0f8b29-5ae9-41eb-95ed-ebc3555b5884"],

Cell["toy theory", "Item",
 TaggingRules->{},
 CellID->19443273,ExpressionUUID->"39aef799-7912-43a7-b25d-c9c63bb4cfd8"],

Cell["toy model", "Item",
 TaggingRules->{},
 CellID->375137771,ExpressionUUID->"2c971967-17ae-4aab-ab1c-02c404d8944a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Categories",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Categories", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Choose categories that best represent your demonstration. These \
choices determine which pages your demonstration will appear on when \
published to the repository.", "MoreInfoText"], Background -> GrayLevel[0.95],
         FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 
        5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCategories"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "20b89225-d40c-430e-90d7-9b3d2aa3df20"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Categories"},
 CellTags->{"Categories", "DemoCategories", "TemplateCellGroup"},
 CellID->845692503,ExpressionUUID->"c8f4c3cb-07f2-4f5e-87ff-358f077a4018"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Mathematics"}], "\" \"", 
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "School Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"School Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"School Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Elementary School K-2 Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Elementary School K-2 Mathematics\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Elementary School 3-5 Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Elementary School 3-5 Mathematics\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Middle School Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Middle School Mathematics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"High School Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"High School Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Algebra I"}], 
                    "\" \"", 
                    StyleBox["\"High School Algebra I\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Geometry"}], 
                    "\" \"", 
                    StyleBox["\"High School Geometry\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, 
                    "High School Algebra II and Trigonometry"}], "\" \"", 
                    StyleBox[
                    "\"High School Algebra II and Trigonometry\"", FontSize -> 
                    12, Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Precalculus"}], 
                    "\" \"", 
                    StyleBox["\"High School Precalculus\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, 
                    "High School Calculus and Analytic Geometry"}], "\" \"", 
                    StyleBox[
                    "\"High School Calculus and Analytic Geometry\"", 
                    FontSize -> 12, Editable -> False, StripOnInput -> 
                    False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, 
                    "High School Advanced Calculus and Linear Algebra"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Advanced Calculus and Linear Algebra\"", 
                    FontSize -> 12, Editable -> False, StripOnInput -> 
                    False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "High School Finite Mathematics"}], 
                    "\" \"", 
                    StyleBox["\"High School Finite Mathematics\"", FontSize -> 
                    12, Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Statistics"}], 
                    "\" \"", 
                    StyleBox["\"High School Statistics\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{
                    Left}}}, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Area"}], "\" \"", 
                    StyleBox[
                    "\"Area\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Equations"}], "\" \"", 
                    StyleBox[
                    "\"Equations\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Exponential Functions"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Exponential Functions\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Exponents and Logarithms"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Exponents and Logarithms\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Hyperbolic Functions"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Hyperbolic Functions\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Identities"}], "\" \"", 
                    StyleBox[
                    "\"Identities\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Inequalities"}], "\" \"", 
                    StyleBox[
                    "\"Inequalities\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Integers"}], "\" \"", 
                    StyleBox[
                    "\"Integers\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Irrational Numbers"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Irrational Numbers\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Number Bases"}], "\" \"", 
                    StyleBox[
                    "\"Number Bases\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Parametric Equations"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Parametric Equations\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Perimeter"}], "\" \"", 
                    StyleBox[
                    "\"Perimeter\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Pi"}], "\" \"", 
                    StyleBox[
                    "\"Pi\"", FontSize -> 12, Editable -> False, StripOnInput -> 
                    False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Polynomials"}], "\" \"", 
                    StyleBox[
                    "\"Polynomials\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Pre-Algebra"}], "\" \"", 
                    StyleBox[
                    "\"Pre-Algebra\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Prime Numbers"}], "\" \"", 
                    StyleBox[
                    "\"Prime Numbers\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Rational Numbers"}], "\" \"", 
                    
                    StyleBox[
                    "\"Rational Numbers\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Real Numbers"}], "\" \"", 
                    StyleBox[
                    "\"Real Numbers\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Trigonometric Functions"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Trigonometric Functions\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Volume"}], "\" \"", 
                    StyleBox[
                    "\"Volume\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Algebra"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Algebra\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Algebra\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Algebra I"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Algebra I\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, 
                    "High School Algebra II and Trigonometry"}], "\" \"", 
                    StyleBox[
                    "\"High School Algebra II and Trigonometry\"", FontSize -> 
                    12, Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Precalculus"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Precalculus\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Complex Numbers"}], "\" \"", 
                    StyleBox[
                    "\"Complex Numbers\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Linear Algebra"}], "\" \"", 
                    StyleBox[
                    "\"Linear Algebra\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Polynomials"}], "\" \"", 
                    StyleBox[
                    "\"Polynomials\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Quadratic Forms"}], "\" \"", 
                    StyleBox[
                    "\"Quadratic Forms\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Rational Functions"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Rational Functions\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Vector Algebra"}], "\" \"", 
                    StyleBox[
                    "\"Vector Algebra\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Applied Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Applied Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Applied Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Approximation Methods"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Approximation Methods\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Linear Algebra"}], "\" \"", 
                    StyleBox[
                    "\"Linear Algebra\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Numerical Analysis"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Numerical Analysis\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Operations Research"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Operations Research\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Optimization"}], "\" \"", 
                    StyleBox[
                    "\"Optimization\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Special Functions"}], "\" \"", 
                    StyleBox[
                    "\"Special Functions\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Wavelets"}], "\" \"", 
                    StyleBox[
                    "\"Wavelets\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Calculus & Analysis"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Calculus & Analysis\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Calculus & Analysis\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, 
                    "High School Calculus and Analytic Geometry"}], "\" \"", 
                    StyleBox[
                    "\"High School Calculus and Analytic Geometry\"", 
                    FontSize -> 12, Editable -> False, StripOnInput -> 
                    False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, 
                    "High School Advanced Calculus and Linear Algebra"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Advanced Calculus and Linear Algebra\"", 
                    FontSize -> 12, Editable -> False, StripOnInput -> 
                    False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Calculus"}], "\" \"", 
                    StyleBox[
                    "\"Calculus\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Complex Analysis"}], "\" \"", 
                    
                    StyleBox[
                    "\"Complex Analysis\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Derivatives"}], "\" \"", 
                    StyleBox[
                    "\"Derivatives\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Differential Equations"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Differential Equations\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Harmonic Analysis"}], "\" \"", 
                    StyleBox[
                    "\"Harmonic Analysis\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Integrals"}], "\" \"", 
                    StyleBox[
                    "\"Integrals\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Multivariable Calculus"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Multivariable Calculus\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Real Analysis"}], "\" \"", 
                    StyleBox[
                    "\"Real Analysis\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Related Rates"}], "\" \"", 
                    StyleBox[
                    "\"Related Rates\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Riemann Surfaces"}], "\" \"", 
                    
                    StyleBox[
                    "\"Riemann Surfaces\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Series"}], "\" \"", 
                    StyleBox[
                    "\"Series\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Special Functions"}], "\" \"", 
                    StyleBox[
                    "\"Special Functions\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Vector Fields"}], "\" \"", 
                    StyleBox[
                    "\"Vector Fields\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Discrete Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Discrete Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Discrete Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "High School Finite Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Finite Mathematics\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Coding Theory"}], "\" \"", 
                    StyleBox[
                    "\"Coding Theory\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Combinatorics"}], "\" \"", 
                    StyleBox[
                    "\"Combinatorics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Graph Theory"}], "\" \"", 
                    StyleBox[
                    "\"Graph Theory\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Networks"}], "\" \"", 
                    StyleBox[
                    "\"Networks\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Sequences"}], "\" \"", 
                    StyleBox[
                    "\"Sequences\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Tiling"}], "\" \"", 
                    StyleBox[
                    "\"Tiling\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Trees"}], "\" \"", 
                    StyleBox[
                    "\"Trees\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Experimental Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Experimental Mathematics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Geometry"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Geometry\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Geometry\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Geometry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Geometry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Algebraic Curves"}], "\" \"", 
                    
                    StyleBox[
                    "\"Algebraic Curves\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Algebraic Geometry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Algebraic Geometry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Algebraic Surfaces"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Algebraic Surfaces\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Analytic Geometry"}], "\" \"", 
                    StyleBox[
                    "\"Analytic Geometry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Conic Sections"}], "\" \"", 
                    StyleBox[
                    "\"Conic Sections\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Curves"}], "\" \"", 
                    StyleBox[
                    "\"Curves\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Differential Geometry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Differential Geometry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Ellipses"}], "\" \"", 
                    StyleBox[
                    "\"Ellipses\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Geometric Transformations"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Geometric Transformations\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Higher-Dimensional Geometry"}], "\" \"", 
                    StyleBox[
                    "\"Higher-Dimensional Geometry\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Hyperbolic Geometry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Hyperbolic Geometry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Nested Patterns"}], "\" \"", 
                    StyleBox[
                    "\"Nested Patterns\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Plane Geometry"}], "\" \"", 
                    StyleBox[
                    "\"Plane Geometry\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Polygons"}], "\" \"", 
                    StyleBox[
                    "\"Polygons\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Polyhedra"}], "\" \"", 
                    StyleBox[
                    "\"Polyhedra\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Projective Geometry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Projective Geometry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Reflections"}], "\" \"", 
                    StyleBox[
                    "\"Reflections\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Solid Geometry"}], "\" \"", 
                    StyleBox[
                    "\"Solid Geometry\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Surfaces"}], "\" \"", 
                    StyleBox[
                    "\"Surfaces\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Triangles"}], "\" \"", 
                    StyleBox[
                    "\"Triangles\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Historical Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Historical Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Historical Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Euclid's Elements"}], "\" \"", 
                    StyleBox[
                    "\"Euclid's Elements\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Foundations of Mathematics"}],
                     "\" \"", 
                    StyleBox[
                    "\"Foundations of Mathematics\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Greek Mathematics"}], "\" \"", 
                    StyleBox[
                    "\"Greek Mathematics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Unsolved Problems"}], "\" \"", 
                    StyleBox[
                    "\"Unsolved Problems\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Number Theory"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Number Theory\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Number Theory\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Number Bases"}], "\" \"", 
                    StyleBox[
                    "\"Number Bases\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Prime Numbers"}], "\" \"", 
                    StyleBox[
                    "\"Prime Numbers\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Representations of Numbers"}],
                     "\" \"", 
                    StyleBox[
                    "\"Representations of Numbers\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Pure Mathematics"}], "\" \"", 
                    
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Pure Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Pure Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Algebraic Geometry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Algebraic Geometry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Complex Analysis"}], "\" \"", 
                    
                    StyleBox[
                    "\"Complex Analysis\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Differential Geometry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Differential Geometry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Dynamical Systems Theory"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Dynamical Systems Theory\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Group Theory"}], "\" \"", 
                    StyleBox[
                    "\"Group Theory\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Knot Theory"}], "\" \"", 
                    StyleBox[
                    "\"Knot Theory\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Mathematical Logic"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Mathematical Logic\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Theorem Proving"}], "\" \"", 
                    StyleBox[
                    "\"Theorem Proving\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Topology"}], "\" \"", 
                    StyleBox[
                    "\"Topology\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Recreational Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Recreational Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Recreational Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Golden Ratio"}], "\" \"", 
                    StyleBox[
                    "\"Golden Ratio\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Mathematics Problems"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Mathematics Problems\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Unsolved Problems"}], "\" \"", 
                    StyleBox[
                    "\"Unsolved Problems\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Statistics"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Statistics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Statistics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Statistics"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Statistics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Data Analysis"}], "\" \"", 
                    StyleBox[
                    "\"Data Analysis\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Probability"}], "\" \"", 
                    StyleBox[
                    "\"Probability\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Random Processes"}], "\" \"", 
                    
                    StyleBox[
                    "\"Random Processes\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Life Sciences"}], "\" \"", 
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Life Sciences\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Life Sciences\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Biology"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Biology\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Biology\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Biology"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Biology\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Developmental Biology"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Developmental Biology\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Growth Processes"}], "\" \"", 
                    
                    StyleBox[
                    "\"Growth Processes\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Molecular Biology"}], "\" \"", 
                    StyleBox[
                    "\"Molecular Biology\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Natural Forms"}], "\" \"", 
                    StyleBox[
                    "\"Natural Forms\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Plant Biology"}], "\" \"", 
                    StyleBox[
                    "\"Plant Biology\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Zoology"}], "\" \"", 
                    StyleBox[
                    "\"Zoology\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Cognitive Science"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Cognitive Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Cognitive Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Perception"}], "\" \"", 
                    StyleBox[
                    "\"Perception\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Psychology"}], "\" \"", 
                    StyleBox[
                    "\"Psychology\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Psychophysics"}], "\" \"", 
                    StyleBox[
                    "\"Psychophysics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Ecology"}], "\" \"", 
                    StyleBox["\"Ecology\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Medicine"}], "\" \"", 
                    StyleBox[
                    "\"Medicine\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Engineering & Technology"}], "\" \"", 
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Engineering & Technology\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Engineering & Technology\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "School Applied Sciences"}], 
                    "\" \"", 
                    StyleBox[
                    "\"School Applied Sciences\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Chemical Engineering"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Chemical Engineering\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Civil Engineering"}], "\" \"", 
                    StyleBox[
                    "\"Civil Engineering\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Control Theory"}], "\" \"", 
                    StyleBox[
                    "\"Control Theory\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Electrical Engineering"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Electrical Engineering\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Electrical Engineering\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Circuit Design"}], "\" \"", 
                    StyleBox[
                    "\"Circuit Design\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Signal Processing"}], "\" \"", 
                    StyleBox[
                    "\"Signal Processing\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Fluid Mechanics"}], "\" \"", 
                    StyleBox[
                    "\"Fluid Mechanics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Image Processing"}], "\" \"", 
                    
                    StyleBox[
                    "\"Image Processing\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Machines"}], "\" \"", 
                    StyleBox[
                    "\"Machines\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Mechanical Engineering"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Mechanical Engineering\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Nanotechnology"}], "\" \"", 
                    StyleBox[
                    "\"Nanotechnology\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Robotics"}], "\" \"", 
                    StyleBox[
                    "\"Robotics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Signal Processing"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Signal Processing\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Signal Processing\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Audio"}], "\" \"", 
                    StyleBox[
                    "\"Audio\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Wavelets"}], "\" \"", 
                    StyleBox[
                    "\"Wavelets\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Kids & Fun"}], "\" \"", 
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Kids & Fun\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Kids & Fun\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "School Puzzles and Recreations"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"School Puzzles and Recreations\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"School Puzzles and Recreations\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Puzzles and Recreations: Elementary"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Puzzles and Recreations: Elementary\"", FontSize -> 12,
                     Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Puzzles and Recreations: Intermediate"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Puzzles and Recreations: Intermediate\"", FontSize -> 
                    12, Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Puzzles and Recreations: Advanced"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Puzzles and Recreations: Advanced\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Everyday Life"}], "\" \"", 
                    StyleBox[
                    "\"Everyday Life\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "For Kids"}], "\" \"", 
                    StyleBox[
                    "\"For Kids\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Optical Illusions"}], "\" \"", 
                    StyleBox[
                    "\"Optical Illusions\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Puzzles"}], "\" \"", 
                    StyleBox[
                    "\"Puzzles\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Recreation"}], "\" \"", 
                    StyleBox[
                    "\"Recreation\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Computation"}], "\" \"", 
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Computation\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Computation\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Algorithms"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Algorithms\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Algorithms\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Automatic Reasoning"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Automatic Reasoning\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Coding Theory"}], "\" \"", 
                    StyleBox[
                    "\"Coding Theory\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Computational Geometry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Computational Geometry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Computer Algebra"}], "\" \"", 
                    
                    StyleBox[
                    "\"Computer Algebra\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Computer Graphics"}], "\" \"", 
                    StyleBox[
                    "\"Computer Graphics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Cryptography"}], "\" \"", 
                    StyleBox[
                    "\"Cryptography\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Data Compression"}], "\" \"", 
                    
                    StyleBox[
                    "\"Data Compression\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Image Processing"}], "\" \"", 
                    
                    StyleBox[
                    "\"Image Processing\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Numerical Analysis"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Numerical Analysis\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Computer Science"}], "\" \"", 
                    
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Computer Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Computer Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "High School Computer Science"}], "\" \"", 
                    
                    StyleBox[
                    "\"High School Computer Science\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Computational Geometry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Computational Geometry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Computer Graphics"}], "\" \"", 
                    StyleBox[
                    "\"Computer Graphics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Data Structures"}], "\" \"", 
                    StyleBox[
                    "\"Data Structures\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Finite State Machines"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Finite State Machines\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Recursion"}], "\" \"", 
                    StyleBox[
                    "\"Recursion\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Theory of Computation"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Theory of Computation\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Computer Systems"}], "\" \"", 
                    
                    StyleBox[
                    "\"Computer Systems\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "NKS / Wolfram Science"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"NKS / Wolfram Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"NKS / Wolfram Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Cellular Automata"}], "\" \"", 
                    StyleBox[
                    "\"Cellular Automata\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Fractals"}], "\" \"", 
                    StyleBox[
                    "\"Fractals\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Nested Patterns"}], "\" \"", 
                    StyleBox[
                    "\"Nested Patterns\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Simple Computational Systems"}], "\" \"", 
                    
                    StyleBox[
                    "\"Simple Computational Systems\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Substitution Systems"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Substitution Systems\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Business & Social Systems"}], "\" \"", 
           
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Business & Social Systems\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Business & Social Systems\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Actuarial Science"}], "\" \"", 
                    StyleBox[
                    "\"Actuarial Science\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Business"}], "\" \"", 
                    StyleBox[
                    "\"Business\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Economics"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Economics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Economics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "High School Economics and Finance"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Economics and Finance\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Macroeconomics"}], "\" \"", 
                    StyleBox[
                    "\"Macroeconomics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Microeconomics"}], "\" \"", 
                    StyleBox["\"Microeconomics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Finance"}], "\" \"", 
                    StyleBox[
                    "\"Finance\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Law"}], "\" \"", 
                    StyleBox[
                    "\"Law\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Political Science"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Political Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Political Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "International Relations"}], 
                    "\" \"", 
                    StyleBox[
                    "\"International Relations\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Social Sciences"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Social Sciences\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Social Sciences\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "School Social Studies"}], 
                    "\" \"", 
                    StyleBox[
                    "\"School Social Studies\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Linguistics"}], "\" \"", 
                    StyleBox[
                    "\"Linguistics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Our World"}], "\" \"", 
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Our World\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Our World\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Elementary School K-2 Science"}], "\" \"", 
                    StyleBox[
                    "\"Elementary School K-2 Science\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Elementary School 3-5 Science"}], "\" \"", 
                    StyleBox["\"Elementary School 3-5 Science\"", FontSize -> 
                    12, Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Middle School Science"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Middle School Science\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Everyday Life"}], "\" \"", 
                    StyleBox[
                    "\"Everyday Life\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Geography"}], "\" \"", 
                    StyleBox[
                    "\"Geography\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Geometric Models"}], "\" \"", 
                    
                    StyleBox[
                    "\"Geometric Models\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "History"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"History\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"History\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Classic Science Experiments"}], "\" \"", 
                    StyleBox[
                    "\"Classic Science Experiments\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Euclid's Elements"}], "\" \"", 
                    StyleBox[
                    "\"Euclid's Elements\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Greek Mathematics"}], "\" \"", 
                    StyleBox[
                    "\"Greek Mathematics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "International Relations"}], 
                    "\" \"", 
                    StyleBox[
                    "\"International Relations\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Linguistics"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Linguistics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Linguistics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "School Language Arts"}], 
                    "\" \"", 
                    StyleBox[
                    "\"School Language Arts\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Textual Analysis"}], "\" \"", 
                    
                    StyleBox[
                    "\"Textual Analysis\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Machines"}], "\" \"", 
                    StyleBox[
                    "\"Machines\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Natural Forms"}], "\" \"", 
                    StyleBox[
                    "\"Natural Forms\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Navigation"}], "\" \"", 
                    StyleBox[
                    "\"Navigation\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Solar System"}], "\" \"", 
                    StyleBox[
                    "\"Solar System\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Programming Functionality"}], "\" \"", 
           
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Programming Functionality\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Programming Functionality\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "3D Graphics"}], "\" \"", 
                    StyleBox[
                    "\"3D Graphics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Version 7 Features"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Version 7 Features\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Short Programs"}], "\" \"", 
                    StyleBox[
                    "\"Short Programs\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Physical Sciences"}], "\" \"", 
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Physical Sciences\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Physical Sciences\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Astronomy"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Astronomy\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Astronomy\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Astronomy"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Astronomy\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Solar System"}], "\" \"", 
                    StyleBox[
                    "\"Solar System\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Chemistry"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Chemistry\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Chemistry\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Chemistry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Chemistry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Chemical Kinetics"}], "\" \"", 
                    StyleBox[
                    "\"Chemical Kinetics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "General Chemistry"}], "\" \"", 
                    StyleBox[
                    "\"General Chemistry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Inorganic Chemistry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Inorganic Chemistry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Organic Chemistry"}], "\" \"", 
                    StyleBox[
                    "\"Organic Chemistry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Physical Chemistry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Physical Chemistry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Earth Science"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Earth Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Earth Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, 
                    "High School Earth and Environmental Sciences"}], "\" \"", 
                    StyleBox[
                    "\"High School Earth and Environmental Sciences\"", 
                    FontSize -> 12, Editable -> False, StripOnInput -> 
                    False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Meteorology"}], "\" \"", 
                    StyleBox[
                    "\"Meteorology\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "History of Science"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"History of Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"History of Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Classic Science Experiments"}], "\" \"", 
                    StyleBox[
                    "\"Classic Science Experiments\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Classic Scientific Images"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Classic Scientific Images\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Materials Science"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Materials Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Materials Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Crystallography"}], "\" \"", 
                    StyleBox[
                    "\"Crystallography\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Physics"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Physics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Physics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Physics"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Physics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Acoustics"}], "\" \"", 
                    StyleBox[
                    "\"Acoustics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Astrophysics"}], "\" \"", 
                    StyleBox[
                    "\"Astrophysics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "College Physics"}], "\" \"", 
                    StyleBox[
                    "\"College Physics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Electromagnetism"}], "\" \"", 
                    
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Electromagnetism\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Electromagnetism\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Electrostatics"}], "\" \"", 
                    StyleBox[
                    "\"Electrostatics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Fluid Mechanics"}], "\" \"", 
                    StyleBox[
                    "\"Fluid Mechanics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Gravitation Theory"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Gravitation Theory\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Mechanics"}], "\" \"", 
                    StyleBox[
                    "\"Mechanics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Optics"}], "\" \"", 
                    StyleBox[
                    "\"Optics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Particle Physics"}], "\" \"", 
                    
                    StyleBox[
                    "\"Particle Physics\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Quantum Physics"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Quantum Physics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Quantum Physics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    "Quantum Mechanics", {False, "Quantum Mechanics"}], 
                    "\" \"", 
                    StyleBox["\"Quantum Mechanics\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{
                    Left}}}, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Statistical Mechanics"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Statistical Mechanics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Statistical Mechanics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Chemical Kinetics"}], "\" \"", 
                    StyleBox[
                    "\"Chemical Kinetics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Thermodynamics"}], "\" \"", 
                    StyleBox[
                    "\"Thermodynamics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Waves"}], "\" \"", 
                    StyleBox[
                    "\"Waves\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Systems, Models & Methods"}], "\" \"", 
           
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Systems, Models & Methods\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Systems, Models & Methods\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Cellular Automata"}], "\" \"", 
                    StyleBox[
                    "\"Cellular Automata\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Chaos Theory"}], "\" \"", 
                    StyleBox[
                    "\"Chaos Theory\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Discrete Models"}], "\" \"", 
                    StyleBox[
                    "\"Discrete Models\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Experimental Methods"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Experimental Methods\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Fractals"}], "\" \"", 
                    StyleBox[
                    "\"Fractals\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Game Theory"}], "\" \"", 
                    StyleBox[
                    "\"Game Theory\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Generation of Form"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Generation of Form\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Multi-agent Modeling"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Multi-agent Modeling\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Networks"}], "\" \"", 
                    StyleBox[
                    "\"Networks\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Random Processes"}], "\" \"", 
                    
                    StyleBox[
                    "\"Random Processes\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Substitution Systems"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Substitution Systems\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Trees"}], "\" \"", 
                    StyleBox[
                    "\"Trees\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Creative Arts"}], "\" \"", 
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Creative Arts\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Creative Arts\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "School Art and Design"}], 
                    "\" \"", 
                    StyleBox[
                    "\"School Art and Design\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Visual Patterns"}], "\" \"", 
                    StyleBox[
                    "\"Visual Patterns\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Architecture"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Architecture\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Architecture\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Geometric Models"}], "\" \"", 
                    
                    StyleBox[
                    "\"Geometric Models\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Art"}], "\" \"", 
                    StyleBox[
                    "\"Art\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Color"}], "\" \"", 
                    StyleBox[
                    "\"Color\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Generation of Form"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Generation of Form\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Graphic Design"}], "\" \"", 
                    StyleBox[
                    "\"Graphic Design\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Iconography & Typography"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Iconography & Typography\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Music"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Music\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Music\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "School Music"}], "\" \"", 
                    StyleBox[
                    "\"School Music\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Audio"}], "\" \"", 
                    StyleBox[
                    "\"Audio\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Music Theory"}], "\" \"", 
                    StyleBox[
                    "\"Music Theory\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Patterns"}], "\" \"", 
                    StyleBox["\"Patterns\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJy9Wetv28gR711iS35Ifudxdz0wKHoHHM5o0UNRoN8Y2U6E+\
KGabg7otzW5lvay5LLLpRLlr+/MkhSHXEpOP7SfbO3sY3Yev/\
nN0t85DTYCs5A82LzJTZqb06A3mvHwA48evsqeXorMBAf/\
yFli8ti74uGMJSLMYNHY8DjzYfnOFTMzHjMD4/7uaXAYhDOlpEeHX5wGr84lj3limF545Yx3p3+\
hsx5+V5zXOfeX0792z315JaJIcs89tZ7z/K2Yzjpm+P3T4ITKfDnl95p543rtMZW/4SrmRi9q8Y+\
dy8ceSyLvToupStorGspMNA+ZDHOZE3V/ojNGpdju6CdMLkDzDkX+\
3FAkmrMk5FFz9aVIONOVlvXS7+nSC5EIw7vt+IxODAxIs+aEp77mZOOt83/nMEklZMrJ+\
adUJeBcweCwPAlb8heVvNRZTZkWZhZn1CWLlOt7JcEQHTtsjyPc3ghOBnfHCQdlZGu4P04Mn3JNhg7\
HWlulQb/rPL5vCHeLEe81y+g2xxOmGToENOq489aEawFiruuxryei/\
rEzUXIBkQI2yeio5qeOtwYT3MtVbf92tda3vGv4OQnQblNuvlcyj3k90CvV8bcez5z/\
RWrsjVScSv7JvcxwVXR323YPMC1CP8O9labRdbi0Y4dBhu95aFTHKUd+\
mkoBGUfhpQdGgnGtPonYbgoIamYq+hK1D+\
GGEDVggiLrM0FWHd1AAhRR5t3yDDYIZ8TdN6kRsfhsJ9TDB0HKwxVZ1/+Vzbnkhp6xxI4flhr4e/9/\
dOqPnCjYr6LAtczOGRhtDjef0/x8diYeHrguUacjQw/\
eMh0rKG0dW25ZjNCN8Hl2lUs4A6CJ3UPxcVUc2JRzN4NxyQzcHaKMN7JXQNQkiRfk+\
oGFVLQZwJXowDpHDsoAvRBc0jg7PhNZqHkT2bH+fTH4D0YqEsnUu5txRV0L4/G9SBic2pi/+\
0azdOZM719z81HpD9TAAUAzT5qXvhMSTqsHNu40pxOwTlhUBZqwouz3qzj0Tx6t4/\
tl3EEEjHLdCJ7DWuSuI0LXcwdrMmI4suEWcAdz2+efNILX3al/LqVIG/XoZTkLDrjTDHYHiGuH/\
LdoEK5Pz9CGWYF47uZHpNa60r1rnmEwT5iB4tYAyolkCe/\
SFuF42iqPMDTjUQNPJ1r9hraZd22yc8sfpGO5YQBqRl1nuq7ZggrEkqlsoMRb+\
KMKzKVZ8hQ8eZ6HsPePmVdSU7LsmwuVJ1GJxuqhOxYP3kD4flgh+2eSKTlHO2oFcEKr0aAkHEUa+\
U9WUpBVtOCbW55qKBGJqTV0ucMk101k2Hok7tdA8GPx+\
uJskbDYWjlYZNhGOCAB2KHy1BneeZco44we1nrDlkAYRUgi1M7mMZp23gCU/\
p1KlVRTqtktB4ysyj81B9r9jZJALD1LDwiwkmkd/lvn2+\
2aQmOMPcquB2fMsK6ah1uzewBMQz10C1VV2YtD5DdiZQedlxcBgSdvg6dVwbLR8Ud+\
bpS9EZALlgFOUbutqgPPyKadft8vJvCOGn+\
wFNmi0awjI71IjZqigO5mjYHrILqzBtHZH8dsyquLN5Rfy6pqBYNQYD1CAvddg+\
60JvwXt193xT17l8DoPDSQiDSXyoqM4YAJGs6AJVEYg4jNdfP6J4VnMNGJUp3XLNKPLL1+F3h/\
8n5V8gH6maUZNlB9LmUukaAVwUEZ2oVmoWnS65WF4btAIHB4TXs5mhwH+T2Ev8ktbXbEB5MZ+\
M5CSKFj5m+CNfzMaGwrFv7X7f6kkpDAgnLBKiMQk44gneE/\
QNvN1iZLCXUrjqEi78AzbcznCdD0znVH40TpKT6mdO56s1p2uLx6h3BwzrSZLR0HVviZXqCQIts+T+\
YCDFLSp8qIBCKgU4EoagHkYVEhbWyRM74dSQaJFlZjXs3NKClpzDLiAf61mUpNBmgKKyGWlvt/\
hV2fBicxKR0U6BXGyPwBUhXaPRbjxK1+qPIWoO7aqEjbU6HJlJIjgrQl++fIOjTE/\
xSdncWo3bAczEyrru9dyBz4yPLVjNgRMGAuiuh3gHSrY8EmtnQNTSbgShHKDiX3que6yjago/\
uER5J+WWuw6FVy9Ou64B6C2tAyRUUtJ4INbCVp1boUD7xOUyg3vdfCxhXCa8Np5TilEhzaUpWWYerI\
94EnfISI7qhxB1cK3GIRy1k2uGaAs9hANVv/AZJW487v/\
Uu1RgDNpwDMyE6rOAWKsD3hOuRpE263J9kCrtfSoBh0Qq93HrZm9q94JEIwP0mk13mGZQA780DZTrA\
ESLTogQ9FBBtT6VapfrWSRBuciK8jBcl51UCLSmIRAyoRa2w2hHKkFa8mUYHoFvScPZ5cso8U1RU+\
0BFYx9h9jv23TqpSYRvoJvHfq6xQBRmif0WkSpHJo0YTvXMJxCBvU6yXpSF/\
9q5UxCVauHyywaftdUVwdzRjymWye3XfbTckFa7ZwLYfhjqK6s4bBgzfob9FlbFQArCMIU3ZKb5TnA\
LIQlxbDZoc2G3G19DGR2qy26EnUwg2uCOwxR+8O0CWpMh7MOXzqi6Xz2ZuBTpegg/\
Zh2agmIsVMuytAZCly1ELqG7vivEyHAkd5sJ4ZzwT08azGfxkspNOrkb4NRy079K4Z9UOq247vGbQ+\
iwtSDa7VfeqRTschfF+\
Gz4kAOlbOl78tm5yDdxPywg99PvuDzYOpnTMw481zryT5ocaRz44n3O9iNjCw4JBtAIu7ZD/+\
n2jnVa9kqJgofkyXrKut1/Xtj+OSxRj0AfH5d0vGQxjePiaHrZ/\
xz8BdHe1Jh0xs6qIbV8DtZi2OP8KrjsY2XZ3Xmjib9ewCb8t6rezYe+9yFBFl9jv+\
hpUhBjFFgZxe42TnsD2BDiAbynyaWQtog3L9snR7MUYC04RKQg3i9QJm40rKH+\
hbearj4E4QCa0kmTXyt03TPf22+9EhNXiIk+wbfi+oqH558+SFwW0flywpfYPK2R/9+qEqvf/\
48rZNgpjIAnAnOv5r1bOr17fH8+8Pljew3vRxiQt6vMYCmHWjPZeeSQxSn0wKbGAS+\
CYOMayUL1g44c5+7q188tZR4N8+\
J7bJtf7m3fBWatHHgYzBdFabkuTBoYg380i2LxTqf1s3bux7CzLtpZvHPjBG79ytQaH1q4plG6rP/\
QPyQLrH8e8HkEnoeJxAh1stnEBRZrXg1gUs6fXKuH2w1umcuCEEI08GJzxGM42RWiXH7OgEY/\
K80dP/gMHkr4r"},
 CellTags->{"CheckboxCell", "Topics", "Topics-Checkboxes"},
 CellID->904163252,ExpressionUUID->"5004e665-2e8b-45e8-bce7-40d852ad9588"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Related Demonstrations",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"RelatedDemonstrations", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Enter any additional information that you would like to \
communicate to the reviewer here.", 
           StyleBox["\n", FontSize -> 4]}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoRelatedDemonstrations"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "badd4546-021a-4b73-bd81-0f8ca43d9a48"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "RelatedDemonstrations"},
 DefaultNewCellStyle->"Text",
 CellTags->{
  "Related Demonstrations", "RelatedDemonstrations", "TemplateCellGroup"},
 CellID->1132753,ExpressionUUID->"a2a5523e-bb7c-4a2b-b21e-afe62dfadd2b"],

Cell["Link to a related demonstration", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->180966586,ExpressionUUID->"5f7fa02c-a02e-4477-8083-68d9c01cbef8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "External Links",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"ExternalLinks", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Provide hyperlinks (not just bare URLs) to any relevant \
resources.wolfram.com pages, with the page title as the linked text. Links to \
", 
           ButtonBox[
           "NKS | Online", 
            BaseStyle -> {"Hyperlink", FontColor -> RGBColor[0.4, 0.45, 0.5]},
             ButtonData -> {
              URL["http://www.wolframscience.com/nks"], None}], 
           " should use the section title, not a page number. Links to \
non-Wolfram sites go in the Details section.", 
           StyleBox["\n", FontSize -> 4]}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoExternalLinks"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "2353c0c9-a9b8-444a-8146-c4b2ecbb4b50"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "ExternalLinks"},
 DefaultNewCellStyle->"Item",
 CellTags->{"External Links", "ExternalLinks", "TemplateCellGroup"},
 CellID->843468725,ExpressionUUID->"52e1a53a-9d47-45f1-a747-31a9fbf14684"],

Cell["Link to external information", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->159321921,ExpressionUUID->"321e9393-46d5-476c-9f58-5021ae3b983b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Related Symbols",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"RelatedSymbols", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "List the names of published resource objects from any Wolfram \
repository that are related to this function.", 
           StyleBox["\n", FontSize -> 4]}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoRelatedSymbols"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "cc833707-ac59-4dbf-8931-9e768e9c5751"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "RelatedSymbols"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Related Symbols", "RelatedSymbols", "TemplateCellGroup"},
 CellID->899564547,ExpressionUUID->"126d73cf-b570-4c7a-8a6b-f929d8bbe4d8"],

Cell["SymbolName (documented Wolfram Language symbol)", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->15904391,ExpressionUUID->"4b86a41f-5350-43c2-bf30-9f130e38224c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Published Date",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"PublishedDate", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{"If known, the date Demonstration was published."}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoPublishedDate"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "f54c95c4-f095-42c6-9923-a7bfc8597bd7"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "PublishedDate"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Published Date", "PublishedDate", "TemplateCellGroup"},
 CellID->364555554,ExpressionUUID->"ba3a9b99-9ae4-45bb-a55e-90b2fa7f0d3d"],

Cell["2014-12-18", "Text",
 TaggingRules->{},
 CellID->678130364,ExpressionUUID->"8b9e9961-7917-441d-bfae-13c1b0af77f3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Compatibility",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Compatibility", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Specify any known compatibilities for your demonstration to ensure \
it is discoverable on the correct platforms.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibility"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "5c5a2dc9-e36c-4cf4-b885-01dde4df258f"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Compatibility"},
 CellTags->{"Compatibility", "TemplateCellGroup"},
 CellID->618273920,ExpressionUUID->"1fa98527-ac1b-4eae-8ff4-ffddc0715a9a"],

Cell[CellGroupData[{

Cell[TextData[{
 "AR Support",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityARSupport", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Specify whether your demonstration is expected to be supported \
through AR (Augmented Reality).", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityARSupport"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "8a85fdec-a08c-4ddf-bee9-027e665c8248"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityARSupport"},
 DefaultNewCellStyle->"Text",
 FontSize->16,
 CellID->96439972,ExpressionUUID->"ec0b06b8-4c43-423d-aa7a-07bcfc22c5ce"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, False}], "\" \"", 
           StyleBox[
           "\"Supported in ARPublish (Augmented Reality)\"", FontSize -> 12, 
            Editable -> False, StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJw9j8tOwzAQRSlKKOW1ZJ0lVPJHmCCkSIhWGX7ATSfUwvZYnvEif4/\
NazlH9zFXXyloQRaHcLHLErMoWPcnnD7xOJ9x82q5kHYQ9Dyvfu75nJsxF8cWcoyUBI+dDZ0e9/\
ngLJ+6B50/PIbKRzTOyvLI7YtxjAou94kiJlngvicfjdiDrQo9/oaV/l0US4F5o7OQL5KpPkUu+\
8D9SsHdULJTTCimCmH9ROTQBAXXfeZiGUIZ8l/5B+\
sGbt4oFHYzIlNOE74vEeH2GX0plPSd9wX8smDe"},
 CellTags->{
  "CheckboxCell", "CompatibilityARSupport", 
   "CompatibilityARSupport-Checkboxes"},
 CellID->966199964,ExpressionUUID->"f0f57908-630c-4223-bf24-a3de2c755577"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Wolfram Language Version",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityWolframLanguageVersionRequired", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Enter required Wolfram Language Version (e.g. 12.1+).", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {
       "SectionMoreInfoCompatibilityWolframLanguageVersionRequired"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "0a51809f-3a5c-4096-9e11-418f716e2b90"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{
  "TemplateGroupName" -> "CompatibilityWolframLanguageVersionRequired"},
 DefaultNewCellStyle->"Text",
 FontSize->16,
 CellID->122353723,ExpressionUUID->"5c6d482b-e067-46ae-9fac-6fe055eb2b59"],

Cell["6", "Text",
 TaggingRules->{},
 CellTags->"ScrapeDefault",
 CellID->291004391,ExpressionUUID->"34f6fbb4-dbfc-45b5-83ac-af39a417128f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Cloud Support",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityCloudSupport", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Specify whether your demonstration is expected to work in the public \
cloud.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityCloudSupport"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "6b22f1e3-0566-43f8-a8ba-0633e4c7c1f9"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityCloudSupport"},
 DefaultNewCellStyle->"Text",
 FontSize->16,
 CellID->221026220,ExpressionUUID->"d3f816c2-491b-4df7-8b31-e29787224d95"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[True, {False, True}], "\" \"", 
           StyleBox[
           "\"Supported in cloud\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxFjkuOwjAQRAUKf4bF7NhxgRwCjJAioQHRXCAkjbCw3Za7e5Hb4yDQbEvvVdV2XsIIpH\
MI45NKVClhYh7YPLG9D7g4WhYurkkxc5Wg5296H3Jx0ez9gsZISbDd2LBpHGn7NabnRBGTdLA25GMt\
9madlc700EfLe6colgLzbKtCPlNNf4Kc+sBmUMKqCoIpJpS6B2GyI3JYhxIWRjkrVcjHeXSoHeN/\
2L/l4o9CzpYXZNLU4LWLCD979HlQ0rvvBXKCW6E="},
 CellTags->{
  "CheckboxCell", "CompatibilityCloudSupport", 
   "CompatibilityCloudSupport-Checkboxes"},
 CellID->855747700,ExpressionUUID->"715ea688-197e-4bd1-b364-32f7a07fce3a"]
}, Closed]]
}, Open  ]]
}, Closed]]
}, Open  ]]
},
TaggingRules->{
 "ResourceType" -> "Demonstration", "ResourceCreateNotebook" -> True, 
  "TemplateVersion" -> "2024.05.27", "CreationTimestamp" -> 
  3.927357778445939`16.34667545603441*^9, "UpdatedTimestamp" -> 
  3.927357778446001`16.346675456034415*^9, "CompatibilityTest" -> HoldComplete[
    BinaryDeserialize[
     BaseDecode[
     "OEM6eJzVWFtv2zYUri+\
5IPEyNECB9a0PeciCbR2GAduaXerJSeohSZPQ6XNo6UgRTJMqSaXxv98hJTm2I7mS7WCdHxJapL7z8\
dz40X5N7TpiGImYe0f3kQSlQsH9mlq7jEPQfj13uq7qXR//\
Ntrcw39rRx9jytTO3geQZv48HvZBSt9+9t+aFYQO4RIHLSeWErj+QFkM/\
jO1e3SHI6rNW0JDX4gBrmqehkqrVo8GQciDq5iBIq0rUCKWLvRGEZBmh2qKNJvvuQuFLNf+\
ZsIdmGUJ4J4juIZ7fUH1rd8o2vk5gKfIfmaPjJSGocNCpH3TAT/\
k4STdm4dXXhlS2Wt5S1XzPGYMif3weDI1cAUBUgWJTP0wiKV1zXi7f5UldQWRUKEWcpQAJjgqBWrY+\
NXU5jENWSwxMjX11QV1GeguV5oyRr4pYuivL+Lshdza6ompyGwRLTEf/hGhsdc4o5HdQ8xd86a/\
llgmLwuda8lRZdJ6O8EiEQu1eUyY0E6N1G5I/c0fEw/qh1uWPOavIt+WJX/\
gNwu81CBg7G11xCdui0Cp38qiZoP3scYwgmcKagsjzagLbcyrFcJum6LrAKMj8BB3+\
51gHgYSE5OrP8sCX8jwDgFv7pK2cCIBv0m1cc1V2g5yvNGpik6jCLh3zW8p9xh4DjCm5jpmVRbm+\
Ai/VvaSi7DY8VIE8rwHQ9yABmPuRIo4Wh4Ua7fVZmaE7eAOE/\
qFg4sCIUNQ3zu34A764h4f7zw8NtZJK5uz33bQHo2ZtvXNdQ5T8nX2iEBSm7mhLt3NxoFQg564jjwc\
p32/OMorAJ8KcAMfbGQlsHnCRJ+\
ym1tzpE16VP1S1uwJ6Heh5wFPGlH5cj2m3B05tyJ0oRNSJoJJYq2UmNR4SuL5ik2Z8kEedYqzz+\
2sOZMIfIwBd012Uw8wLzN4icfFeL/\
TBibAsiNlrSdjW9pLdokqh102yJIulSHqp6oUeL9KjaVSZtbqlIcyf57Dp7E/\
c32cFIg6q0p5L1ZwCgF1R92AC5l0pyzWqmmikV98h2Ut5eDOFN68MlzSzLweW1frp/\
imbYzHVf0WgM7a2LTFlZUSlsQ2Mgfsi1SBegq6hdWIEtqq5nWzutsxdWn5qY0u9uwAM3Wzy62x0Wec\
3BizLth4Cly672U7UuOT4RFs/8HbY/MTNmvqqPIxSLngoUvZhRQRoLesnluU8wTR/\
EtEPW2GrbZSwg2t9r5U7cq1HaVsyQjpj4YmhzbbVoz0xGrgbJqQHWKBzkBTz9wP0hsY2XRCnVxAXiY\
rXl+BD9Jk96ts6qG7rCYqE0ZnaCW3p/EdKrmCNk/R54+uns/s5+\
At3gmWuazMuUlU0PcHhSjVBH01nHkK/udCJLwEDmgAxMWAVNPt14WYyWmXlweJsYWF/JOZnK/\
sS3qvjJ5fCOoLU/EXy0ehgqx/CmuL6Pz9Qh6zwr64bP8nSn6hboEAP362X81KZ2fp4FoF/\
7oQ5ikkezHpKfcsLNS/K8RfTplXxS0rxX8v54//VoAvRfILkt2/\
Fu6DuJJG2H9mK2QZ3X1Y8rjKVdsLU11Qbnfn/Mae/TiO1RZHs2bny+6Vwq5Sfi8TnHKi+1+K4NOh"]\
]], "DefinitionNotebookFramework" -> "DefinitionNotebookClient", 
  "RuntimeConfiguration" -> {
   "Contexts" -> {
     "DemonstrationResource`", "DemonstrationResource`DefinitionNotebook`"}, 
    "DefaultContentMethod" -> "Tagged", "HintPods" -> True, "LoadingMethod" -> 
    "Paclet", "PacletName" -> "DemonstrationResource"}, "ToolsOpen" -> True, 
  "SubmissionReviewData" -> {"Review" -> False}},
CreateCellID->True,
FrontEndVersion->"14.1 for Mac OS X x86 (64-bit) (June 13, 2024)",
StyleDefinitions->Notebook[{
   Cell[
    CellGroupData[{
      Cell[
       StyleData[StyleDefinitions -> "Default.nb"]], 
      Cell[
       StyleData[All, "Working"], WindowToolbars -> {}, DockedCells -> {
         Cell[
          BoxData[
           TemplateBox[{}, "MainGridTemplate"]], "DockedCell", 
          CellMargins -> {{-10, -10}, {-8, -8}}, CellFrame -> 0, Background -> 
          RGBColor[0.7508, 0.17868, 0.085283], CellTags -> {"MainDockedCell"},
           CacheGraphics -> False], 
         Cell[
          BoxData[
           TemplateBox[{}, "ToolsGridTemplate"]], "DockedCell", 
          TaggingRules -> {"Tools" -> True}, 
          CellTags -> {"ToolbarDockedCell"}, 
          CellFrameMargins -> {{0, 0}, {2, 2}}, CellFrame -> {{0, 0}, {1, 0}},
           CacheGraphics -> False, CellOpen -> Dynamic[
            CurrentValue[
             EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]]]}, 
       PrivateNotebookOptions -> {
        "FileOutlineCache" -> False, "SafeFileOpen" -> "IgnoreCache"}, 
       CellLabelAutoDelete -> False, 
       CodeAssistOptions -> {"AutoDetectHyperlinks" -> False}, 
       AutoQuoteCharacters -> {}, PasteAutoQuoteCharacters -> {}]}, Open]], 
   Cell["Hint Styles", "Section"], 
   Cell[
    StyleData["MoreInfoText", StyleDefinitions -> StyleData["Text"]], 
    FontColor -> GrayLevel[0.25]], 
   Cell[
    StyleData["ErrorText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, Inherited}, {10, 10}}, 
    CellElementSpacings -> {"CellMinHeight" -> 0, "ClosedCellHeight" -> 0}, 
    FontWeight -> Bold, FontColor -> RGBColor[1, 0, 0]], 
   Cell[
    StyleData["WarningText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, 35}, {0, 0}}, FontSize -> 
    14, GridBoxOptions -> {BaseStyle -> {}}], 
   Cell["Template Boxes", "Section"], 
   Cell[
    StyleData["MoreInfoOpenerIconTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> GraphicsBox[{
            Thickness[0.090909], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 3.25}], 
              Thickness[0.045818], 
              RGBColor[0.62744, 0.62744, 0.62744, 1.]}, StripOnInput -> 
             False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQ3b48/JRRi4jD3qBpin2m8g5n6j32194VhvNZnvdo
vPUVdoh2sntxM0feQfiT4/m0q0IOQNnSwtvyDmxCIvbHYoQcMhnyG1lUFRyk
eR/oTlAAym/iKVyTjeAf2aiXt/gggt+odqhtubgiXP+k00CLYxXh5mdrf5t+
d7Ii3P5LDPeYOE8pwt33vfTBHMGnig4w98P4j5fOPqJgIArn539oPRlyUBSu
/9OGgOxZ5mJw88sKgS5aKwa3XzOm/9DXF2Jw98H4MPfD+DD/wfTD/A8zHxY+
MPth4QdzHyx80cMfAIsMpwk=
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQXTFnkfJOGwmHsNp125Lq+R1g/G8aMf2HvvI4KP39
VvrgjgAGH6b+c19wicp0IQeBKrPVduICcL6EWjDr4ksCqPLTBeH8211/U7+n
CMH5S+7v45tjLAznX773gHvySwS/qdhtyrc2ETj/04aA7FnfReH8RxHi2y8e
EIPzNUHOzRCH8x8vnX1E4QOCP+/98mPe5RJw/o9goAoWSTj/6vMs7W/TJR0O
X9ZOlVwk4PB2no3OlVsI/jKgcRs+STlonhY4vstCzCFoh1zr64syDkBXssXP
EHO4WvFSzbADwa9JNAo1yJKA82H+gfFh/oXxA29JA7Ug+GY2e4OmJQrB+f83
VX/aMEEQzrerjFhhelYAzofFB3r8AgApYdcE
                "]}]}, {
              FaceForm[
               RGBColor[0.62744, 0.62744, 0.62744, 1.]]}, StripOnInput -> 
             False]}, ImageSize -> {11., 11.}, 
           PlotRange -> {{0., 11.}, {0., 11.}}, AspectRatio -> Automatic], 
         True -> GraphicsBox[{
            Thickness[0.090909], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 3.25}], 
              Thickness[0.045818], 
              RGBColor[0.5, 0.5, 0.5, 1.]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "]]}, {
              FaceForm[
               RGBColor[0.5, 0.5, 0.5, 1.]]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQ3b48/JRRi4jD3qBpin2m8g5n6j32194VhvNZnvdo
vPUVdoh2sntxM0feQfiT4/m0q0IOQNnSwtvyDmxCIvbHYoQcMhnyG1lUFRyk
eR/oTlAAym/iKVyTjeAf2aiXt/gggt+odqhtubgiXP+k00CLYxXh5mdrf5t+
d7Ii3P5LDPeYOE8pwt33vfTBHMGnig4w98P4j5fOPqJgIArn539oPRlyUBSu
/9OGgOxZ5mJw88sKgS5aKwa3XzOm/9DXF2Jw98H4MPfD+DD/wfTD/A8zHxY+
MPth4QdzHyx80cMfAIsMpwk=
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQXTFnkfJOGwmHsNp125Lq+R1g/G8aMf2HvvI4KP39
VvrgjgAGH6b+c19wicp0IQeBKrPVduICcL6EWjDr4ksCqPLTBeH8211/U7+n
CMH5S+7v45tjLAznX773gHvySwS/qdhtyrc2ETj/04aA7FnfReH8RxHi2y8e
EIPzNUHOzRCH8x8vnX1E4QOCP+/98mPe5RJw/o9goAoWSTj/6vMs7W/TJR0O
X9ZOlVwk4PB2no3OlVsI/jKgcRs+STlonhY4vstCzCFoh1zr64syDkBXssXP
EHO4WvFSzbADwa9JNAo1yJKA82H+gfFh/oXxA29JA7Ug+GY2e4OmJQrB+f83
VX/aMEEQzrerjFhhelYAzofFB3r8AgApYdcE
                "]}]}, {
              FaceForm[
               RGBColor[0.99998, 0.99998, 0.99998, 1.]]}, StripOnInput -> 
             False]}, ImageSize -> {11., 11.}, 
           PlotRange -> {{0., 11.}, {0., 11.}}, AspectRatio -> Automatic]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["MoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        DynamicModuleBox[{
         RSNB`mPosRegion$$, RSNB`attachPos$$, RSNB`offsetPos$$, 
          RSNB`horizontalRegion$$, RSNB`verticalRegion$$, 
          RSNB`chooseAttachLocation$$}, 
         TagBox[
          TemplateBox[{
            TemplateBox[{}, "MoreInfoOpenerIconTemplate"], 
            "\"Click for more information\""}, "PrettyTooltipTemplate"], 
          EventHandlerTag[{"MouseDown" :> AttachCell[
              ParentBox[
               EvaluationBox[]], #2, 
              RSNB`chooseAttachLocation$$[], 
              RemovalConditions -> {"EvaluatorQuit", "MouseClickOutside"}], 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         DynamicModuleValues :> {{DownValues[RSNB`mPosRegion$$] = {HoldPattern[
                RSNB`mPosRegion$$[]] :> RSNB`mPosRegion$$[
                Ceiling[MousePosition["WindowScaled"] 3]], HoldPattern[
                RSNB`mPosRegion$$[
                 Pattern[RSNB`reg, {
                   Blank[Integer], 
                   Blank[Integer]}]]] :> RSNB`reg, HoldPattern[
                RSNB`mPosRegion$$[
                 BlankNullSequence[]]] :> None}}, {
           DownValues[RSNB`attachPos$$] = {HoldPattern[
                RSNB`attachPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[RSNB`h$], 
                RSNB`verticalRegion$$[RSNB`v$]}}}, {
           DownValues[RSNB`offsetPos$$] = {HoldPattern[
                RSNB`offsetPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[4 - RSNB`h$], 
                RSNB`verticalRegion$$[4 - RSNB`v$]}}}, {
           DownValues[RSNB`horizontalRegion$$] = {HoldPattern[
                RSNB`horizontalRegion$$[1]] :> Left, HoldPattern[
                RSNB`horizontalRegion$$[2]] :> Center, HoldPattern[
                RSNB`horizontalRegion$$[3]] :> Right}}, {
           DownValues[RSNB`verticalRegion$$] = {HoldPattern[
                RSNB`verticalRegion$$[1]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[2]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[3]] :> Top}}, {
           DownValues[RSNB`chooseAttachLocation$$] = {HoldPattern[
                RSNB`chooseAttachLocation$$[]] :> 
              With[{RSNB`p$ = RSNB`mPosRegion$$[]}, 
                Apply[Sequence, {
                  RSNB`offsetPos$$[RSNB`p$], {-30, 30}, 
                  RSNB`attachPos$$[RSNB`p$]}]]}}}], BoxBaselineShift -> -0.5, 
        BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["InlineMoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        DynamicModuleBox[{
         RSNB`mPosRegion$$, RSNB`attachPos$$, RSNB`offsetPos$$, 
          RSNB`horizontalRegion$$, RSNB`verticalRegion$$, 
          RSNB`chooseAttachLocation$$}, 
         TagBox[
          TemplateBox[{
            TemplateBox[{}, "MoreInfoOpenerIconTemplate"], #4}, 
           "PrettyTooltipTemplate"], 
          EventHandlerTag[{"MouseDown" :> AttachCell[
              ParentBox[
               EvaluationBox[]], #2, 
              RSNB`chooseAttachLocation$$[], 
              RemovalConditions -> {"EvaluatorQuit", "MouseClickOutside"}], 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         DynamicModuleValues :> {{DownValues[RSNB`mPosRegion$$] = {HoldPattern[
                RSNB`mPosRegion$$[]] :> RSNB`mPosRegion$$[
                Ceiling[MousePosition["WindowScaled"] 3]], HoldPattern[
                RSNB`mPosRegion$$[
                 Pattern[RSNB`reg, {
                   Blank[Integer], 
                   Blank[Integer]}]]] :> RSNB`reg, HoldPattern[
                RSNB`mPosRegion$$[
                 BlankNullSequence[]]] :> None}}, {
           DownValues[RSNB`attachPos$$] = {HoldPattern[
                RSNB`attachPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[RSNB`h$], 
                RSNB`verticalRegion$$[RSNB`v$]}}}, {
           DownValues[RSNB`offsetPos$$] = {HoldPattern[
                RSNB`offsetPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[4 - RSNB`h$], 
                RSNB`verticalRegion$$[4 - RSNB`v$]}}}, {
           DownValues[RSNB`horizontalRegion$$] = {HoldPattern[
                RSNB`horizontalRegion$$[1]] :> Left, HoldPattern[
                RSNB`horizontalRegion$$[2]] :> Center, HoldPattern[
                RSNB`horizontalRegion$$[3]] :> Right}}, {
           DownValues[RSNB`verticalRegion$$] = {HoldPattern[
                RSNB`verticalRegion$$[1]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[2]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[3]] :> Top}}, {
           DownValues[RSNB`chooseAttachLocation$$] = {HoldPattern[
                RSNB`chooseAttachLocation$$[]] :> 
              With[{RSNB`p$ = RSNB`mPosRegion$$[]}, 
                Apply[Sequence, {
                  RSNB`offsetPos$$[RSNB`p$], {-30, 30}, 
                  RSNB`attachPos$$[RSNB`p$]}]]}}}], BoxBaselineShift -> -0.5, 
        BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["ClickToCopyTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> TagBox[
           GridBox[{{#, 
              ButtonBox[
               GraphicsBox[{
                 GrayLevel[0.85], 
                 Thickness[
                  NCache[2/45, 0.044444]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 18.}, {
                   9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 18.}, {12., 
                   18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {16.5, 4.5}, {
                   16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {15.75, 17.25}, {
                   15.75, 5.25}, {6.75, 5.25}, {6.75, 17.25}, {8.25, 17.25}, {
                   8.25, 18.}}, {{9.75, 17.25}, {12.75, 17.25}, {12.75, 
                   16.5}, {9.75, 16.5}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 14.25}, {
                  14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{8.25, 12.}, {
                  14.25, 12.}, {14.25, 11.25}, {8.25, 11.25}}, {{8.25, 
                  9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25, 9.}}, {{8.25, 
                  7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 6.75}}}]}, 
                ImageSize -> 12], ButtonFunction :> Null, 
               Appearance -> {
                "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
               Evaluator -> Automatic, Method -> "Preemptive"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}},
             AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], True -> 
         DynamicModuleBox[{RSNB`clickTime$$ = 0., RSNB`timeout$$ = 3.}, 
           TagBox[
            GridBox[{{#, 
               TagBox[
                ButtonBox[
                 DynamicBox[
                  ToBoxes[
                   Refresh[
                    If[AbsoluteTime[] - RSNB`clickTime$$ > RSNB`timeout$$, 
                    RawBoxes[
                    TemplateBox[{
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[0.65], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], True -> GraphicsBox[{
                    RGBColor[0.98824, 0.41961, 0.20392], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "\"Click to copy to the clipboard\""},
                     "PrettyTooltipTemplate"]], 
                    RawBoxes[
                    TemplateBox[{
                    GraphicsBox[{
                    RGBColor[0, 
                    NCache[2/3, 0.66667], 0], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], "\"Copied\""}, 
                    "PrettyTooltipTemplate"]]], UpdateInterval -> 1, 
                    TrackedSymbols :> {RSNB`clickTime$$}], StandardForm], 
                  Evaluator -> "System"], 
                 ButtonFunction :> (RSNB`clickTime$$ = AbsoluteTime[]; 
                  CopyToClipboard[
                    BinaryDeserialize[
                    BaseDecode[#2], Defer]]), 
                 Appearance -> {
                  "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
                 Method -> "Queued", Evaluator -> "System"], 
                MouseAppearanceTag["LinkHand"]]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
           DynamicModuleValues :> {}]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["PrettyTooltipTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        TooltipBox[#, 
         FrameBox[
          
          StyleBox[#2, "Text", FontColor -> 
           RGBColor[0.53725, 0.53725, 0.53725], FontSize -> 12, FontWeight -> 
           "Plain", FontTracking -> "Plain", StripOnInput -> False], 
          Background -> RGBColor[0.96078, 0.96078, 0.96078], FrameStyle -> 
          RGBColor[0.89804, 0.89804, 0.89804], FrameMargins -> 8, 
          StripOnInput -> False], TooltipDelay -> 0.1, 
         TooltipStyle -> {Background -> None, CellFrame -> 0}], 
        Annotation[#, 
         Framed[
          Style[
          RSNB`$$tooltip, "Text", FontColor -> 
           RGBColor[0.53725, 0.53725, 0.53725], FontSize -> 12, FontWeight -> 
           "Plain", FontTracking -> "Plain"], Background -> 
          RGBColor[0.96078, 0.96078, 0.96078], FrameStyle -> 
          RGBColor[0.89804, 0.89804, 0.89804], FrameMargins -> 8], 
         "Tooltip"]& ]& )}], 
   Cell[
    StyleData["ToolsGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            FrameBox[
             ButtonBox[
              StyleBox[
              "\"Add Snapshot\"", "Text", FontFamily -> "Source Sans Pro", 
               FontSize -> 11, StripOnInput -> False], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1953907064413444837; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "AddSnapshot"; (
                    Needs["DemonstrationResource`DefinitionNotebook`" -> 
                    None]; DemonstrationResource`DefinitionNotebook`\
AddManipulateSnapshot[
                    ButtonNotebook[]])]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1953907064413444837]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> GrayLevel[1], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.5489, 0.092317, 0.067842], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.88722, 0.77308, 0.76696], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3Ixe3bNuZmzrI0hiAgGyhCvCF3L11cERnS
IyGIiYDiQFmChtw4dnSaoRZQ/URl2UOtjS8unIcgIBsoAhQHygLV4DHkwc0b
M0z0gCqX+Xp8efkCLfyBIkBxoCxQDVAlLkPWpSUB1Sz2cPr9/TvWeASKA2WB
aoAqsRpy48TxXinhPlmx9w/u40kPQFmgGqBKoHpMQ3bWVwOt2FGYSzBdAdUA
VQLVYxqywM0BKHVv726ChgDVAFUC1UM0QpI0hD1FWxUohRmemACoBqgSqB5u
CBBQbghVXELdMKFK7FAlnVAlxVIr7zyjRi6GAMrLEzigsGQjFVDREPyAmHoH
APEDg3E=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I9T2bD1Ykb/TUgiAgGyhCvCEPrlzYnea7
XJsNEwHFgbIEDblz8vA6R0Wg+tV6HOc9pV/HaUEQkA0UAYoDZYFq8Bjy6Nb1
9S4qQJW7LAW+pOj/yTZBRkARoDhQFqgGqBKXIfuKooFqdljw/8wwQjMBgoDi
QFmgGqBKrIbcOXV0uS7HCh32D0m6WE2AIKAsUA1QJVA9piHHOsqAVpxwFsdj
AgQB1QBVAtVjGrI1xAIo9SRCnaAhQDVAlUD1EI2QJA1hr7GRBkphhicmAqoB
qgSqhxsCBJQbQhWXUDdMqBI7VEknVEmx1Mo7z6iRiyGA8vIEDigs2UgFVDQE
PyCm3gEAQ+/Dcg==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I69evv3z58gsGgGygCPGGvHjx4vv371g9
DhQHyhI05OXLl79//wYK/vz8+cTEvsVuDhAEZANFgOJAWaAaPIY8f/4cYsKT
k8en6ar3SAgiI6AIUBxiDlAlLkO+fv0K5D4/d7ZfXgLNBAgCigNlgWqAKrEa
AnTkv3///vz8OdvMAKsJEASUBaoBqoR7CtmQT58+AdmXli7CYwIEAdUAVQLV
Yxry8+dPIHtNZAhBQ4BqQCH/8ydEIyRJQ9h//vwBsjHDExMB1QBVAtXDDQEC
yg2hikuoGyZUiR2qpBOqpFhq5Z1n1MjFEEB5eQIHFJZspAIqGoIfEFPvAACe
kBKf
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> GrayLevel[0.9], 
              Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
              Automatic], FrameStyle -> Directive[
               GrayLevel[0.9], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Template Input\"", "Text", FontFamily -> "Source Sans Pro",
                  FontSize -> 11, StripOnInput -> False], 
                "\"Format selection automatically using appropriate \
documentation styles\""}, "PrettyTooltipTemplate"], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    7071186616034202283; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "Template Input"; 
                    DefinitionNotebookClient`TemplateInput[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    7071186616034202283]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> GrayLevel[1], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.5489, 0.092317, 0.067842], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.88722, 0.77308, 0.76696], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3Ixe3bNuZmzrI0hiAgGyhCvCF3L11cERnS
IyGIiYDiQFmChtw4dnSaoRZQ/URl2UOtjS8unIcgIBsoAhQHygLV4DHkwc0b
M0z0gCqX+Xp8efkCLfyBIkBxoCxQDVAlLkPWpSUB1Sz2cPr9/TvWeASKA2WB
aoAqsRpy48TxXinhPlmx9w/u40kPQFmgGqBKoHpMQ3bWVwOt2FGYSzBdAdUA
VQLVYxqywM0BKHVv726ChgDVAFUC1UM0QpI0hD1FWxUohRmemACoBqgSqB5u
CBBQbghVXELdMKFK7FAlnVAlxVIr7zyjRi6GAMrLEzigsGQjFVDREPyAmHoH
APEDg3E=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I9T2bD1Ykb/TUgiAgGyhCvCEPrlzYnea7
XJsNEwHFgbIEDblz8vA6R0Wg+tV6HOc9pV/HaUEQkA0UAYoDZYFq8Bjy6Nb1
9S4qQJW7LAW+pOj/yTZBRkARoDhQFqgGqBKXIfuKooFqdljw/8wwQjMBgoDi
QFmgGqBKrIbcOXV0uS7HCh32D0m6WE2AIKAsUA1QJVA9piHHOsqAVpxwFsdj
AgQB1QBVAtVjGrI1xAIo9SRCnaAhQDVAlUD1EI2QJA1hr7GRBkphhicmAqoB
qgSqhxsCBJQbQhWXUDdMqBI7VEknVEmx1Mo7z6iRiyGA8vIEDigs2UgFVDQE
PyCm3gEAQ+/Dcg==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I69evv3z58gsGgGygCPGGvHjx4vv371g9
DhQHyhI05OXLl79//wYK/vz8+cTEvsVuDhAEZANFgOJAWaAaPIY8f/4cYsKT
k8en6ar3SAgiI6AIUBxiDlAlLkO+fv0K5D4/d7ZfXgLNBAgCigNlgWqAKrEa
AnTkv3///vz8OdvMAKsJEASUBaoBqoR7CtmQT58+AdmXli7CYwIEAdUAVQLV
Yxry8+dPIHtNZAhBQ4BqQCH/8ydEIyRJQ9h//vwBsjHDExMB1QBVAtXDDQEC
yg2hikuoGyZUiR2qpBOqpFhq5Z1n1MjFEEB5eQIHFJZspAIqGoIfEFPvAACe
kBKf
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> GrayLevel[0.9], 
              Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
              Automatic], FrameStyle -> Directive[
               GrayLevel[0.9], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Literal Input\"", "Text", FontFamily -> "Source Sans Pro", 
                 FontSize -> 11, StripOnInput -> False], 
                "\"Format selection as literal Wolfram Language code\""}, 
               "PrettyTooltipTemplate"], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4937992391498864149; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Literal Input"; 
                    DefinitionNotebookClient`LiteralInput[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4937992391498864149]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> GrayLevel[1], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.5489, 0.092317, 0.067842], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.88722, 0.77308, 0.76696], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3Ixe3bNuZmzrI0hiAgGyhCvCF3L11cERnS
IyGIiYDiQFmChtw4dnSaoRZQ/URl2UOtjS8unIcgIBsoAhQHygLV4DHkwc0b
M0z0gCqX+Xp8efkCLfyBIkBxoCxQDVAlLkPWpSUB1Sz2cPr9/TvWeASKA2WB
aoAqsRpy48TxXinhPlmx9w/u40kPQFmgGqBKoHpMQ3bWVwOt2FGYSzBdAdUA
VQLVYxqywM0BKHVv726ChgDVAFUC1UM0QpI0hD1FWxUohRmemACoBqgSqB5u
CBBQbghVXELdMKFK7FAlnVAlxVIr7zyjRi6GAMrLEzigsGQjFVDREPyAmHoH
APEDg3E=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I9T2bD1Ykb/TUgiAgGyhCvCEPrlzYnea7
XJsNEwHFgbIEDblz8vA6R0Wg+tV6HOc9pV/HaUEQkA0UAYoDZYFq8Bjy6Nb1
9S4qQJW7LAW+pOj/yTZBRkARoDhQFqgGqBKXIfuKooFqdljw/8wwQjMBgoDi
QFmgGqBKrIbcOXV0uS7HCh32D0m6WE2AIKAsUA1QJVA9piHHOsqAVpxwFsdj
AgQB1QBVAtVjGrI1xAIo9SRCnaAhQDVAlUD1EI2QJA1hr7GRBkphhicmAqoB
qgSqhxsCBJQbQhWXUDdMqBI7VEknVEmx1Mo7z6iRiyGA8vIEDigs2UgFVDQE
PyCm3gEAQ+/Dcg==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I69evv3z58gsGgGygCPGGvHjx4vv371g9
DhQHyhI05OXLl79//wYK/vz8+cTEvsVuDhAEZANFgOJAWaAaPIY8f/4cYsKT
k8en6ar3SAgiI6AIUBxiDlAlLkO+fv0K5D4/d7ZfXgLNBAgCigNlgWqAKrEa
AnTkv3///vz8OdvMAKsJEASUBaoBqoR7CtmQT58+AdmXli7CYwIEAdUAVQLV
Yxry8+dPIHtNZAhBQ4BqQCH/8ydEIyRJQ9h//vwBsjHDExMB1QBVAtXDDQEC
yg2hikuoGyZUiR2qpBOqpFhq5Z1n1MjFEEB5eQIHFJZspAIqGoIfEFPvAACe
kBKf
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> GrayLevel[0.9], 
              Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
              Automatic], FrameStyle -> Directive[
               GrayLevel[0.9], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Subscripted Variable\"", "Text", FontFamily -> 
                 "Source Sans Pro", FontSize -> 11, StripOnInput -> False], 
                "\"Insert subscripted variable placeholder\""}, 
               "PrettyTooltipTemplate"], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    168721804526114855; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "Subscripted Variable"; 
                    DefinitionNotebookClient`SubscriptInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    168721804526114855]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> GrayLevel[1], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.5489, 0.092317, 0.067842], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.88722, 0.77308, 0.76696], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3Ixe3bNuZmzrI0hiAgGyhCvCF3L11cERnS
IyGIiYDiQFmChtw4dnSaoRZQ/URl2UOtjS8unIcgIBsoAhQHygLV4DHkwc0b
M0z0gCqX+Xp8efkCLfyBIkBxoCxQDVAlLkPWpSUB1Sz2cPr9/TvWeASKA2WB
aoAqsRpy48TxXinhPlmx9w/u40kPQFmgGqBKoHpMQ3bWVwOt2FGYSzBdAdUA
VQLVYxqywM0BKHVv726ChgDVAFUC1UM0QpI0hD1FWxUohRmemACoBqgSqB5u
CBBQbghVXELdMKFK7FAlnVAlxVIr7zyjRi6GAMrLEzigsGQjFVDREPyAmHoH
APEDg3E=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I9T2bD1Ykb/TUgiAgGyhCvCEPrlzYnea7
XJsNEwHFgbIEDblz8vA6R0Wg+tV6HOc9pV/HaUEQkA0UAYoDZYFq8Bjy6Nb1
9S4qQJW7LAW+pOj/yTZBRkARoDhQFqgGqBKXIfuKooFqdljw/8wwQjMBgoDi
QFmgGqBKrIbcOXV0uS7HCh32D0m6WE2AIKAsUA1QJVA9piHHOsqAVpxwFsdj
AgQB1QBVAtVjGrI1xAIo9SRCnaAhQDVAlUD1EI2QJA1hr7GRBkphhicmAqoB
qgSqhxsCBJQbQhWXUDdMqBI7VEknVEmx1Mo7z6iRiyGA8vIEDigs2UgFVDQE
PyCm3gEAQ+/Dcg==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I69evv3z58gsGgGygCPGGvHjx4vv371g9
DhQHyhI05OXLl79//wYK/vz8+cTEvsVuDhAEZANFgOJAWaAaPIY8f/4cYsKT
k8en6ar3SAgiI6AIUBxiDlAlLkO+fv0K5D4/d7ZfXgLNBAgCigNlgWqAKrEa
AnTkv3///vz8OdvMAKsJEASUBaoBqoR7CtmQT58+AdmXli7CYwIEAdUAVQLV
Yxry8+dPIHtNZAhBQ4BqQCH/8ydEIyRJQ9h//vwBsjHDExMB1QBVAtXDDQEC
yg2hikuoGyZUiR2qpBOqpFhq5Z1n1MjFEEB5eQIHFJZspAIqGoIfEFPvAACe
kBKf
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> GrayLevel[0.9], 
              Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
              Automatic], FrameStyle -> Directive[
               GrayLevel[0.9], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            ActionMenuBox[
             FrameBox[
              ButtonBox[
               StyleBox[
                
                TemplateBox[{
                 "\"Cells\"", 
                  "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\
\""}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
                StripOnInput -> False], ButtonFunction :> 
               With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                 Quiet[
                  
                  Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                   Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4246462567992284997; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[Null]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4246462567992284997]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                   Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
               Dynamic[
                 FEPrivate`If[
                  CurrentValue[Enabled], 
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   FontColor -> GrayLevel[1], 
                    TaggingRules -> {"ButtonHovering" -> True}}, {
                   FontColor -> RGBColor[0.5489, 0.092317, 0.067842], 
                    TaggingRules -> {"ButtonHovering" -> False}}], {
                  FontColor -> RGBColor[0.88722, 0.77308, 0.76696], 
                   TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                 "System"], Appearance -> {"Default" -> Image[CompressedData["

1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3Ixe3bNuZmzrI0hiAgGyhCvCF3L11cERnS
IyGIiYDiQFmChtw4dnSaoRZQ/URl2UOtjS8unIcgIBsoAhQHygLV4DHkwc0b
M0z0gCqX+Xp8efkCLfyBIkBxoCxQDVAlLkPWpSUB1Sz2cPr9/TvWeASKA2WB
aoAqsRpy48TxXinhPlmx9w/u40kPQFmgGqBKoHpMQ3bWVwOt2FGYSzBdAdUA
VQLVYxqywM0BKHVv726ChgDVAFUC1UM0QpI0hD1FWxUohRmemACoBqgSqB5u
CBBQbghVXELdMKFK7FAlnVAlxVIr7zyjRi6GAMrLEzigsGQjFVDREPyAmHoH
APEDg3E=
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I9T2bD1Ykb/TUgiAgGyhCvCEPrlzYnea7
XJsNEwHFgbIEDblz8vA6R0Wg+tV6HOc9pV/HaUEQkA0UAYoDZYFq8Bjy6Nb1
9S4qQJW7LAW+pOj/yTZBRkARoDhQFqgGqBKXIfuKooFqdljw/8wwQjMBgoDi
QFmgGqBKrIbcOXV0uS7HCh32D0m6WE2AIKAsUA1QJVA9piHHOsqAVpxwFsdj
AgQB1QBVAtVjGrI1xAIo9SRCnaAhQDVAlUD1EI2QJA1hr7GRBkphhicmAqoB
qgSqhxsCBJQbQhWXUDdMqBI7VEknVEmx1Mo7z6iRiyGA8vIEDigs2UgFVDQE
PyCm3gEAQ+/Dcg==
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I69evv3z58gsGgGygCPGGvHjx4vv371g9
DhQHyhI05OXLl79//wYK/vz8+cTEvsVuDhAEZANFgOJAWaAaPIY8f/4cYsKT
k8en6ar3SAgiI6AIUBxiDlAlLkO+fv0K5D4/d7ZfXgLNBAgCigNlgWqAKrEa
AnTkv3///vz8OdvMAKsJEASUBaoBqoR7CtmQT58+AdmXli7CYwIEAdUAVQLV
Yxry8+dPIHtNZAhBQ4BqQCH/8ydEIyRJQ9h//vwBsjHDExMB1QBVAtXDDQEC
yg2hikuoGyZUiR2qpBOqpFhq5Z1n1MjFEEB5eQIHFJZspAIqGoIfEFPvAACe
kBKf
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True]}, Background -> GrayLevel[0.9], 
               Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
               Automatic], FrameStyle -> Directive[
                GrayLevel[0.9], 
                AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
              False, StripOnInput -> False], {
             "\"Insert comment for reviewer\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    7544339529118446740; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Insert comment for reviewer"; 
                    DefinitionNotebookClient`CommentInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    7544339529118446740]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Mark/unmark selected cells as comments\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1923617830619908649; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Mark/unmark selected cells as comments"; 
                    DefinitionNotebookClient`CommentToggle[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1923617830619908649]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Mark/unmark selected cells as excluded\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1439263868824766472; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Mark/unmark selected cells as excluded"; 
                    DefinitionNotebookClient`ExclusionToggle[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1439263868824766472]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]]}, Appearance -> None, Method -> "Queued"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}}, 
          AutoDelete -> False, 
          GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
              GrayLevel[0.9]}}, 
          GridBoxFrame -> {
           "Columns" -> False, "RowsIndexed" -> {1 -> GrayLevel[0.9]}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {
           "Columns" -> {5, {0.5}, 5}, "Rows" -> {{Automatic}}}, FrameStyle -> 
          GrayLevel[0.75]], "Grid"], ButtonBoxOptions -> {Enabled -> Dynamic[
            Not[
             TrueQ[DefinitionNotebookClient`$ButtonsDisabled]], 
            TrackedSymbols :> {DefinitionNotebookClient`$ButtonsDisabled}]}, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["MainGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            TagBox[
             GridBox[{{
                GraphicsBox[
                 RasterBox[CompressedData["
1:eJztnXvQFlUdx0ktEbIsMsnKUWqaLkOYKWNNiHSbQUrtRdLUerm8L+AlbJBE
ur7gIFlmzeQ4iOIlanTGCyT4RzPZWDKKt1E0TSP6OcZomhI5mpFmnc/s7rTv
tufsue3zHHj44+Mg7HMu39095/wu5+xhs8/pm7vXiBEjzh2p/tM3a/GUhQtn
LZl+gPqfGQvOPWPegsGBqQsWDc4bXHj07L3VXw4oZir2Ucj7dmlOyel2O3qR
0YptOaMTaE+vsULxn5wLE2hPL/Fexc6S/jvzv+t2u3qFW0vaF2xIoF29wLQa
7QumJdC+3Zl9FVsM+m/Jr+l2O3dXlhi0Lzg/gXbujrxT8ZKF/i/l13a7vZ1m
kuKNLZZ/vYX2Bde12I79FZMT0LvKKsUOxQ8Vh0Yue7KD9gXHRG7DOMWPFC8o
Lk9A7yrLSn3/t+JmifOc7KPY7KH/5vy3ofVPUaxTvFYqeygBvavM1+jwgGKm
+K9LzvbQvuAszzpHKmYb7vu8BPSucnyDFs8qlirGOpR5oOJvAfpvV7zNob6D
FRco/tpQ7ucS0LvKREtN/qVYo/ioRZmrArQvsBmrafvP87bZlHlEAnpXeYeH
NhsVM6R+nD5Sho+5vrym0Ys6v6i406NMl3e4U+wt2bzro9GTivMUb83Lep3i
rgjaF9yVlzkirwMb7c+eZb2q2CsBvet4OlAnbKeVim9F1L6AMhmL/hFYzlMJ
6KzjvhZ0S417EtBZx4YE9GmbWxLQWcflCejTNisT0FnHUAL6tM13EtBZx9wu
acIak3nxMcWjir/I8PhkTAYS0FnHcR3S+znFz3Itxku9b4P15nsUp0tm7/09
Ut1TE9BZxxEtar4z1/yzktkarm0bpRhU/DGwHYcnoLOOsS3o/rxkfqO3R2oj
du85kvmRfdpzUAI668AufDWS7ujzbWkvpsPYdI9jm16R/9nRqfJUJP1/L1kc
63uKryg+rHh95La+QbIxzbZN2xLQt4m7I+lfx4uS5f4wfsSK8fI8f9+y/rsT
0LeJdS3qX4Y1568VJ4nffFzlEos61yWgb5U3KT6t+KZivcRb57nwJ8WXJcwv
yW9vaqiHvuFjwZfHOuzNHdaa52yCZPG31ZLZOjF89LHA/xeyPmSuf8yhPvrO
PHW1ZPHXj0icmHMB8bg+xUWK28Uu/6bbsEbBv++7TpmQl+FbPxrdofiBZGPj
uyzrxT4hh+frihslm+u7rWUIN+Z98rkHyyO3hTUh+SCLFcfK8DU1efTkKMRa
t8fiGcUmyfy9NyjWijn3sw7mZ5+9GfwmNJZkgjghuRWsrXnmX05Ab3xm+HbJ
oyjbuqzR50gWn/y84gDJ7GzyUh61KPdXeRmu9+CslvtLHO4TeV194h+7DeUh
yfZw1WlE+74rWWy/TiPWLP3SnC+y2kN/xq7nWuozWn+hUp8uf6otyFWcLfo1
I+vJGZZacX/uaKjvdI97cHFLfZ+rqW9ZS/VVuVfxbkO/eaY/6agV788thjrJ
43L1nR3eQt+HDPWxZlvdsvZotJ+hDeRbnuCoUwFxgI2Guq/yKPOJiH1fZVEf
Ntb6lrS/TcxzIbb0Ek/tC7BZdPMBazzXfXpXROr7WrH3kzD3+OSFmdgq2drF
VO+i/B6E6A/9hnZc5ljWnAh93yjutsgYyWzrGNoz3x/dUB+5tnV5xYwpX1Jc
I5lv4MW8THJreUbIl/1A5TeMow9o2vKCoxZHBfb9EcVbHLUvOETi2ME2ORus
t8u2EjngrPlt1oDMrdiRh5V+f5rh+j4HDcYE9BvtbP0POohvh/g0se1s1h2L
S3/mmXO1dZk3iO+enJcxSvR2pas94OMP4pn4UKD2Bezl+aen/jbjLXt7Tsr/
3G/oL/PnhlzrMyQ7d+B3+b8xLmE3f1yxIC9L509+3LH/Oxz7XLZtYzFd/Gxk
m1z5WZLNzfMM5RCrfX/pN325juVriv0uvLO8C18zlGdaA4foX2fbxuJMR+23
WpZb+HZ09xc/XHnO1I3t15auIT7yY0PbXMYGF//Y/Ja0L3CxkS+1LBNf+fOa
MtiTMq50LTEn3fNYjQ+eZ2jbpyzbNtqhv0tb1h5cbORTLcu831DGmsq1A4Zr
q/PqDMO1J1q2bbxlX6/sgPYFV1q2abxleQ8byqj64K4yXFvNzVwTQf9TLfvK
ve9EbtBSy/aAbezjQUMZiyvX6vIrGJPK8XDGLN1+OuaZKZZtu9Shv8ta1t7F
R/2yQ7mbDOUwh36mdO21mutOK10zylAmMXPWxOW1lImtDn2GM1vS3jVGs8Oh
7BsM5ZBrxVqyGMuqcanHZbg9i66mvELshq+KXS6dTz4xGk2PrL1PjNJF/xWG
cm7Kr+E+YFthYxU+IHwr2GC8l9hk2Ga6ODZjUX9e1iLLdl3moT9gq8Y6f4J1
ss8e9Fcc6phuKIf7XthK+BYGxe4coDL47SbmZeADrs4pdYyVsLg4Phvb9YcO
fEch/rcxlvVwRoApj6u8jsXHxvti80zguyMXaGTp98TVmnyxsDKg3wVod4in
9vhMHwms/yiH+kzxBnzJ1bUdPucL8t9tz68j94n54KeSvSsja+pZXlNWlY9J
vHwEfPi2z2EB6wdTHM+WOQ51mnw/0O/Yhzo+KMPXSXXgh3Jd8zRxp9jHHBgf
10aq9woHbYh7mfxcxBQPDtCeZ548SlOOLrHR2yJrX7Be7OKPMc4cKXjCUaOh
hvJ4J33PEWJdbvK5Mceb8idi0GQjN/XfB5d8ZOzlpnMx0Mg1nw3fqmlNTi7M
vS1rX6Czkdvau3uxo1ZN5zjBb8X+DBj2Lp2s+TfGIuYo1/hKKFUfNfGCtvIP
WQO6xDrgJxblMh/0i348Z38Sz1rdWpP3h5zHhzqsewFaFzY7cbLQM1macD2H
DX1+aVk2Objk4vI+sHZhrMHvPyjDxynsZvK6OKPimS7pXgbbDr8COdCbpd38
W3K5XfPAWQ/9xqOuP0i2fsOnxJpjUyJ6l8FHgk2zotRf9gQcK5ltzl6BWPtI
C5Y76g+smdtek3QC7GD2g7C3ZZLY2wL4H8hLID5IfnHI/iP8QRM87gHrNfZh
p7Y/RAca3S6ZrcEYH2KzVGFvGXvMmL+vlsy2dtl/hx/Mdz875/Hpctq6BX3H
R8O6Hvud5yvGXlgXiDmRa8CeTPy/Tbla+JN994nyu5mS7Tftht70jTnlG5Lt
uY2Rqxqbmy36cUlgHbyHvNv4Cjq5byfF/ddVbM8fYM9/jHg168r5+X1v2ocU
yq5w/oBLvICzL3z2xpkgv5/cBvz+rPV/If+fJ+dLymdPAs+za64qsdpxkeqv
wlzP2sn3rJ8qKZ+9Cgd59gt9yJmNtXefMYk8GV1OXQgpnj1cELpfjbPB8Bv4
7Ftn3cc6jDGtrbP3IMWztwumRuoj6zxy19gzSry3bp4mDkB8eyDXvK29ulWO
S0BnHabczBB4ntkfj68NG455sFvnruj27qZAG+dmp8ZQAjrriJGzkTopfnun
YHfwVTaR8ncmXc9z3BW5LwGddYTGDIjD8X639f0FxsfQM7yeTkDnOkLOXiXn
AX9B+fsjMfffV78/QnzySc+y8Pd12sdsg8/Zw2jMN3Dq7F7snFjf3zmypnzq
ZG+NT56f7jyibmKbK08eON96sskNjfE9B5szR/gW1hqx//7URIsyO03T2fP4
hsmXdYnHkRe9vaFcE+RIH+hQH+8wfqNnG8o9PgG9q+jyt8it4JyrulxkG0LO
YTvbs058GzNFH+9se4+vD0Ol9jHm4ne33eNmotvf35wsWWynHGdre5+dD4zV
+JH5Rmtsf/4xHvpPjtyGQyX7ti65ijZzSqehv/u3WP51Dtpf32I7iOlMSkDv
TkM+Z7HvzkSvfn+8E5xvoX/o+XF70MO6xHQu0xbx35+xBzumGfSflkD7eoG6
70zemkC7egVyfMox9p3ifq7nHsK4sKT/ii7U3+uwn2Nbjs8Z/3sI55ScbrfD
m/8Cm+a3ew==
                  "], {{0, 0}, {96, 100}}, {0, 255}, ColorFunction -> 
                  RGBColor], {
                 ImageSize -> {Automatic, 32}, 
                  ImagePadding -> {{5, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.25], PlotRange -> {{0, 96}, {0, 100}}, 
                  ImageSizeRaw -> {96., 100.}}], 
                StyleBox[
                 TagBox[
                  GridBox[{{
                    StyleBox[
                    "\"Demonstration Resource\"", FontFamily -> 
                    "Source Sans Pro", FontWeight -> "SemiBold", StripOnInput -> 
                    False], 
                    StyleBox[
                    "\"DEFINITION NOTEBOOK\"", FontFamily -> 
                    "Source Sans Pro", FontTracking -> "SemiCondensed", 
                    FontVariations -> {"CapsType" -> "AllSmallCaps"}, 
                    StripOnInput -> False]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "ColumnsIndexed" -> {2 -> GrayLevel[1]}, 
                    "Rows" -> {{None}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Grid"], FontSize -> 24, FontColor -> GrayLevel[1], 
                 StripOnInput -> False]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],
             "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
            "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
            TemplateBox[{
              StyleBox[
               
               TemplateBox[{
                "\"Demonstration Repository\"", "\" \[RightGuillemet]  \""}, 
                "RowDefault"], "Text", FontColor -> GrayLevel[1], 
               StripOnInput -> False], 
              "https://resources.wolframcloud.com/DemonstrationRepository"}, 
             "HyperlinkURL"]}, {
            TemplateBox[{
              
              TemplateBox[{
               "\"Open Sample\"", 
                "\"View a completed sample definition notebook\""}, 
               "PrettyTooltipTemplate"], Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 1953775238739395670; (
                DefinitionNotebookClient`$ClickedButton = "Open Sample"; 
                DefinitionNotebookClient`ViewExampleNotebook[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[1953775238739395670]]& , 
              "\"View a completed sample definition notebook\"", False}, 
             "OrangeButtonTemplate"], 
            TemplateBox[{
              
              TemplateBox[{
               "\"Style Guidelines\"", 
                "\"View general guidelines for authoring resources\""}, 
               "PrettyTooltipTemplate"], Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 6116318327813659236; (
                DefinitionNotebookClient`$ClickedButton = "Style Guidelines"; 
                SystemOpen[
                 "https://demonstrations.wolfram.com/guidelines.php"]), 
               DefinitionNotebookClient`ButtonCodeID[6116318327813659236]]& , 
              "\"View general guidelines for authoring resources\"", False}, 
             "OrangeButtonTemplate"], 
            TemplateBox[{
              TemplateBox[{
                TagBox[
                 GridBox[{{"\"Tools\"", 
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[1], 
                    AbsoluteThickness[1.], 
                    LineBox[{{0, 0}, {0, 10}, {10, 10}, {10, 0}, {0, 0}}], 
                    LineBox[{{5, 2.5}, {5, 7.5}}], 
                    LineBox[{{2.5, 5}, {7.5, 5}}]}, ImageSize -> 12, 
                    PlotRangePadding -> 1.5], True -> GraphicsBox[{
                    GrayLevel[1], 
                    AbsoluteThickness[1.], 
                    LineBox[{{0, 0}, {0, 10}, {10, 10}, {10, 0}, {0, 0}}], 
                    LineBox[{{2.5, 5}, {7.5, 5}}]}, ImageSize -> 12, 
                    PlotRangePadding -> 1.5]}, 
                    Dynamic[
                    CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]],
                     BaselinePosition -> Scaled[0.05]]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.35}}}], "Grid"], 
                "\"Toggle documentation toolbar\""}, "PrettyTooltipTemplate"],
               Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 1908941340027841465; (
                DefinitionNotebookClient`$ClickedButton = "Tools"; 
                DefinitionNotebookClient`ToggleToolbar[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[1908941340027841465]]& , 
              "\"Toggle documentation toolbar\"", False}, 
             "OrangeButtonTemplate"], 
            TagBox[
             
             GridBox[{{"\"\"", "\"\""}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxDividers -> {
               "ColumnsIndexed" -> {2 -> True}, "Rows" -> {{False}}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{2}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.5}}}, FrameStyle -> 
              RGBColor[0.57555, 0.57556, 0.57554]], "Grid"], 
            TemplateBox[{
              
              TemplateBox[{
               "\"Check\"", "\"Check notebook for potential errors\""}, 
               "PrettyTooltipTemplate"], Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 3941141659801008137; (
                DefinitionNotebookClient`$ClickedButton = "Check"; 
                DefinitionNotebookClient`CheckDefinitionNotebook[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[3941141659801008137]]& , 
              "\"Check notebook for potential errors\"", False}, 
             "OrangeButtonTemplate"], 
            ActionMenuBox[
             TemplateBox[{
               TemplateBox[{"\"Deploy\"", 
                 TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                "RowDefault"], Annotation[
               DefinitionNotebookClient`$ButtonCodeID = 6058522267645278627; 
                Null, 
                DefinitionNotebookClient`ButtonCodeID[6058522267645278627]]& ,
                "\"\"", True}, "OrangeButtonTemplate"], {
             "\"To my cloud account\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    8267267753343341396; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "DeployCustom"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "To my cloud account"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource["Demonstration", 
                    ButtonNotebook[], "CloudPrivate"], "ShowProgress" -> 
                    True]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    8267267753343341396]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"Publicly in the cloud\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1628664177886538591; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "DeployCustom"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Publicly in the cloud"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource["Demonstration", 
                    ButtonNotebook[], "CloudPublic"], "ShowProgress" -> 
                    True]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1628664177886538591]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]]}, Appearance -> None, Method -> "Queued"], 
            
            ItemBox[
             StyleBox[
              DynamicBox[
               ToBoxes[
                CurrentValue[
                 EvaluationNotebook[], {TaggingRules, "StatusMessage"}, ""], 
                StandardForm], Initialization :> (CurrentValue[
                  EvaluationNotebook[], {TaggingRules, "StatusMessage"}] = 
                "")], "Text", 
              GrayLevel[1], StripOnInput -> False], ItemSize -> Fit, 
             Alignment -> Right, StripOnInput -> False], 
            DynamicBox[
             ToBoxes[
              If[
               CurrentValue[
                EvaluationNotebook[], {
                TaggingRules, "SubmissionReviewData", "Review"}, False], 
               RawBoxes[
                TemplateBox[{
                  TemplateBox[{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.06349], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBWIWIGZigIEX9mCqQd8Bwv+Bnc/A54CiHs5HV6/ngJUP
p2HmwdTp4FCHTvOhqYfZrw2lhdDk0fno6tHcD1PPwOSAnY+uns8BAE8cGz4=

                    "]]}, {
                    FaceForm[
                    GrayLevel[1]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgB2IWIGZigAEJBwjNB6EblHHwX9ijqofxoeoYhKC0Bg4+
Hw4apk4Uap8aDr4QDhqqDu4uVRx8URw0TJ001D5lHHwJHDRUHYMclFbCwZfG
QUPVNSjgp+HmIWgAG/wcEg==
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10EEKgCAQhWGpFtEyEAYGggQj6RKeoSMErbuCR0/IWfTgCcPwy7fR9XrO
u3fOTXWGOp2zM+ZvH2170nv+e2sFH0ijt45/XxJp9NgRPHYAb63kHhu9tf2H
eU8aPfbS9kxawAvxnrSCx3c3XzbS6JX4RFrAS34B53ckaw==
                    "]]}, {
                    FaceForm[
                    GrayLevel[1]]}, StripOnInput -> False]}, ImageSize -> 15, 
                    PlotRange -> {{0., 15.75}, {0., 16.5}}, AspectRatio -> 
                    1.15], "\"Submit Update\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "ColumnsIndexed" -> {2 -> 0.5}, 
                    "Rows" -> {{0}}}], "Grid"], 
                    "\"Submit changes to update your demonstration submission\
\""}, "PrettyTooltipTemplate"], Annotation[
                  DefinitionNotebookClient`$ButtonCodeID = 
                    2169377100431483360; (
                    DefinitionNotebookClient`$ClickedButton = "SubmitUpdate"; 
                    With[{RSNB`nb = ButtonNotebook[]}, 
                    DefinitionNotebookClient`DisplayStripe[RSNB`nb, 
                    DefinitionNotebookClient`SubmitRepositoryUpdate[RSNB`nb], 
                    "ShowProgress" -> True]]), 
                   DefinitionNotebookClient`ButtonCodeID[
                   2169377100431483360]]& , 
                  "\"Submit changes to update your demonstration \
submission\"", True}, "OrangeButtonTemplate"]], 
               RawBoxes[
                TemplateBox[{
                  TemplateBox[{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.06349], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBWIWIGZigIEX9mCqQd8Bwv+Bnc/A54CiHs5HV6/ngJUP
p2HmwdTp4FCHTvOhqYfZrw2lhdDk0fno6tHcD1PPwOSAnY+uns8BAE8cGz4=

                    "]]}, {
                    FaceForm[
                    GrayLevel[1]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgB2IWIGZigAEJBwjNB6EblHHwX9ijqofxoeoYhKC0Bg4+
Hw4apk4Uap8aDr4QDhqqDu4uVRx8URw0TJ001D5lHHwJHDRUHYMclFbCwZfG
QUPVNSjgp+HmIWgAG/wcEg==
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10EEKgCAQhWGpFtEyEAYGggQj6RKeoSMErbuCR0/IWfTgCcPwy7fR9XrO
u3fOTXWGOp2zM+ZvH2170nv+e2sFH0ijt45/XxJp9NgRPHYAb63kHhu9tf2H
eU8aPfbS9kxawAvxnrSCx3c3XzbS6JX4RFrAS34B53ckaw==
                    "]]}, {
                    FaceForm[
                    GrayLevel[1]]}, StripOnInput -> False]}, ImageSize -> 15, 
                    PlotRange -> {{0., 15.75}, {0., 16.5}}, AspectRatio -> 
                    1.15], "\"Submit to Repository\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "ColumnsIndexed" -> {2 -> 0.5}, 
                    "Rows" -> {{0}}}], "Grid"], 
                    "\"Submit your demonstration to the Wolfram Demonstration \
Repository\""}, "PrettyTooltipTemplate"], Annotation[
                  DefinitionNotebookClient`$ButtonCodeID = 
                    850153740503147579; (
                    DefinitionNotebookClient`$ClickedButton = "Submit"; 
                    With[{RSNB`nb = ButtonNotebook[]}, 
                    DefinitionNotebookClient`DisplayStripe[RSNB`nb, 
                    DefinitionNotebookClient`SubmitRepository[RSNB`nb], 
                    "ShowProgress" -> True]]), 
                   DefinitionNotebookClient`ButtonCodeID[
                   850153740503147579]]& , 
                  "\"Submit your demonstration to the Wolfram Demonstration \
Repository\"", True}, "OrangeButtonTemplate"]]], StandardForm], Evaluator -> 
             "System", SingleEvaluation -> True]}}, 
          GridBoxAlignment -> {
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {-1 -> Right}, 
            "Rows" -> {{Center}}}, AutoDelete -> False, 
          GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
              RGBColor[0.1511, 0.15112, 0.15108], 
              RGBColor[0.7508, 0.17868, 0.085283]}}, 
          GridBoxFrame -> {
           "Columns" -> False, 
            "RowsIndexed" -> {
             1 -> RGBColor[0.1511, 0.15112, 0.15108], 2 -> 
              RGBColor[0.7508, 0.17868, 0.085283]}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {
           "Columns" -> {5, {0.9}, 5}, 
            "RowsIndexed" -> {1 -> 1.1, 2 -> 1.3, 3 -> 0.25}}, FrameStyle -> 
          RGBColor[0.1511, 0.15112, 0.15108]], "Grid"], 
        ButtonBoxOptions -> {Enabled -> Dynamic[
            Not[
             TrueQ[DefinitionNotebookClient`$ButtonsDisabled]], 
            TrackedSymbols :> {DefinitionNotebookClient`$ButtonsDisabled}]}, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["ReviewerCommentLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{#, 
           TemplateBox[{
             GraphicsBox[
              RasterBox[CompressedData["
1:eJztnXvQFlUdx0ktEbIsMsnKUWqaLkOYKWNNiHSbQUrtRdLUerm8L+AlbJBE
ur7gIFlmzeQ4iOIlanTGCyT4RzPZWDKKt1E0TSP6OcZomhI5mpFmnc/s7rTv
tufsue3zHHj44+Mg7HMu39095/wu5+xhs8/pm7vXiBEjzh2p/tM3a/GUhQtn
LZl+gPqfGQvOPWPegsGBqQsWDc4bXHj07L3VXw4oZir2Ucj7dmlOyel2O3qR
0YptOaMTaE+vsULxn5wLE2hPL/Fexc6S/jvzv+t2u3qFW0vaF2xIoF29wLQa
7QumJdC+3Zl9FVsM+m/Jr+l2O3dXlhi0Lzg/gXbujrxT8ZKF/i/l13a7vZ1m
kuKNLZZ/vYX2Bde12I79FZMT0LvKKsUOxQ8Vh0Yue7KD9gXHRG7DOMWPFC8o
Lk9A7yrLSn3/t+JmifOc7KPY7KH/5vy3ofVPUaxTvFYqeygBvavM1+jwgGKm
+K9LzvbQvuAszzpHKmYb7vu8BPSucnyDFs8qlirGOpR5oOJvAfpvV7zNob6D
FRco/tpQ7ucS0LvKREtN/qVYo/ioRZmrArQvsBmrafvP87bZlHlEAnpXeYeH
NhsVM6R+nD5Sho+5vrym0Ys6v6i406NMl3e4U+wt2bzro9GTivMUb83Lep3i
rgjaF9yVlzkirwMb7c+eZb2q2CsBvet4OlAnbKeVim9F1L6AMhmL/hFYzlMJ
6KzjvhZ0S417EtBZx4YE9GmbWxLQWcflCejTNisT0FnHUAL6tM13EtBZx9wu
acIak3nxMcWjir/I8PhkTAYS0FnHcR3S+znFz3Itxku9b4P15nsUp0tm7/09
Ut1TE9BZxxEtar4z1/yzktkarm0bpRhU/DGwHYcnoLOOsS3o/rxkfqO3R2oj
du85kvmRfdpzUAI668AufDWS7ujzbWkvpsPYdI9jm16R/9nRqfJUJP1/L1kc
63uKryg+rHh95La+QbIxzbZN2xLQt4m7I+lfx4uS5f4wfsSK8fI8f9+y/rsT
0LeJdS3qX4Y1568VJ4nffFzlEos61yWgb5U3KT6t+KZivcRb57nwJ8WXJcwv
yW9vaqiHvuFjwZfHOuzNHdaa52yCZPG31ZLZOjF89LHA/xeyPmSuf8yhPvrO
PHW1ZPHXj0icmHMB8bg+xUWK28Uu/6bbsEbBv++7TpmQl+FbPxrdofiBZGPj
uyzrxT4hh+frihslm+u7rWUIN+Z98rkHyyO3hTUh+SCLFcfK8DU1efTkKMRa
t8fiGcUmyfy9NyjWijn3sw7mZ5+9GfwmNJZkgjghuRWsrXnmX05Ab3xm+HbJ
oyjbuqzR50gWn/y84gDJ7GzyUh61KPdXeRmu9+CslvtLHO4TeV194h+7DeUh
yfZw1WlE+74rWWy/TiPWLP3SnC+y2kN/xq7nWuozWn+hUp8uf6otyFWcLfo1
I+vJGZZacX/uaKjvdI97cHFLfZ+rqW9ZS/VVuVfxbkO/eaY/6agV788thjrJ
43L1nR3eQt+HDPWxZlvdsvZotJ+hDeRbnuCoUwFxgI2Guq/yKPOJiH1fZVEf
Ntb6lrS/TcxzIbb0Ek/tC7BZdPMBazzXfXpXROr7WrH3kzD3+OSFmdgq2drF
VO+i/B6E6A/9hnZc5ljWnAh93yjutsgYyWzrGNoz3x/dUB+5tnV5xYwpX1Jc
I5lv4MW8THJreUbIl/1A5TeMow9o2vKCoxZHBfb9EcVbHLUvOETi2ME2ORus
t8u2EjngrPlt1oDMrdiRh5V+f5rh+j4HDcYE9BvtbP0POohvh/g0se1s1h2L
S3/mmXO1dZk3iO+enJcxSvR2pas94OMP4pn4UKD2Bezl+aen/jbjLXt7Tsr/
3G/oL/PnhlzrMyQ7d+B3+b8xLmE3f1yxIC9L509+3LH/Oxz7XLZtYzFd/Gxk
m1z5WZLNzfMM5RCrfX/pN325juVriv0uvLO8C18zlGdaA4foX2fbxuJMR+23
WpZb+HZ09xc/XHnO1I3t15auIT7yY0PbXMYGF//Y/Ja0L3CxkS+1LBNf+fOa
MtiTMq50LTEn3fNYjQ+eZ2jbpyzbNtqhv0tb1h5cbORTLcu831DGmsq1A4Zr
q/PqDMO1J1q2bbxlX6/sgPYFV1q2abxleQ8byqj64K4yXFvNzVwTQf9TLfvK
ve9EbtBSy/aAbezjQUMZiyvX6vIrGJPK8XDGLN1+OuaZKZZtu9Shv8ta1t7F
R/2yQ7mbDOUwh36mdO21mutOK10zylAmMXPWxOW1lImtDn2GM1vS3jVGs8Oh
7BsM5ZBrxVqyGMuqcanHZbg9i66mvELshq+KXS6dTz4xGk2PrL1PjNJF/xWG
cm7Kr+E+YFthYxU+IHwr2GC8l9hk2Ga6ODZjUX9e1iLLdl3moT9gq8Y6f4J1
ss8e9Fcc6phuKIf7XthK+BYGxe4coDL47SbmZeADrs4pdYyVsLg4Phvb9YcO
fEch/rcxlvVwRoApj6u8jsXHxvti80zguyMXaGTp98TVmnyxsDKg3wVod4in
9vhMHwms/yiH+kzxBnzJ1bUdPucL8t9tz68j94n54KeSvSsja+pZXlNWlY9J
vHwEfPi2z2EB6wdTHM+WOQ51mnw/0O/Yhzo+KMPXSXXgh3Jd8zRxp9jHHBgf
10aq9woHbYh7mfxcxBQPDtCeZ548SlOOLrHR2yJrX7Be7OKPMc4cKXjCUaOh
hvJ4J33PEWJdbvK5Mceb8idi0GQjN/XfB5d8ZOzlpnMx0Mg1nw3fqmlNTi7M
vS1rX6Czkdvau3uxo1ZN5zjBb8X+DBj2Lp2s+TfGIuYo1/hKKFUfNfGCtvIP
WQO6xDrgJxblMh/0i348Z38Sz1rdWpP3h5zHhzqsewFaFzY7cbLQM1macD2H
DX1+aVk2Objk4vI+sHZhrMHvPyjDxynsZvK6OKPimS7pXgbbDr8COdCbpd38
W3K5XfPAWQ/9xqOuP0i2fsOnxJpjUyJ6l8FHgk2zotRf9gQcK5ltzl6BWPtI
C5Y76g+smdtek3QC7GD2g7C3ZZLY2wL4H8hLID5IfnHI/iP8QRM87gHrNfZh
p7Y/RAca3S6ZrcEYH2KzVGFvGXvMmL+vlsy2dtl/hx/Mdz875/Hpctq6BX3H
R8O6Hvud5yvGXlgXiDmRa8CeTPy/Tbla+JN994nyu5mS7Tftht70jTnlG5Lt
uY2Rqxqbmy36cUlgHbyHvNv4Cjq5byfF/ddVbM8fYM9/jHg168r5+X1v2ocU
yq5w/oBLvICzL3z2xpkgv5/cBvz+rPV/If+fJ+dLymdPAs+za64qsdpxkeqv
wlzP2sn3rJ8qKZ+9Cgd59gt9yJmNtXefMYk8GV1OXQgpnj1cELpfjbPB8Bv4
7Ftn3cc6jDGtrbP3IMWztwumRuoj6zxy19gzSry3bp4mDkB8eyDXvK29ulWO
S0BnHabczBB4ntkfj68NG455sFvnruj27qZAG+dmp8ZQAjrriJGzkTopfnun
YHfwVTaR8ncmXc9z3BW5LwGddYTGDIjD8X639f0FxsfQM7yeTkDnOkLOXiXn
AX9B+fsjMfffV78/QnzySc+y8Pd12sdsg8/Zw2jMN3Dq7F7snFjf3zmypnzq
ZG+NT56f7jyibmKbK08eON96sskNjfE9B5szR/gW1hqx//7URIsyO03T2fP4
hsmXdYnHkRe9vaFcE+RIH+hQH+8wfqNnG8o9PgG9q+jyt8it4JyrulxkG0LO
YTvbs058GzNFH+9se4+vD0Ol9jHm4ne33eNmotvf35wsWWynHGdre5+dD4zV
+JH5Rmtsf/4xHvpPjtyGQyX7ti65ijZzSqehv/u3WP51Dtpf32I7iOlMSkDv
TkM+Z7HvzkSvfn+8E5xvoX/o+XF70MO6xHQu0xbx35+xBzumGfSflkD7eoG6
70zemkC7egVyfMox9p3ifq7nHsK4sKT/ii7U3+uwn2Nbjs8Z/3sI55ScbrfD
m/8Cm+a3ew==
               "], {{0, 0}, {96, 100}}, {0, 255}, ColorFunction -> 
               RGBColor], {
              ImageSize -> {Automatic, 12}, ImagePadding -> {{5, 0}, {0, 0}}, 
               BaselinePosition -> Scaled[0.25], 
               PlotRange -> {{0, 96}, {0, 100}}, 
               ImageSizeRaw -> {96., 100.}}], 
             "Wolfram Demonstration Repository Reviewer"}, 
            "PrettyTooltipTemplate"]}}, 
         GridBoxAlignment -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, AutoDelete -> 
         False, GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"]& )}], 
   Cell[
    StyleData["CommentReplyIcon"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.076923], 
         FaceForm[{#, 
           Opacity[1.]}], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{1.5, 7.5}, {6.5, 11.5}, {
          6.5, 3.5}}}], 
         FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJw9U2tIVEEUvq5iVkttZmdfuo/ZbQukJGKVqPBLUTGJ0h9hVLIJRYhUVJj2
AjGRWCKiF0llZWRCSEnZExEJ06CotaiQyH7EIrthT3u6NXPn3jswnDlzzzlz
vu8711u9vWJzsqIoSXwv5tuk6IsgrQvOnLf+1CRC5ZKbg3WJAIJV90rNJoJF
XOR6sebI6W3pyXq8DxccIoGwa+uxj/v/McxNbTxZOJ3w4Rkb+ZVgWGk2ZbcQ
Yfm0V+07Jhm6St7vzVhI2JfBT78ZCkI8cj2hqe/xxaIJJm0PoWEssCgtzvCc
lzlYYwXP5iUYHpXlHV4xasXLeh4wyKCWX2fDqcJwbfQ+w4F83vGQDT1fJ1/U
dzJ842bsih1XB3hiI0NzrPyOq9mBPb1tjpyNDBXci5U7MVQnLhji4nMsE+9W
c6ARL3i3XSWbXNiiLi8EzPxbbqydsaD73LgHJ2wp/OiFoKVJ8Ui+Chha6M3T
H8NZUMPm+XB9p8h0QtATjvtxqUh0SBgV76QHZN+lszReA5pNQ66o1+8HV6O3
rdWCBIcTuKHxHJ4NQdO1sx4Nxxy4VYBug2dVt4lMnB/vGCi7TSgWz/504Etk
VbXlNSGkCmWHqFYbJXziYXlT7VKXEdLq2DDMwyvvksTZZ5W4OgiCjmCVFTUP
dh+3HSKJ8y9hqUogIfqn83PkCUndQoTLQsZ2gpperL3fQJLXIMEn5F5GaD3D
l50g2O3OIkhiCUf7v8/fMJOMuRPTmT2FjLlU+0ghY471+dV93epzr/sPPaJz
u3Ev65sNX/8//gP5Ei2u
          "]]}, AspectRatio -> Automatic, ImageSize -> {13., 13.}, 
        PlotRange -> {{0., 13.}, {0., 13.}}]& )}], 
   Cell[
    StyleData["CommentCellLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            StyleBox[#, FontSize -> 11], "\[SpanFromLeft]"}, {
            StyleBox[
             DynamicBox[
              ToBoxes[
               DateString[
                TimeZoneConvert[
                 DateObject[#2, TimeZone -> 0]], {
                "Month", "/", "Day", "/", "Year", " ", "Hour24", ":", 
                 "Minute"}], StandardForm], SingleEvaluation -> True], 
             FontSize -> 9], 
            ItemBox[
             ButtonBox[
              TagBox[
               StyleBox[
                TemplateBox[{"\"Reply \[RightGuillemet]\"", 
                  StyleBox["\"Reply \[RightGuillemet]\"", "HyperlinkActive"], 
                  BaseStyle -> "Hyperlink"}, "MouseoverTemplate"], FontSize -> 
                9], 
               MouseAppearanceTag["LinkHand"]], BaseStyle -> "Hyperlink", 
              ButtonFunction :> (SelectionMove[
                 ParentCell[
                  EvaluationCell[]], After, Cell]; 
               DefinitionNotebookClient`CommentInsert[]), Evaluator -> 
              Automatic, Method -> "Queued"], Alignment -> Right]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Grid"], "CommentLabel", ShowStringCharacters -> False]& )}], 
   Cell[
    StyleData["OrangeButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
        ButtonBox[
         StyleBox[#, "Text", FontFamily -> "Source Sans Pro", FontWeight -> 
          "SemiBold", FontTracking -> "Condensed", FontSize -> 13, FontColor -> 
          Dynamic[
            FEPrivate`If[
             CurrentValue[Enabled], 
             GrayLevel[1], 
             RGBColor[0.88722, 0.77308, 0.76696]], Evaluator -> "System"], 
          StripOnInput -> False], ButtonFunction :> 
         With[{RSNB`nb$ = ButtonNotebook[]}, 
           If[#4, CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
             ProgressIndicator[Appearance -> "Necklace"]]; 
           With[{RSNB`$cp$ = $ContextPath}, 
             Quiet[
              
              Block[{$ContextPath = RSNB`$cp$, 
                ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                False, DefinitionNotebookClient`$ButtonCodeID = None}, 
               Internal`WithLocalSettings[
                DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                   ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                   "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                 Annotation[
                 DefinitionNotebookClient`$ButtonCodeID = 2045406886999866622; 
                  DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    #2[]]]], 
                  DefinitionNotebookClient`ButtonCodeID[2045406886999866622]],
                  DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
               Null]]]; 
           CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = ""; 
           Null], FrameMargins -> {{5, 5}, {0, 0}}, 
         Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYI9uuJUYJobchmTZGFisJTpAUhCMgGihBvyC5t0Tly
Qj0SgpgIKA6UJWjIdi3RSVJYtMMRUBaoBo8hu3VEJ0vjMwGCgGqAKnEZMl8B
uy8wEVAlVkOAjiTSBAiCewrZkKXKwiQZAlSPach0GWL9AkFA9RCNkCQNYU/A
GymYCKgebggQUG4IVVxC3TChSuxQJZ1QJcVSK+9QJRdTqzyhVslGKqKiIfgB
MfUOAGAkpIY=
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYI9uuJUYJobchOXaENOjyrtDkgCMgGihBvyB5dkXXa
3Mu12TARUBwoS9CQ3brCK7XZsZoAQUBZoBo8huzVFQW6HI8JEARUA1SJyxCg
xwmaAEFAlVgNATqSSBMgCO4pZEM26/CRZAhQPaYha7Q5STIEqB6iEZKkIWz8
kYI1muCGAAHlhlDFJdQNE6rEDlXSCVVSLLXyDlVyMbXKE2qVbKQiKhqCHxBT
7wAAuk3GZQ==
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYI9uuJUYJobcjZGK8nK+Z9uXsTgoBsoAjxhhx11H61
ZwtWjwPFgbIEDTnha/n96SOg4K8vn67O6tgRag5BQDZQBCgOlAWqwWPIYWuV
b4/ug2w8e3S9nexybTZkBBQBigNlgWqAKnEZ8mz9MiD3zaXTKw150UyAIKA4
UBaoBqgSqyEnfMz//fnz59fPTe7qWE2AIKAsUA1QJVA9piH3pnUB2XfWzMNj
AgQB1QBVAtVjGvLhwikQO82HoCFANUCVQPUQjZAkDWH/eP0SyMYMT0wEVANU
CVQPNwQIKDeEKi6hbphQJXaokk6okmKplXeokoupVZ5Qq2QjFVHREPyAmHoH
AG0Lmsg=
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True]}, Background -> 
         RGBColor[0.7508, 0.17868, 0.085283], Method -> "Queued", 
         ImageSize -> {All, 23}, Evaluator -> Automatic], FrameStyle -> 
        Directive[
          RGBColor[0.7508, 0.17868, 0.085283], 
          AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> False, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["SuggestionGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        FrameBox[
         AdjustmentBox[
          TagBox[
           GridBox[{{
              
              TemplateBox[{#2, #3, {16., 16.}, {{1., 17.}, {1., 17.}}}, 
               "SuggestionIconTemplate"], 
              
              PaneBox[#, ImageSizeAction -> "ShrinkToFit", BaselinePosition -> 
               Baseline, ImageSize -> Full], 
              RowBox[{
                AdjustmentBox[
                 TemplateBox[{
                   ActionMenuBox[
                    TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    EdgeForm[
                    Directive[
                    GrayLevel[1, 0], 
                    Thickness[0.025]]], 
                    FaceForm[#4], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], #5, 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0], True -> 
                    GraphicsBox[{
                    EdgeForm[
                    Directive[#5, 
                    Thickness[0.025]]], 
                    FaceForm[#2], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], 
                    GrayLevel[1], 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], #6, Appearance -> None, 
                    Method -> "Queued"], "\"View suggestions\""}, 
                  "PrettyTooltipTemplate"], BoxBaselineShift -> -0.5], 
                " "}]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
            False, GridBoxItemSize -> {
             "Columns" -> {Automatic, Automatic, Fit}, 
              "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
          BoxMargins -> {{0.25, -0.5}, {0.15, -0.15}}], 
         RoundingRadius -> {13, 75}, Background -> #4, FrameStyle -> None, 
         FrameMargins -> {{0, 8}, {0, 0}}, ImageMargins -> {{0, 0}, {5, 5}}, 
         StripOnInput -> False], "Text", FontColor -> #5, FontSize -> 14, 
        FontFamily -> "Source Sans Pro", FontWeight -> "SemiBold", 
        FontTracking -> "Plain", 
        PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
        LineBreakWithin -> False]& )}], 
   Cell[
    StyleData["SuggestionIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.055556], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO
m+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD
jI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh
MRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d
            "]]}, 
          FaceForm[#]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{8.1753, 7.4169}, {
             7.7969, 11.308}, {7.7969, 13.38}, {10.12, 13.38}, {10.12, 
             11.308}, {9.7415, 7.4169}, {8.1753, 7.4169}}, CompressedData["
1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA
qBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed
HTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2
qB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa
m8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5
N5G6
             "]}]}, 
          FaceForm[#2]]}, ImageSize -> #3, PlotRange -> #4, AspectRatio -> 
        Automatic, BaselinePosition -> Scaled[0.1]]& )}], 
   Cell[
    StyleData["FormEditValuesButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TemplateBox[{
         TagBox[
          PaneBox[
           PaneSelectorBox[{False -> GraphicsBox[{
                Thickness[0.066667], 
                FaceForm[{
                  GrayLevel[0.75], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
                   3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
                   3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
                   0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
                   3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
                   0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
                   3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, {{{7.5, 
                  5.6426}, {6.475, 5.6426}, {5.643, 6.4746}, {5.643, 
                  7.4996}, {5.643, 8.5256}, {6.475, 9.3576}, {7.5, 9.3576}, {
                  8.525, 9.3576}, {9.357, 8.5256}, {9.357, 7.4996}, {9.357, 
                  6.4746}, {8.525, 5.6426}, {7.5, 5.6426}}, {{7.5, 10.287}, {
                  5.962, 10.287}, {4.714, 9.0386}, {4.714, 7.4996}, {4.714, 
                  5.9616}, {5.962, 4.7136}, {7.5, 4.7136}, {9.038, 4.7136}, {
                  10.286, 5.9616}, {10.286, 7.4996}, {10.284, 9.0386}, {9.038,
                   10.285}, {7.5, 10.287}}, CompressedData["
1:eJxTTMoPSmViYGAwBGIQHdN/6KvGHQ2Hu1tbai4YCzn4mHc6JqSqOZhLHYhW
cBR2sNxyomxfvIrD+5OHndZm8jncPPc9+PFTFYfHx2fsnjaBxSENBNSUHRKN
Qg20VjI62JvG7fLsUXZYuveguFowk8PZMyCg6LCZp3BN9+1/9tb3/Xun5yk4
mDRsd2h6xO4AtO3pBSVpOB9sXpoEXH3jVOfunOcicPOMQWCzKNw+vySBCEsT
Ibh7gIYLNTsIw917Uen2z7osPrh/QN6N6WeB+9cFaPpvoDmH2paHn9ok6tAu
BvIhk4PAy+3rmYH2lu+bL6V/95/91523uv6mSjg8rBJZ5/6Q3cH4yEa9PGVp
OJ+Zs0s+GegvmHqlvtJC6bOKcPOmfGOLnwEMF5h9u9X5ubcCww3mHrC3n6nA
3QsLd5h/wOEOjBeYf2HxBgsP/bsqbI1TNR1g4QWMBR6mbE14eIKdpaIFD28P
kMPZNRxg8QHjw+ILph4WnyjmAd0Nsw+WHmDugbkb5l5YeoKJw9TB/AszBxYe
MHtg4WXIsUYmCugOWHjC3AkLbxgfFh8w9bD4gpkHi0+YfbD4Rk//AAQ8Rd0=

                  "], CompressedData["
1:eJxdVA1IU1EYHStG2VxrxByaa073dFtRkiYheW9/EmhkGaWW/WjaEs1ICxEJ
zX6sCCuzX7USSiLRKHEWESWSaVFWhpkWlaiZWk5Lnab19p7nCj0Yb/fx3e/n
nPMdj5jk9XFSiUSyg/853r/GGtO6ODO1z+yylme70ePLtrc3fDXSwkyu+qi3
Oztn8ceSJi1FvC72R9TyIB3Nyl9xMrHTTJcHfWsufaCjT+qvr6pcNI+evjbs
21HmQbfkVv/2aTVTF+tryadDevp2TYwy4r6ZDsm2XQx9p6fH1M0vh96aqER4
DDSpc/SW7axJvFdgoNNK50TtDDTRthtXanR7OSqXmo+pI40TdTlapT3SvS7N
hxb9LHkaYuVoe4O+xT7OiX3Gc9SzxX4w4Q9HjY6EFo7GC89knDJiScWzSo4G
Vw7wN3zEex2TdVD3vKNc4GRfIwcTHqbmmeiroXA+xIs+58ceGDPRsFMX9qiy
9eL3FjOtO/Doqmu5B8PlRwbx38rjpJh/t/Anj5twb+kEjt5m2v+GB+i9lrrw
sIS3GcU4ngecHVU1h91YvEHm+OfK8iWrsh/XX9ewetuFQdWsnxhhYBXrd/WX
9NlltUo2T4rlTG8GUbB5fQUC5AwPfpoFH72cGV4ingqG5/48zdSNCjnDW+h3
qpzxMZenq0orY3yJ+EkZn2L+cQLcC2p0d/ZZRglwrw0J4CVpJ9CL0K5/P4Ge
xPw2Ar0NO9LX9BDoUTz3EehVxGOQQM8OuTxMlTC944x9QDz2BfkqIn/f/3DC
ldXT5DdOtxRrWD9OFn1i2oia9et7yaTJ36Bm8+SGp3pd+DuLzWuLfREd8kzJ
8Hia5JdppQqG19ryc3E5sXKGZ2vwlLQZPC/A+7CzI0LB+EhffDto02YF4ysn
Npq/Imd8Lp3XeLnDXcb41o8N7v9cIGV6GOntfrzEc5xAL02q/mWv4kcJ9BT2
R5PSpBom0NvC0JtOwQYbgR5X7k7uO1LXQ6BXv+KKgOHqPgI9F201PlfWDhLo
3X5t173vKRK2DzhjXxCPfUI+7BvqYR/RD/YV/UJXmAe6w7zwA+ABvwBe8BPg
Cb8B3tgL8AG/Al/YK/AJvwPf8EPoAX4JvcBPoSf4LfQGH4Ae4dfQ6//+/w8B
rcVF
                  "]}]}, AspectRatio -> Automatic, ImageSize -> {15., 15.}, 
               PlotRange -> {{0., 15.}, {0., 15.}}], True -> GraphicsBox[{
                Thickness[0.066667], 
                FaceForm[{
                  GrayLevel[0.25], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
                   3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
                   3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
                   0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
                   3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
                   0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
                   3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, {{{7.5, 
                  5.6426}, {6.475, 5.6426}, {5.643, 6.4746}, {5.643, 
                  7.4996}, {5.643, 8.5256}, {6.475, 9.3576}, {7.5, 9.3576}, {
                  8.525, 9.3576}, {9.357, 8.5256}, {9.357, 7.4996}, {9.357, 
                  6.4746}, {8.525, 5.6426}, {7.5, 5.6426}}, {{7.5, 10.287}, {
                  5.962, 10.287}, {4.714, 9.0386}, {4.714, 7.4996}, {4.714, 
                  5.9616}, {5.962, 4.7136}, {7.5, 4.7136}, {9.038, 4.7136}, {
                  10.286, 5.9616}, {10.286, 7.4996}, {10.284, 9.0386}, {9.038,
                   10.285}, {7.5, 10.287}}, CompressedData["
1:eJxTTMoPSmViYGAwBGIQHdN/6KvGHQ2Hu1tbai4YCzn4mHc6JqSqOZhLHYhW
cBR2sNxyomxfvIrD+5OHndZm8jncPPc9+PFTFYfHx2fsnjaBxSENBNSUHRKN
Qg20VjI62JvG7fLsUXZYuveguFowk8PZMyCg6LCZp3BN9+1/9tb3/Xun5yk4
mDRsd2h6xO4AtO3pBSVpOB9sXpoEXH3jVOfunOcicPOMQWCzKNw+vySBCEsT
Ibh7gIYLNTsIw917Uen2z7osPrh/QN6N6WeB+9cFaPpvoDmH2paHn9ok6tAu
BvIhk4PAy+3rmYH2lu+bL6V/95/91523uv6mSjg8rBJZ5/6Q3cH4yEa9PGVp
OJ+Zs0s+GegvmHqlvtJC6bOKcPOmfGOLnwEMF5h9u9X5ubcCww3mHrC3n6nA
3QsLd5h/wOEOjBeYf2HxBgsP/bsqbI1TNR1g4QWMBR6mbE14eIKdpaIFD28P
kMPZNRxg8QHjw+ILph4WnyjmAd0Nsw+WHmDugbkb5l5YeoKJw9TB/AszBxYe
MHtg4WXIsUYmCugOWHjC3AkLbxgfFh8w9bD4gpkHi0+YfbD4Rk//AAQ8Rd0=

                  "], CompressedData["
1:eJxdVA1IU1EYHStG2VxrxByaa073dFtRkiYheW9/EmhkGaWW/WjaEs1ICxEJ
zX6sCCuzX7USSiLRKHEWESWSaVFWhpkWlaiZWk5Lnab19p7nCj0Yb/fx3e/n
nPMdj5jk9XFSiUSyg/853r/GGtO6ODO1z+yylme70ePLtrc3fDXSwkyu+qi3
Oztn8ceSJi1FvC72R9TyIB3Nyl9xMrHTTJcHfWsufaCjT+qvr6pcNI+evjbs
21HmQbfkVv/2aTVTF+tryadDevp2TYwy4r6ZDsm2XQx9p6fH1M0vh96aqER4
DDSpc/SW7axJvFdgoNNK50TtDDTRthtXanR7OSqXmo+pI40TdTlapT3SvS7N
hxb9LHkaYuVoe4O+xT7OiX3Gc9SzxX4w4Q9HjY6EFo7GC89knDJiScWzSo4G
Vw7wN3zEex2TdVD3vKNc4GRfIwcTHqbmmeiroXA+xIs+58ceGDPRsFMX9qiy
9eL3FjOtO/Doqmu5B8PlRwbx38rjpJh/t/Anj5twb+kEjt5m2v+GB+i9lrrw
sIS3GcU4ngecHVU1h91YvEHm+OfK8iWrsh/XX9ewetuFQdWsnxhhYBXrd/WX
9NlltUo2T4rlTG8GUbB5fQUC5AwPfpoFH72cGV4ingqG5/48zdSNCjnDW+h3
qpzxMZenq0orY3yJ+EkZn2L+cQLcC2p0d/ZZRglwrw0J4CVpJ9CL0K5/P4Ge
xPw2Ar0NO9LX9BDoUTz3EehVxGOQQM8OuTxMlTC944x9QDz2BfkqIn/f/3DC
ldXT5DdOtxRrWD9OFn1i2oia9et7yaTJ36Bm8+SGp3pd+DuLzWuLfREd8kzJ
8Hia5JdppQqG19ryc3E5sXKGZ2vwlLQZPC/A+7CzI0LB+EhffDto02YF4ysn
Npq/Imd8Lp3XeLnDXcb41o8N7v9cIGV6GOntfrzEc5xAL02q/mWv4kcJ9BT2
R5PSpBom0NvC0JtOwQYbgR5X7k7uO1LXQ6BXv+KKgOHqPgI9F201PlfWDhLo
3X5t173vKRK2DzhjXxCPfUI+7BvqYR/RD/YV/UJXmAe6w7zwA+ABvwBe8BPg
Cb8B3tgL8AG/Al/YK/AJvwPf8EPoAX4JvcBPoSf4LfQGH4Ae4dfQ6//+/w8B
rcVF
                  "]}]}, AspectRatio -> Automatic, ImageSize -> {15., 15.}, 
               PlotRange -> {{0., 15.}, {0., 15.}}]}, 
            Dynamic[
             CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
            0], ImageSize -> {Automatic, 15}, ImageSizeAction -> 
           "ResizeToFit"], 
          MouseAppearanceTag["LinkHand"]], "\"Edit values\""}, 
        "PrettyTooltipTemplate"]& )}], 
   Cell[
    StyleData["HintPodTitleBar"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.97], 
         FilledCurveBox[
          BezierCurve[{
            Offset[{0, -3}, {1, 1}], 
            Offset[{0, -1.3443}, {1, 1}], 
            Offset[{-1.3443, 0}, {1, 1}], 
            Offset[{-3, 0}, {1, 1}], 
            Offset[{-3, 0}, {1, 1}], 
            Offset[{3, 0}, {-1, 1}], 
            Offset[{3, 0}, {-1, 1}], 
            Offset[{1.3443, 0}, {-1, 1}], 
            Offset[{0, -1.3443}, {-1, 1}], 
            Offset[{0, -3}, {-1, 1}], 
            Offset[{0, -3}, {-1, 1}], {-1, -1}, {-1, -1}, {-1, -1}, {1, -1}, {
            1, -1}}]], 
         InsetBox[
          FormBox[
           StyleBox[
           "\"Notebook Analysis\"", FontColor -> GrayLevel[0.4], FontColor -> 
            GrayLevel[0.4], FontFamily -> "Source Sans Pro", FontWeight -> 
            Plain, FontSize -> 13, StripOnInput -> False], TraditionalForm], 
          Offset[{8, 0}, {-1, 0}], 
          NCache[
           ImageScaled[{0, 1/2}], 
           ImageScaled[{0, 0.5}]]], 
         TagBox[
          TagBox[
           TooltipBox[{
             GrayLevel[0.6], 
             DiskBox[
              Offset[{-13, -10}, {1, 1}], 
              Offset[6]], 
             GrayLevel[0.97], 
             AbsoluteThickness[1.5], 
             CapForm["Round"], 
             LineBox[{{
                Offset[{-15, -8}, {1, 1}], 
                Offset[{-11, -12}, {1, 1}]}, {
                Offset[{-15, -12}, {1, 1}], 
                Offset[{-11, -8}, {1, 1}]}}]}, 
            FrameBox[
             StyleBox[
             "\"Close analysis pod\"", "Text", FontColor -> 
              RGBColor[0.53725, 0.53725, 0.53725], FontSize -> 12, FontWeight -> 
              "Plain", FontTracking -> "Plain", StripOnInput -> False], 
             Background -> RGBColor[0.96078, 0.96078, 0.96078], FrameStyle -> 
             RGBColor[0.89804, 0.89804, 0.89804], FrameMargins -> 8, 
             StripOnInput -> False], TooltipDelay -> 0.1, 
            TooltipStyle -> {Background -> None, CellFrame -> 0}], 
           Annotation[#, "Close analysis pod", "Tooltip"]& ], 
          EventHandlerTag[{"MouseClicked" :> NotebookDelete[
              EvaluationCell[]], Method -> "Preemptive", PassEventsDown -> 
            Automatic, PassEventsUp -> True}]]}, AspectRatio -> Full, 
        ImageSize -> {Full, 20}, PlotRange -> {{-1, 1}, {-1, 1}}, 
        ImageMargins -> {{0, 0}, {0, 0}}, 
        ImagePadding -> {{0, 0}, {0, 0}}]& )}], 
   Cell[
    StyleData["HintPodDelimiterTop"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         AbsoluteThickness[1], 
         GrayLevel[0.85], 
         CapForm["Round"], 
         LineBox[{{-1, 0}, {1, 0}}]}, AspectRatio -> Full, 
        PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> {{0, 0}, {0, 0}}, 
        ImageSize -> {Full, 2}, BaselinePosition -> Scaled[0.1], 
        ImageMargins -> {{0, 0}, {4, 0}}]& )}], 
   Cell[
    StyleData["HintPodDelimiterBottom"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         AbsoluteThickness[1], 
         GrayLevel[0.85], 
         CapForm["Round"], 
         LineBox[{{-1, 0}, {1, 0}}]}, AspectRatio -> Full, 
        PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> {{0, 0}, {0, 0}}, 
        ImageSize -> {Full, 2}, BaselinePosition -> Scaled[0.1], 
        ImageMargins -> {{0, 0}, {0, 4}}]& )}], 
   Cell[
    StyleData["HintPodFooter"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.97], 
         FilledCurveBox[
          BezierCurve[{{-1, 1}, {-1, 1}, 
            Offset[{0, 3}, {-1, -1}], 
            Offset[{0, 3}, {-1, -1}], 
            Offset[{0, 1.3443}, {-1, -1}], 
            Offset[{1.3443, 0}, {-1, -1}], 
            Offset[{3, 0}, {-1, -1}], 
            Offset[{3, 0}, {-1, -1}], 
            Offset[{-3, 0}, {1, -1}], 
            Offset[{-3, 0}, {1, -1}], 
            Offset[{-1.3443, 0}, {1, -1}], 
            Offset[{0, 1.3443}, {1, -1}], 
            Offset[{0, 3}, {1, -1}], 
            Offset[{0, 3}, {1, -1}], {1, 1}, {1, 1}}]], 
         InsetBox[
          BoxData[
           FormBox[
            TemplateBox[{
              StyleBox[
               TemplateBox[{3}, "Spacer1"], FontColor -> GrayLevel[0.4], 
               FontFamily -> "Source Sans Pro", FontWeight -> Plain, FontSize -> 
               12, StripOnInput -> False], 
              
              StyleBox[#, FontColor -> GrayLevel[0.4], FontFamily -> 
               "Source Sans Pro", FontWeight -> Plain, FontSize -> 12, 
               StripOnInput -> False], 
              StyleBox[
               TemplateBox[{5}, "Spacer1"], FontColor -> GrayLevel[0.4], 
               FontFamily -> "Source Sans Pro", FontWeight -> Plain, FontSize -> 
               12, StripOnInput -> False]}, "RowDefault"], TraditionalForm]], 
          
          Offset[{5, 2.5}, {-1, 0}], {-1, 0}]}, AspectRatio -> Full, 
        ImageSize -> {Full, 21}, PlotRange -> {{-1, 1}, {-1, 1}}, 
        ImageMargins -> {{0, 0}, {0, 3}}, 
        ImagePadding -> {{0, 0}, {0, 0}}]& )}], 
   Cell[
    StyleData["HintPodMenuItems"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (
       TemplateBox[{#, FrameMargins -> 3, Background -> GrayLevel[1], 
         RoundingRadius -> 0, FrameStyle -> Directive[
           AbsoluteThickness[1], 
           RGBColor[0.75686, 0.82745, 0.88235]], ImageMargins -> #2}, 
        "Highlighted"]& )}], 
   Cell[
    StyleData["HintPodActionMenuItem"], 
    TemplateBoxOptions -> {DisplayFunction -> (ButtonBox[
        TemplateBox[{
          TagBox[
           GridBox[{{#, 
              TemplateBox[{7}, "Spacer1"], #2}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], FrameStyle -> 
          None, RoundingRadius -> 0, FrameMargins -> {{5, 2}, {2, 2}}, 
          ImageSize -> Full, ImageMargins -> {{0, 0}, {0, 0}}, Background -> 
          Dynamic[
            If[
             CurrentValue["MouseOver"], 
             GrayLevel[0.96], 
             GrayLevel[1.]]]}, "Highlighted"], ButtonFunction :> 
        ReleaseHold[#3], 
        Appearance -> {
         "Default" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True]}, Method -> 
        "Queued", Evaluator -> Automatic]& )}], 
   Cell[
    StyleData["HintPodDisabledMenuItem"], 
    TemplateBoxOptions -> {DisplayFunction -> (ButtonBox[
        TemplateBox[{
          TagBox[
           GridBox[{{#, 
              TemplateBox[{7}, "Spacer1"], 
              StyleBox[#2, FontOpacity -> 0.4]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], FrameStyle -> 
          None, RoundingRadius -> 0, FrameMargins -> {{5, 2}, {2, 2}}, 
          ImageSize -> Full, ImageMargins -> {{0, 0}, {0, 0}}, Background -> 
          GrayLevel[1.]}, "Highlighted"], ButtonFunction :> Null, 
        Appearance -> {
         "Default" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True]}, Method -> 
        "Queued", Evaluator -> Automatic, Enabled -> False]& )}], 
   Cell[
    StyleData["HintPodActionLabel"], 
    TemplateBoxOptions -> {DisplayFunction -> (PaneBox[
        StyleBox[#, FontColor -> GrayLevel[0.2], FontFamily -> 
         "Source Sans Pro", FontWeight -> Plain, FontSize -> 13, LineIndent -> 
         0, StripOnInput -> False], FrameMargins -> 0, ImageMargins -> 0, 
        BaselinePosition -> Baseline, ImageSize -> Full]& )}], 
   Cell[
    StyleData["HintPodMenuDelimiter"], 
    TemplateBoxOptions -> {DisplayFunction -> (PaneBox[
        StyleBox[
         GraphicsBox[{
           CapForm["Round"], 
           GrayLevel[0.9], 
           AbsoluteThickness[1], 
           LineBox[{{-1, 0}, {1, 0}}]}, AspectRatio -> Full, 
          PlotRange -> {{-1, 1}, {-1, 1}}, ImageMargins -> {{0, 0}, {2, 2}}, 
          ImagePadding -> {{5, 5}, {0, 0}}, ImageSize -> {Full, 2}], 
         LineIndent -> 0, StripOnInput -> False], FrameMargins -> 0, 
        ImageMargins -> 0, BaselinePosition -> Baseline, ImageSize -> 
        Full]& )}], 
   Cell[
    StyleData["HintPodIconChevron"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.2], 
         AbsoluteThickness[1.8], 
         CapForm["Round"], 
         JoinForm["Miter"], 
         LineBox[{{-0.5, 1}, {0.5, 0}, {-0.5, -1}}]}, AspectRatio -> Full, 
        BaselinePosition -> Bottom, ImageMargins -> {{0, 4}, {0, 0}}, 
        ImageSize -> {5.6, 7.7}]& )}], 
   Cell[
    StyleData["HintPodIconPopOut"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
          0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIlIGYC4h1yra8Dd6g4rHN/WCWip+KwRiYqxXq+isNk
CZYwvlwEDROHqYPpKwUrUHFgAIEDKg5nzwDBG2VU/hlluPogMEMCzm9kOdpv
aC6OJi/mINR84NRCVwQfIq8M519wufHhi5Yymn4lNPOVHNLAQBHO/6YR03/o
K5eDB9Ab69wFHJoeHZ+xexqng8r0/xPqfvM5cG9dVnl8JacD0FO6m+byOPxL
/f4kUZHbQZr3ge4EBW6HD2IeAX9m8Dhkzyqfs2gxp8ONxmK3Kd/4HOYsUt75
p50Tbi6YesgF9b8ShJ+oCOfD3Anjw/zx9JP8pXx7hD9h4QfjqxtyAKNCBU0e
EY4wPqr5iHh4/nvlx0tnVRyYObvkk98pOwA9+X75MRUHWWD03udHxCssngGf
XO7X
          "]]}, AspectRatio -> Automatic, ImageSize -> {14., 14.}, 
        PlotRange -> {{0., 13.62}, {0., 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconWrench"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.4], 
         AbsoluteThickness[1], 
         Opacity[1.], 
         JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGYCYmWv6mZ9n3/2cmJZvp/5BBzci37yv9wu6/Au
ysnuhaQynG8at8uT55AGXJwBDHQdPl3yTRKIUIfzo1Ks7/vzajiosjVOdfbW
ccjaUzJZokUFrv8ySLmlqoPbts9/r1iowsVh6mD6zp4BAh4NnPbA3AHTr+ss
8/rRNoS7YXyYv2D+7H/ySf5SPrdD7D/nX29ff7H/6hXZZnGNGc6HqYPRMPED
b+bZ6FxBqAPpOprL7YAefgCtVISU
          "], CurveClosed -> {1}]}, AspectRatio -> Automatic, 
        BaselinePosition -> Scaled[0.2], ImagePadding -> 0.5, 
        ImageSize -> {16., 16.}, PlotRange -> {{0., 16.}, {0., 16.}}]& )}], 
   Cell[
    StyleData["HintPodIconInfo"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4,
            3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
           3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3,
            3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{6.81, 13.}, {
           3.3914, 13.}, {0.62, 10.229}, {0.62, 6.81}, {0.62, 3.3914}, {
           3.3914, 0.62}, {6.81, 0.62}, {10.229, 0.62}, {13., 3.3914}, {13., 
           6.81}, {13., 10.229}, {10.229, 13.}, {6.81, 13.}}, CompressedData["

1:eJxTTMoPSmViYGCQB2IQbct1fXGBrbRD6+vAHXKtvA7r3B9WiayTdoCI8zgc
/qoR039IHkoLOjCAgYKDB0iZu4CDPFijgsOsmSDAC1UnCzWPE0rLQMXZHV6x
mAia1Ug56E1Y8MMwjdXh685bXX9VJRx4Jq9sCvRkcTh7BgREHfoPgTSwOAQB
db8OFHYAO4eLFeo+IQcRMIMLzoe4h9dBW2LqFc4MYYd4zdMCx38JOviYdzom
pIo4PJgjuHSvo6jDkgKQz0QdCsEelHDQjAHZJAa1VxIqLwH3Jzofok8S4i9W
RQews67LQsJhnoKDMRjIQ9Q3wMJJwQFMJULDSRJmrhzUPKh6Blmof+QcwM6K
kXb4Bgq2rzJQcXFovMhA5UUdciqqluo0SztsKMqY+NZG2OHV1E08hTrSDquA
oTmXQdABPX4BaWq/EA==
           "], {{8.81, 9.79}, {8.8101, 9.5122}, {8.5878, 9.2854}, {8.31, 
           9.28}, {7.51, 9.28}, {7.2283, 9.28}, {7., 9.5083}, {7., 9.79}, {7.,
            10.62}, {7.0054, 10.898}, {7.2322, 11.12}, {7.51, 11.12}, {8.35, 
           11.12}, {8.6239, 11.115}, {8.8447, 10.894}, {8.85, 10.62}}}]}, 
        AspectRatio -> Automatic, ImagePadding -> 0.5, 
        ImageSize -> {14., 14.}, 
        PlotRange -> {{0., 13.62}, {0., 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconNone"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (
       GraphicsBox[{}, AspectRatio -> Automatic, ImageSize -> {16., 16.}, 
        PlotRange -> {{0., 16.}, {0., 16.}}, BaselinePosition -> Scaled[0.2], 
        ImagePadding -> 0.5]& )}], 
   Cell[
    StyleData["HintPodIconIgnoreAlways"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         EdgeForm[None], 
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJTIGYCYpF17g+rROQcbLmuLy6wlXaoBguoOvQf+qoR
w6/i8CZwh1zralWH4oyJb2vsVRx0N819v/yYqoO0/l0VtkYEv/U1UOFRBP/D
8mPe5pyqcP0z8oSaD3ipws2H0famcbs8fVQd2BqnOnevUXUAa+dWdUgSiLDc
ckLVwQPounXHVeB8kK1TmxH8gN7peULOKnD9EP+owM2H+QvmzyUFIBEeuHxC
mb+c2CtuuP75NjpXZj3jgpsP0s11nRPO5+feuqzyOAec73dxYsy/w+xw/WDr
uNjh5n9MPhPr7cEG93+V2Wq78Nus8PCB8WHhB+PDwhemHxb+MPNh8ZMGBhJw
f8Lkv2nEAJXwOGyu/rQh4DWrwwrTs9Z+F7kdvHiYtNunsTrYgrwpy+XQteHh
y6lGbA6HxNWCWRdzOJwKObhiyTk2B3fmCm4VDXaouRwOEaeMjmzUY4OHhybI
eA02eHgt/GH4bJ0qm4PT+bSrz4Hh+Z0tfobPVDZ4eIOVx7DD3QlzNwMYIPx1
smzffCl9FUg4u7M5hPEBU1S+isPs0Pmr195gdTAGgc0qUHewOswDJhfv7yoO
/g7CiYcvszoAU9vrQAtVh6V+QAFnNqg9iHj5dMk3SWAGIt78wBGJiFcYH+ZP
GB/mT5h+WLqBmQ/zJwC4F0s3
          "]]}, AspectRatio -> Automatic, ImageMargins -> {{0, 0}, {0, 2}}, 
        ImageSize -> {14., 14.}, 
        PlotRange -> {{-0.5, 13.62}, {-0.5, 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconIgnoreInCell"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         EdgeForm[None], 
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
           0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
            0}}}, {{{11.69, 13.37}, {7.57, 13.37}, {7.57, 12.37}, {7.76, 
           12.37}, {11.19, 8.93}, {11.19, 1.25}, {7.57, 1.25}, {7.57, 0.25}, {
           12.19, 0.25}, {12.19, 13.37}}, {{9.17, 12.37}, {11.17, 12.37}, {
           11.17, 10.37}}}], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIjIGYCYo+HVSLr3EUdbLmuLy6wlXZYUgBiyTlAxJUc
kt9FOdllyDuU6yrKf1mD4LM879F466sMV28MApuVHX7yv9y+3lkOQj9WdngU
Ib794gFZh/Dojfvf/FN22CHX+jrQAsHvf/JJ/tJ6GTgfbI+ODFz/2TMgIA03
vxroqodVQg5gSkQO6m4mVPubGR1E7I/d2fpE2cHy2tFckwYGB2n9uypsjCoO
YG89/GcP4wd5zm1QO/QHzr9wNeyN/u5f9jD9kHD4aQ8zX+z36XcnD3+3v8fE
2SXfrOygvqBzw8OX3+yDQAxHBB/srr9KcL7mW959BjuV4PrnCi7de7BcCW4+
LLwhND88PmDyEHcLOjg2PTo+Y/d3+/21shbpLYIOTglPLyjd/mZ//wH35JVM
CD4knATgfL0JC34YPuOH688Nq1237REf3HzNmP5DXzX4HLhVNOp6dv6yP3xZ
O1UyiRcePrlH/22q/sQDD79vGiANPA5yy1946NUzOOy61fU39TuPw5GNenmL
GxkdwPal8cLjB2Y+LP7SwEDCgQEMZODyf7+VPpgTKOOw9ldM7tE6XgfmCqCL
9sk43PfvnZ4nxAuJZ2NZB5j9UV933uraK+swf/XaG/HfeCDudZJzuA1yTgov
PH3CzBcAJg/mdHmHVElQyuSH851lXj8ykxKEq4eFNwCKHGBr
          "]]}, AspectRatio -> Automatic, ImageMargins -> {{0, 0}, {0, 2}}, 
        ImageSize -> {14., 14.}, 
        PlotRange -> {{-0.5, 13.62}, {-0.5, 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconIgnoreInNotebook"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJTIGYC4qAdcq2vAwUcbLmuLy6wFXdYUgBiSTp4PKwS
Weeu4GCgtVL4AouUw1zBpXsPlis4vDlgqexlLeWg+ZZ3n8FOBB+s/y+CH6S+
oHODoyJc/z0mzi75ZkW4+cYgsFnRoanYbco3N0kHEftjd7Y+UXRYeM3kvcVR
CYeQx0tnH2FQgroLwb9pWxmxYqs4nP9zQfrmV8bicP0g1VzXxeDmf9OI6T/0
lcsB6Bmgj6QcGMDggz1MvoTnRNz7f2/sf/K/3L7+saLDzmCriP/PX9iHR2/c
/+YfzL1P4Pz+Xoc96+IfwPkrVqZm1068AdcPtAxo4yW4+ccenln/jOGkPcz/
MjWJRqEGh+xh4QPjw8IPxoeFL0w/LPxh5sPiB0KzwuNPHhibO+Su2h8GKTvE
7aAYeYAl7+5Z+/rfVgXnOLgdPu6qO5h345j9voPiasGsXHA+JJw44Hy9CQt+
GD5jh+vPDatdt+0RG9x8TZByDTYH/uky5V7st+21JaZe4cxgdZgp5PnFqOuh
vQY/99ZlP1kcIO54CjWfxeFeX0HUh0Uv7bdEft15i4vVoa2/Q3Oiy1t77Xax
m+fKWeHxAzMfFn9pYCACj1+YfMeX29cbgfF/+LJ2qmQSKzx95B79t6n6Ews8
/cDsB3O5JB1Upv+fUPebxeHIRr28xQeB6e+Cy40PX1gdnjTPO7uKX8qh/8kn
+Uv57A4sYXy6m2KlHDjBCY3DwV9OLMvXGJjeda7MejaXC56eYeENAPSkchE=

          "]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
          0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
          3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJdIGYC4qAdcq2vL6o52HJdX1ywVwtC24rB+YdTViWE
XBKE86tF1rk/rOJxMAaBzxpwPkReDY2vCDVPCMpXhvPB+jerwfnPf6/8eOms
ukPDdoemR+wiUHkNuHtgfJh7YXy2xqnO3W/U0eQ14ObB+DD7YHzNmP5DXzWY
4PzY3KP/NlX/toeZBxYP/GIPsw/GBzuHSxrOX7TF/MchFSkH9g9iHgF/Ptmb
vrdwdTeSdNjZywYU+WQPcb8E1B+f7H8EP146m0XcYeE1E6DKT/Z9IGUXRB02
V3/aEJD92R5s7A4Rh1kzQeCr/YQFPwyfvRN2+Put9MEcwe/2894vP+ZtLuxw
3793ep7QT3uIOiEHkC651t/2YH8a80LtY3NA5TPB+RPrflsVnPtkL/8lJ6xW
T8jhTSDYo1DzxOB8BjBQh/O/aQADzlQTTV4bbh6MD7MPxoeFfwDI2czaDmfP
gAA0nCdqOTglPL2gdFvDweNhlci645oO8iAPzdOEmPNXw+EPMDp9k7Qc4nZ5
8jC9VncAG39KywE9/QIAH6UuJw==
          "]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{
          5.63, 11.05}, {5.63, 10.44}, {6.0569, 10.539}, {6.5048, 10.49}, {
          6.9, 10.3}, {9.53, 10.3}, {9.53, 11.05}}}], 
         FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{7.92, 3.73}, {
          8.0396, 3.4994}, {8.0784, 3.2353}, {8.03, 2.98}, {9.41, 2.98}, {
          9.41, 3.73}}}], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}}}, {{{6.73, 6.21}, {6.2, 5.82}, {6.67, 5.46}, {11.22, 5.46}, {
          11.22, 6.21}, {6.73, 6.21}}}], 
         FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{8., 8.7}, {
          8.0514, 8.4458}, {8.0162, 8.1818}, {7.9, 7.95}, {10.25, 7.95}, {
          10.25, 8.7}}}]}, AspectRatio -> Automatic, ImagePadding -> 0.75, 
        ImageSize -> {15., 15.}, 
        PlotRange -> {{0., 13.62}, {0., 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconHint"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         EdgeForm[None], 
         FaceForm[#], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4,
            3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
           3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
            3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
           3}, {1, 3, 3}}}, {{{9.015, 17.37}, {4.4559, 17.37}, {0.76, 
           13.645}, {0.76, 9.05}, {0.76, 4.455}, {4.4559, 0.73}, {9.015, 
           0.73}, {13.574, 0.73}, {17.27, 4.455}, {17.27, 9.05}, {17.27, 
           13.645}, {13.574, 17.37}, {9.015, 17.37}}, CompressedData["
1:eJxTTMoPSmViYGCQBGIQbcixRiYqRcVh3bak+pu23A5rf8XkHt2n7OC/fkpq
x2MOB8+5DWqHnik5nP8e/HjpbHYHj4dVIuvYlRyAiisjVrA78Bau6b6toegQ
ApQ9soDdQepAtIJjoILDJ8fzaVefczgs6Nzw8GWoPNx84yMb9fIeyzr831T9
acMFXod1N+LL/OVkHV5uX8/8/IyAw7Fck4btDrIOZQ/mCC7dK+TAXMGtomEn
6/DP+dfb1w0iDkIi9sfufJV1ePRy6iYeQzGHac7dOc+t5R3SwEDcwe7FzTW/
bBQc9kybwF+1TcLh7TwbnStSig7Hd+3oZSuQdDjab1iuy6jk0MIL8qGkg8f+
WlmL50oO9uHRG/fnSDr4fu4LLjmi7HDw1ELXbZslHGDhAzO//9BXjRh+VQeG
iXW/rQzEHKzv+/dOz1N1uFfY1fekSMRhzhGFDUUZqhB/LhaCmFOs6sC0h1VI
ZL+Ag8g6d2AIqjqYCJrZ7L3E64Ae/gDrrapT
           "], CompressedData["
1:eJxTTMoPSmViYGBQBGIQ/emSb5KAhJoDAwg0aDhYbjlRtu++isNudX7urWpK
DrX2pnG7Tqo4TFPsKy2sVnRQvv2zLqtGBULfUXAI6J2eJ8Ss4mDSsN2hKUnB
Ia0jOfZOmrKD/l0Vtsar8g5Gz9apPlms5GDgs4zLLVXeweLHoZRVDxQdnNdm
3ivskneQW/7CQ09e0aHEbco3tnh5h+jLex6LxCo4FErzPtC9IO+wVfT36Xed
8nDzH5tJHYheIOeQBxJ4pOCgu2nu++Vscg75Qs0HTjUqOjDkN7IcPS/rcObd
ycNOukoObqqlTLM4ZOD+O7JRL2/xQWkHHibtdrFITYeb8WX+ctOkHQ6eWui6
zVjLQfD4rh29bdIO/Ye+asTwazuAnJswRdohaIdc6+uL2g6qbI1TnbtlHGy5
ri8uqNVxEIgAhtg3WYj5B3QcgKEkzcsAdOfS2UcUDHQdEp5eULotqehw89z3
4Mepug63pGsSjUyVHMr3zZfSj9V1uKKdKvkoQtmhOGPi25p6XQeQ8p91KhB9
lroOIGH7UlWH+qw9JZNn6EDs54bGF4OOA9AVtlzhag6KG4oyJupqO4CCYaGr
mgM4XiO0HK5WvFQz9FBzuAzi7tR0cNv2+e8VCzUHJ5AF0poO6PEPAFdvzZk=

           "]}]}, AspectRatio -> Automatic, BaselinePosition -> Scaled[0.1], 
        ImagePadding -> 0.5, ImageSize -> {14., 14.778}, 
        PlotRange -> {{0.76, 17.27}, {0.73, 17.37}}]& )}], 
   Cell["Documentation", "Section"], 
   Cell["Usage", "Subsection"], 
   Cell[
    StyleData["UsageInputs", StyleDefinitions -> StyleData["Input"]], 
    CellMargins -> {{66, 10}, {0, 8}}, 
    StyleKeyMapping -> {"Tab" -> "UsageDescription"}, Evaluatable -> False, 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb$ = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb$, 
          Cell["", "UsageDescription"], All]; 
        SelectionMove[RSNB`nb$, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoStyles -> False, ShowCodeAssist -> False, 
    CodeAssistOptions -> {"DynamicHighlighting" -> False}, 
    LineSpacing -> {1, 3}, TabSpacings -> {2.5}, CounterIncrements -> "Text", 
    FontFamily -> "Source Sans Pro", FontSize -> 15, FontWeight -> "Plain"], 
   Cell[
    StyleData["UsageDescription", StyleDefinitions -> StyleData["Text"]], 
    CellMargins -> {{86, 10}, {7, 0}}, 
    StyleKeyMapping -> {"Backspace" -> "UsageInputs"}, CellGroupingRules -> 
    "OutputGrouping", 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb$ = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb$, 
          Cell[
           BoxData[""], "UsageInputs", FontFamily -> "Source Sans Pro"], All]; 
        SelectionMove[RSNB`nb$, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoSpellCheck -> False], 
   Cell["Details & Options", "Subsection"], 
   Cell[
    StyleData["Notes", StyleDefinitions -> StyleData["Item"]], CellDingbat -> 
    StyleBox["\[FilledVerySmallSquare]", FontColor -> GrayLevel[0.6]], 
    CellMargins -> {{66, 24}, {9, 7}}, ReturnCreatesNewCell -> False, 
    StyleKeyMapping -> {}, DefaultNewCellStyle -> "Notes", ShowAutoSpellCheck -> 
    False, GridBoxOptions -> {BaseStyle -> "TableNotes"}], 
   Cell[
    StyleData["TableNotes", StyleDefinitions -> StyleData["Notes"]], 
    CellDingbat -> None, CellFrameColor -> RGBColor[0.749, 0.694, 0.553], 
    StyleMenuListing -> None, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    GridBoxOptions -> {
     FrameStyle -> GrayLevel[0.906], 
      GridBoxAlignment -> {
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}}, 
      GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{True}}}, 
      GridDefaultElement -> Cell["\[Placeholder]", "TableText"]}], 
   Cell[
    StyleData["TableText"], DefaultInlineFormatType -> 
    "DefaultInputInlineFormatType", AutoQuoteCharacters -> {}, 
    PasteAutoQuoteCharacters -> {}, StyleMenuListing -> None], 
   Cell["Examples", "Subsection"], 
   Cell[
    StyleData["ExampleDelimiter"], Selectable -> False, ShowCellBracket -> 
    Automatic, CellMargins -> {{66, 14}, {5, 10}}, Evaluatable -> True, 
    CellGroupingRules -> {"SectionGrouping", 58}, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False, 
    CellLabelAutoDelete -> True, TabFilling -> 
    "\[LongDash]\[NegativeThickSpace]", TabSpacings -> {100}, 
    StyleMenuListing -> None, FontFamily -> "Verdana", FontWeight -> Bold, 
    FontSlant -> "Plain", FontColor -> GrayLevel[0.906]], 
   Cell[
    StyleData["ExampleText", StyleDefinitions -> StyleData["Text"]]], 
   Cell[
    StyleData["PageBreak", StyleDefinitions -> StyleData["ExampleDelimiter"]],
     Selectable -> False, CellFrame -> {{0, 0}, {1, 0}}, 
    CellMargins -> {{66, 14}, {15, -5}}, 
    CellElementSpacings -> {"CellMinHeight" -> 1}, Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), CellFrameColor -> 
    GrayLevel[
      Rational[77, 85]]], 
   Cell[
    StyleData["Subsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   
   Cell[
    StyleData["Subsubsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   
   Cell[
    StyleData["ExampleImage"], PageWidth :> 650, 
    CellMargins -> {{66, 66}, {16, 5}}, Evaluatable -> False, ShowCellLabel -> 
    False, MenuSortingValue -> 10000, 
    RasterBoxOptions -> {ImageEditMode -> False}], 
   Cell["Links", "Section"], 
   Cell[
    StyleData["Link"], FontFamily -> "Source Sans Pro", FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.855, 0.396, 0.145], 
       RGBColor[0.02, 0.286, 0.651]]]], 
   Cell[
    StyleData["StringTypeLink", StyleDefinitions -> StyleData["Link"]], 
    FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.969, 0.467, 0.], 
       GrayLevel[0.467]]]], 
   Cell[
    StyleData["CharactersRefLink"], ShowSpecialCharacters -> False], 
   Cell["Annotation", "Section"], 
   Cell[
    StyleData["Excluded"], 
    CellBracketOptions -> {
     "Color" -> RGBColor[0.9, 0.4, 0.4], "Thickness" -> 2}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Excluded"}, 
      "Message" -> {"Message", "MSG", "Excluded"}, 
      "Output" -> {"Output", "Excluded"}, "Print" -> {"Print", "Excluded"}, 
      "PrintTemporary" -> {"PrintTemporary", "Excluded"}}, CellFrameMargins -> 
    4, CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         TemplateBox[{
           StyleBox[
           "\"excluded\"", "ExcludedCellLabel", StripOnInput -> False], 
           "\"Excluded cells will not appear anywhere in the published \
resource except for the definition notebook\""}, "PrettyTooltipTemplate"]], 
        "ExcludedCellLabel"]}, {None, None}}, StyleMenuListing -> None, 
    Background -> RGBColor[1, 0.95, 0.95]], 
   Cell[
    StyleData["ExcludedCellLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontFamily -> "Source Sans Pro", FontSize -> 
    9, FontWeight -> Plain, FontSlant -> Italic, FontColor -> 
    RGBColor[0.9, 0.4, 0.4, 0.5], Background -> None], 
   Cell[
    StyleData["HiddenMaterial"], 
    CellBracketOptions -> {
     "Color" -> RGBColor[0.3, 0.7, 0.6], "Thickness" -> 2}, CellFrameMargins -> 
    4, CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         TemplateBox[{
           StyleBox[
           "\"hidden\"", "HiddenMaterialCellLabel", StripOnInput -> False], 
           "\"Hidden input cells will be closed on the published web page but \
will remain open in the downloadable example notebook\""}, 
          "PrettyTooltipTemplate"]], "HiddenMaterialCellLabel"]}, {
      None, None}}, StyleMenuListing -> None, Background -> 
    RGBColor[0.8, 1., 0.9]], 
   Cell[
    StyleData[
    "HiddenMaterialCellLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontFamily -> "Source Sans Pro", FontSize -> 
    9, FontWeight -> Plain, FontSlant -> Italic, FontColor -> 
    RGBColor[0.3, 0.7, 0.6, 0.5], Background -> None], 
   Cell[
    StyleData["Comment", StyleDefinitions -> StyleData["Text"]], 
    CellFrame -> {{3, 0}, {0, 0}}, CellMargins -> {{66, 0}, {1, 0}}, 
    CellElementSpacings -> {"ClosedCellHeight" -> 0}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Comment"}, 
      "Message" -> {"Message", "MSG", "Comment"}, 
      "Output" -> {"Output", "Comment"}, "Print" -> {"Print", "Comment"}, 
      "PrintTemporary" -> {"PrintTemporary", "Comment"}}, CellFrameColor -> 
    RGBColor[0.88072, 0.61104, 0.14205], 
    CellFrameLabelMargins -> {{0, 10}, {0, 0}}, FontColor -> GrayLevel[0.25], 
    Background -> RGBColor[0.982, 0.942, 0.871]], 
   Cell[
    StyleData["AuthorComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "AuthorComment"}, 
      "Message" -> {"Message", "MSG", "AuthorComment"}, 
      "Output" -> {"Output", "AuthorComment"}, 
      "Print" -> {"Print", "AuthorComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "AuthorComment"}}, 
    CellFrameColor -> RGBColor[0.36842, 0.50678, 0.7098], Background -> 
    RGBColor[0.905, 0.926, 0.956]], 
   Cell[
    StyleData["ReviewerComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "ReviewerComment"}, 
      "Message" -> {"Message", "MSG", "ReviewerComment"}, 
      "Output" -> {"Output", "ReviewerComment"}, 
      "Print" -> {"Print", "ReviewerComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "ReviewerComment"}}, 
    CellFrameColor -> RGBColor[0.56018, 0.69157, 0.19488], Background -> 
    RGBColor[0.934, 0.954, 0.879]], 
   Cell[
    StyleData["CommentLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontSlant -> "Italic", 
    PrivateFontOptions -> {"OperatorSubstitution" -> False}, FontColor -> 
    GrayLevel[0.5]], 
   Cell["Special Input", "Section"], 
   Cell[
    StyleData["FormObjectCell"], CellMargins -> {{66, 66}, {16, 5}}], 
   Cell[
    StyleData["LocalFileInput", StyleDefinitions -> StyleData["Input"]], 
    CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         ButtonBox[
         "\"Choose\"", FrameMargins -> {{5, 5}, {0, 0}}, 
          BaseStyle -> {"Panel", FontSize -> 12}, Evaluator -> Automatic, 
          Method -> "Queued", ButtonFunction :> 
          With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
            Quiet[
             
             Block[{$ContextPath = RSNB`$cp$, 
               ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
               False, DefinitionNotebookClient`$ButtonCodeID = None}, 
              Internal`WithLocalSettings[
               DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                  ReleaseHold[
                   CurrentValue[
                   RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                  "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                Annotation[
                DefinitionNotebookClient`$ButtonCodeID = 8263526385974082686; 
                 DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                   ReleaseHold[DefinitionNotebookClient`$ButtonCode = HoldForm[
                    If[$VersionNumber >= 13., 
                    DefinitionNotebookClient`LocalFileInputDialog[
                    "Demonstration", 
                    ParentCell[
                    EvaluationCell[]], "Type" -> "FileOpen"], 
                    MessageDialog[
                    "This feature requires Wolfram Language version 13 or \
later."]]]]], 
                 DefinitionNotebookClient`ButtonCodeID[8263526385974082686]], 
                DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
              Null]]], Appearance :> 
          FEPrivate`FrontEndResource[
           "FEExpressions", "GrayButtonNinePatchAppearance"]]]]}, {
      None, None}}], 
   Cell[
    StyleData["LocalDirectoryInput", StyleDefinitions -> StyleData["Input"]], 
    CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         ButtonBox[
         "\"Choose\"", FrameMargins -> {{5, 5}, {0, 0}}, 
          BaseStyle -> {"Panel", FontSize -> 12}, Evaluator -> Automatic, 
          Method -> "Queued", ButtonFunction :> 
          With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
            Quiet[
             
             Block[{$ContextPath = RSNB`$cp$, 
               ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
               False, DefinitionNotebookClient`$ButtonCodeID = None}, 
              Internal`WithLocalSettings[
               DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                  ReleaseHold[
                   CurrentValue[
                   RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                  "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                Annotation[
                DefinitionNotebookClient`$ButtonCodeID = 5263076252613204070; 
                 DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                   ReleaseHold[DefinitionNotebookClient`$ButtonCode = HoldForm[
                    If[$VersionNumber >= 13., 
                    DefinitionNotebookClient`LocalFileInputDialog[
                    "Demonstration", 
                    ParentCell[
                    EvaluationCell[]], "Type" -> "Directory"], 
                    MessageDialog[
                    "This feature requires Wolfram Language version 13 or \
later."]]]]], 
                 DefinitionNotebookClient`ButtonCodeID[5263076252613204070]], 
                DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
              Null]]], Appearance :> 
          FEPrivate`FrontEndResource[
           "FEExpressions", "GrayButtonNinePatchAppearance"]]]]}, {
      None, None}}], 
   Cell["Misc", "Section"], 
   Cell[
    StyleData["Item"], DefaultNewCellStyle -> "Item"], 
   Cell[
    StyleData["RelatedSymbol", StyleDefinitions -> StyleData["Item"]], 
    DefaultNewCellStyle -> {"RelatedSymbol", FontFamily -> "Source Sans Pro"},
     DefaultFormatType -> DefaultInputFormatType, FormatType -> InputForm], 
   Cell[
    StyleData["ButtonText"], FontFamily -> "Sans Serif", FontSize -> 11, 
    FontWeight -> Bold, FontColor -> RGBColor[0.459, 0.459, 0.459]], 
   Cell[
    StyleData["InlineFormula"], 
    HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"}, 
    LanguageCategory -> "Formula", AutoSpacing -> True, ScriptLevel -> 1, 
    SingleLetterItalics -> False, SpanMaxSize -> 1, StyleMenuListing -> None, 
    FontFamily -> "Source Sans Pro", FontSize -> 1. Inherited, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    FractionBoxOptions -> {BaseStyle -> {SpanMaxSize -> Automatic}}, 
    GridBoxOptions -> {
     GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}}], 
   Cell[
    StyleData["DockedCell"], CellFrameColor -> GrayLevel[0.75], Background -> 
    GrayLevel[0.9]]}, Visible -> False, FrontEndVersion -> 
  "14.1 for Mac OS X x86 (64-bit) (June 13, 2024)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"a5d1a141-1061-4d06-82e4-cf3742c06610"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Name"->{
  Cell[580, 22, 477, 9, 70, "Title",ExpressionUUID->"995c4733-e412-4b21-989a-55649c965229",
   CellTags->{"Name", "Title"},
   CellID->20345292]},
 "Title"->{
  Cell[580, 22, 477, 9, 70, "Title",ExpressionUUID->"995c4733-e412-4b21-989a-55649c965229",
   CellTags->{"Name", "Title"},
   CellID->20345292]},
 "Caption"->{
  Cell[1082, 35, 1495, 33, 70, "Section",ExpressionUUID->"8b6acf92-4382-43ee-99f4-244f895c8d7c",
   CellTags->{"Caption", "CaptionCells", "TemplateCellGroup"},
   CellID->138150581]},
 "CaptionCells"->{
  Cell[1082, 35, 1495, 33, 70, "Section",ExpressionUUID->"8b6acf92-4382-43ee-99f4-244f895c8d7c",
   CellTags->{"Caption", "CaptionCells", "TemplateCellGroup"},
   CellID->138150581]},
 "TemplateCellGroup"->{
  Cell[1082, 35, 1495, 33, 70, "Section",ExpressionUUID->"8b6acf92-4382-43ee-99f4-244f895c8d7c",
   CellTags->{"Caption", "CaptionCells", "TemplateCellGroup"},
   CellID->138150581],
  Cell[7916, 174, 2246, 48, 70, "Section",ExpressionUUID->"2c92aa16-5ef4-4000-8e2f-66ab015b8611",
   CellTags->{"Initialization Code", "InitializationCode", "TemplateCellGroup"},
   CellID->447669593],
  Cell[10953, 245, 1944, 40, 70, "Section",ExpressionUUID->"c0ec5477-bc83-49be-aa1d-9f8cfdec5168",
   CellTags->{"Manipulate", "ManipulateGroup", "TemplateCellGroup"},
   CellID->791025314],
  Cell[24415, 565, 1302, 31, 70, "Section",ExpressionUUID->"28d25da0-61b1-4f4c-a0e3-5ad86af21678",
   CellTags->{"SnapshotGroup", "Snapshots", "TemplateCellGroup"},
   CellID->98938448],
  Cell[249612, 4307, 1221, 29, 70, "Subsection",ExpressionUUID->"ebd2873a-0db1-4593-a72b-104787fd259d",
   CellTags->{"AuthorNames", "Contributed By", "TemplateCellGroup"},
   CellID->255368948],
  Cell[250996, 4345, 2197, 46, 70, "Subsection",ExpressionUUID->"3b6cb1a5-3373-4390-acbe-b5e58b14d20f",
   CellTags->{"AuthorNotes", "DetailCells", "Details & Citations", "TemplateCellGroup"},
   CellID->441931514],
  Cell[253825, 4407, 2173, 45, 70, "Subsection",ExpressionUUID->"104ac704-e551-4a7c-a07c-1ba981002e23",
   CellTags->{"ReferenceCells", "References", "TemplateCellGroup"},
   CellID->592881655],
  Cell[256930, 4478, 1242, 30, 70, "Subsection",ExpressionUUID->"dd34accf-2e03-48cb-a622-4efbeda83270",
   CellTags->{"Submission Notes", "SubmissionNotes", "TemplateCellGroup"},
   CellID->797097429],
  Cell[258801, 4524, 1106, 27, 70, "Subsection",ExpressionUUID->"e09edf6f-dabd-41a9-a9ae-e7b3d4df9542",
   CellTags->{"Keywords", "TemplateCellGroup"},
   CellID->938146184],
  Cell[260310, 4568, 1128, 27, 70, "Subsection",ExpressionUUID->"c8f4c3cb-07f2-4f5e-87ff-358f077a4018",
   CellTags->{"Categories", "DemoCategories", "TemplateCellGroup"},
   CellID->845692503],
  Cell[447090, 8033, 1216, 30, 70, "Subsection",ExpressionUUID->"a2a5523e-bb7c-4a2b-b21e-afe62dfadd2b",
   CellTags->{"Related Demonstrations", "RelatedDemonstrations", "TemplateCellGroup"},
   CellID->1132753],
  Cell[448926, 8079, 1558, 37, 70, "Subsection",ExpressionUUID->"52e1a53a-9d47-45f1-a747-31a9fbf14684",
   CellTags->{"External Links", "ExternalLinks", "TemplateCellGroup"},
   CellID->843468725],
  Cell[451101, 8132, 1191, 29, 70, "Subsection",ExpressionUUID->"126d73cf-b570-4c7a-8a6b-f929d8bbe4d8",
   CellTags->{"Related Symbols", "RelatedSymbols", "TemplateCellGroup"},
   CellID->899564547],
  Cell[452927, 8177, 1070, 26, 70, "Subsection",ExpressionUUID->"ba3a9b99-9ae4-45bb-a55e-90b2fa7f0d3d",
   CellTags->{"Published Date", "PublishedDate", "TemplateCellGroup"},
   CellID->364555554],
  Cell[454157, 8212, 1073, 26, 70, "Subsection",ExpressionUUID->"1fa98527-ac1b-4eae-8ff4-ffddc0715a9a",
   CellTags->{"Compatibility", "TemplateCellGroup"},
   CellID->618273920]},
 "Initialization Code"->{
  Cell[7916, 174, 2246, 48, 70, "Section",ExpressionUUID->"2c92aa16-5ef4-4000-8e2f-66ab015b8611",
   CellTags->{"Initialization Code", "InitializationCode", "TemplateCellGroup"},
   CellID->447669593]},
 "InitializationCode"->{
  Cell[7916, 174, 2246, 48, 70, "Section",ExpressionUUID->"2c92aa16-5ef4-4000-8e2f-66ab015b8611",
   CellTags->{"Initialization Code", "InitializationCode", "TemplateCellGroup"},
   CellID->447669593]},
 "DefaultContent"->{
  Cell[10165, 224, 751, 16, 70, "CodeText",ExpressionUUID->"10e7c42c-f640-4e54-bce7-9137664b6044",
   CellTags->{"DefaultContent", "samplecell", "TabNext"},
   CellID->687519280],
  Cell[253196, 4393, 592, 9, 70, "Text",ExpressionUUID->"b44443b2-ac27-49b5-82c4-3bc1bf431af2",
   CellTags->{"DefaultContent", "TabNext"},
   CellID->111711384],
  Cell[258175, 4510, 589, 9, 70, "Text",ExpressionUUID->"e9ba1f57-4050-48b3-9613-0f23ca8abafd",
   CellTags->{"DefaultContent", "TabNext"},
   CellID->820829112],
  Cell[448309, 8065, 580, 9, 70, "Item",ExpressionUUID->"5f7fa02c-a02e-4477-8083-68d9c01cbef8",
   CellTags->{"DefaultContent", "TabNext"},
   CellID->180966586],
  Cell[450487, 8118, 577, 9, 70, "Item",ExpressionUUID->"321e9393-46d5-476c-9f58-5021ae3b983b",
   CellTags->{"DefaultContent", "TabNext"},
   CellID->159321921],
  Cell[452295, 8163, 595, 9, 70, "Item",ExpressionUUID->"4b86a41f-5350-43c2-bf30-9f130e38224c",
   CellTags->{"DefaultContent", "TabNext"},
   CellID->15904391]},
 "samplecell"->{
  Cell[10165, 224, 751, 16, 70, "CodeText",ExpressionUUID->"10e7c42c-f640-4e54-bce7-9137664b6044",
   CellTags->{"DefaultContent", "samplecell", "TabNext"},
   CellID->687519280]},
 "TabNext"->{
  Cell[10165, 224, 751, 16, 70, "CodeText",ExpressionUUID->"10e7c42c-f640-4e54-bce7-9137664b6044",
   CellTags->{"DefaultContent", "samplecell", "TabNext"},
   CellID->687519280],
  Cell[253196, 4393, 592, 9, 70, "Text",ExpressionUUID->"b44443b2-ac27-49b5-82c4-3bc1bf431af2",
   CellTags->{"DefaultContent", "TabNext"},
   CellID->111711384],
  Cell[258175, 4510, 589, 9, 70, "Text",ExpressionUUID->"e9ba1f57-4050-48b3-9613-0f23ca8abafd",
   CellTags->{"DefaultContent", "TabNext"},
   CellID->820829112],
  Cell[448309, 8065, 580, 9, 70, "Item",ExpressionUUID->"5f7fa02c-a02e-4477-8083-68d9c01cbef8",
   CellTags->{"DefaultContent", "TabNext"},
   CellID->180966586],
  Cell[450487, 8118, 577, 9, 70, "Item",ExpressionUUID->"321e9393-46d5-476c-9f58-5021ae3b983b",
   CellTags->{"DefaultContent", "TabNext"},
   CellID->159321921],
  Cell[452295, 8163, 595, 9, 70, "Item",ExpressionUUID->"4b86a41f-5350-43c2-bf30-9f130e38224c",
   CellTags->{"DefaultContent", "TabNext"},
   CellID->15904391]},
 "Manipulate"->{
  Cell[10953, 245, 1944, 40, 70, "Section",ExpressionUUID->"c0ec5477-bc83-49be-aa1d-9f8cfdec5168",
   CellTags->{"Manipulate", "ManipulateGroup", "TemplateCellGroup"},
   CellID->791025314]},
 "ManipulateGroup"->{
  Cell[10953, 245, 1944, 40, 70, "Section",ExpressionUUID->"c0ec5477-bc83-49be-aa1d-9f8cfdec5168",
   CellTags->{"Manipulate", "ManipulateGroup", "TemplateCellGroup"},
   CellID->791025314]},
 "SnapshotGroup"->{
  Cell[24415, 565, 1302, 31, 70, "Section",ExpressionUUID->"28d25da0-61b1-4f4c-a0e3-5ad86af21678",
   CellTags->{"SnapshotGroup", "Snapshots", "TemplateCellGroup"},
   CellID->98938448]},
 "Snapshots"->{
  Cell[24415, 565, 1302, 31, 70, "Section",ExpressionUUID->"28d25da0-61b1-4f4c-a0e3-5ad86af21678",
   CellTags->{"SnapshotGroup", "Snapshots", "TemplateCellGroup"},
   CellID->98938448]},
 "Snapshot"->{
  Cell[77613, 1456, 51454, 850, 70, "Output",ExpressionUUID->"8dbcc7e4-36e5-45fa-ae0f-243f0494b04a",
   CellTags->"Snapshot",
   CellID->203531714],
  Cell[129070, 2308, 64888, 1070, 70, "Output",ExpressionUUID->"9e2bbe85-b4fe-4a0a-9c03-9077b0b94224",
   CellTags->"Snapshot",
   CellID->1963551174],
  Cell[193961, 3380, 55316, 913, 70, "Output",ExpressionUUID->"6021e95c-1dde-468a-be39-b11856046114",
   CellTags->"Snapshot",
   CellID->1023377969]},
 "SourceInformationGroup"->{
  Cell[249314, 4298, 273, 5, 70, "Section",ExpressionUUID->"e949cd00-c867-43b2-843a-ecb3040c97df",
   CellTags->"SourceInformationGroup",
   CellID->62407265]},
 "AuthorNames"->{
  Cell[249612, 4307, 1221, 29, 70, "Subsection",ExpressionUUID->"ebd2873a-0db1-4593-a72b-104787fd259d",
   CellTags->{"AuthorNames", "Contributed By", "TemplateCellGroup"},
   CellID->255368948]},
 "Contributed By"->{
  Cell[249612, 4307, 1221, 29, 70, "Subsection",ExpressionUUID->"ebd2873a-0db1-4593-a72b-104787fd259d",
   CellTags->{"AuthorNames", "Contributed By", "TemplateCellGroup"},
   CellID->255368948]},
 "AuthorNotes"->{
  Cell[250996, 4345, 2197, 46, 70, "Subsection",ExpressionUUID->"3b6cb1a5-3373-4390-acbe-b5e58b14d20f",
   CellTags->{"AuthorNotes", "DetailCells", "Details & Citations", "TemplateCellGroup"},
   CellID->441931514]},
 "DetailCells"->{
  Cell[250996, 4345, 2197, 46, 70, "Subsection",ExpressionUUID->"3b6cb1a5-3373-4390-acbe-b5e58b14d20f",
   CellTags->{"AuthorNotes", "DetailCells", "Details & Citations", "TemplateCellGroup"},
   CellID->441931514]},
 "Details & Citations"->{
  Cell[250996, 4345, 2197, 46, 70, "Subsection",ExpressionUUID->"3b6cb1a5-3373-4390-acbe-b5e58b14d20f",
   CellTags->{"AuthorNotes", "DetailCells", "Details & Citations", "TemplateCellGroup"},
   CellID->441931514]},
 "ReferenceCells"->{
  Cell[253825, 4407, 2173, 45, 70, "Subsection",ExpressionUUID->"104ac704-e551-4a7c-a07c-1ba981002e23",
   CellTags->{"ReferenceCells", "References", "TemplateCellGroup"},
   CellID->592881655]},
 "References"->{
  Cell[253825, 4407, 2173, 45, 70, "Subsection",ExpressionUUID->"104ac704-e551-4a7c-a07c-1ba981002e23",
   CellTags->{"ReferenceCells", "References", "TemplateCellGroup"},
   CellID->592881655]},
 "Submission Notes"->{
  Cell[256930, 4478, 1242, 30, 70, "Subsection",ExpressionUUID->"dd34accf-2e03-48cb-a622-4efbeda83270",
   CellTags->{"Submission Notes", "SubmissionNotes", "TemplateCellGroup"},
   CellID->797097429]},
 "SubmissionNotes"->{
  Cell[256930, 4478, 1242, 30, 70, "Subsection",ExpressionUUID->"dd34accf-2e03-48cb-a622-4efbeda83270",
   CellTags->{"Submission Notes", "SubmissionNotes", "TemplateCellGroup"},
   CellID->797097429]},
 "Keywords"->{
  Cell[258801, 4524, 1106, 27, 70, "Subsection",ExpressionUUID->"e09edf6f-dabd-41a9-a9ae-e7b3d4df9542",
   CellTags->{"Keywords", "TemplateCellGroup"},
   CellID->938146184]},
 "Categories"->{
  Cell[260310, 4568, 1128, 27, 70, "Subsection",ExpressionUUID->"c8f4c3cb-07f2-4f5e-87ff-358f077a4018",
   CellTags->{"Categories", "DemoCategories", "TemplateCellGroup"},
   CellID->845692503]},
 "DemoCategories"->{
  Cell[260310, 4568, 1128, 27, 70, "Subsection",ExpressionUUID->"c8f4c3cb-07f2-4f5e-87ff-358f077a4018",
   CellTags->{"Categories", "DemoCategories", "TemplateCellGroup"},
   CellID->845692503]},
 "CheckboxCell"->{
  Cell[261441, 4597, 185612, 3431, 70, "Output",ExpressionUUID->"5004e665-2e8b-45e8-bce7-40d852ad9588",
   CellTags->{"CheckboxCell", "Topics", "Topics-Checkboxes"},
   CellID->904163252],
  Cell[456382, 8272, 1370, 35, 70, "Output",ExpressionUUID->"f0f57908-630c-4223-bf24-a3de2c755577",
   CellTags->{"CheckboxCell", "CompatibilityARSupport", "CompatibilityARSupport-Checkboxes"},
   CellID->966199964],
  Cell[460251, 8380, 1328, 34, 70, "Output",ExpressionUUID->"715ea688-197e-4bd1-b364-32f7a07fce3a",
   CellTags->{"CheckboxCell", "CompatibilityCloudSupport", "CompatibilityCloudSupport-Checkboxes"},
   CellID->855747700]},
 "Topics"->{
  Cell[261441, 4597, 185612, 3431, 70, "Output",ExpressionUUID->"5004e665-2e8b-45e8-bce7-40d852ad9588",
   CellTags->{"CheckboxCell", "Topics", "Topics-Checkboxes"},
   CellID->904163252]},
 "Topics-Checkboxes"->{
  Cell[261441, 4597, 185612, 3431, 70, "Output",ExpressionUUID->"5004e665-2e8b-45e8-bce7-40d852ad9588",
   CellTags->{"CheckboxCell", "Topics", "Topics-Checkboxes"},
   CellID->904163252]},
 "Related Demonstrations"->{
  Cell[447090, 8033, 1216, 30, 70, "Subsection",ExpressionUUID->"a2a5523e-bb7c-4a2b-b21e-afe62dfadd2b",
   CellTags->{"Related Demonstrations", "RelatedDemonstrations", "TemplateCellGroup"},
   CellID->1132753]},
 "RelatedDemonstrations"->{
  Cell[447090, 8033, 1216, 30, 70, "Subsection",ExpressionUUID->"a2a5523e-bb7c-4a2b-b21e-afe62dfadd2b",
   CellTags->{"Related Demonstrations", "RelatedDemonstrations", "TemplateCellGroup"},
   CellID->1132753]},
 "External Links"->{
  Cell[448926, 8079, 1558, 37, 70, "Subsection",ExpressionUUID->"52e1a53a-9d47-45f1-a747-31a9fbf14684",
   CellTags->{"External Links", "ExternalLinks", "TemplateCellGroup"},
   CellID->843468725]},
 "ExternalLinks"->{
  Cell[448926, 8079, 1558, 37, 70, "Subsection",ExpressionUUID->"52e1a53a-9d47-45f1-a747-31a9fbf14684",
   CellTags->{"External Links", "ExternalLinks", "TemplateCellGroup"},
   CellID->843468725]},
 "Related Symbols"->{
  Cell[451101, 8132, 1191, 29, 70, "Subsection",ExpressionUUID->"126d73cf-b570-4c7a-8a6b-f929d8bbe4d8",
   CellTags->{"Related Symbols", "RelatedSymbols", "TemplateCellGroup"},
   CellID->899564547]},
 "RelatedSymbols"->{
  Cell[451101, 8132, 1191, 29, 70, "Subsection",ExpressionUUID->"126d73cf-b570-4c7a-8a6b-f929d8bbe4d8",
   CellTags->{"Related Symbols", "RelatedSymbols", "TemplateCellGroup"},
   CellID->899564547]},
 "Published Date"->{
  Cell[452927, 8177, 1070, 26, 70, "Subsection",ExpressionUUID->"ba3a9b99-9ae4-45bb-a55e-90b2fa7f0d3d",
   CellTags->{"Published Date", "PublishedDate", "TemplateCellGroup"},
   CellID->364555554]},
 "PublishedDate"->{
  Cell[452927, 8177, 1070, 26, 70, "Subsection",ExpressionUUID->"ba3a9b99-9ae4-45bb-a55e-90b2fa7f0d3d",
   CellTags->{"Published Date", "PublishedDate", "TemplateCellGroup"},
   CellID->364555554]},
 "Compatibility"->{
  Cell[454157, 8212, 1073, 26, 70, "Subsection",ExpressionUUID->"1fa98527-ac1b-4eae-8ff4-ffddc0715a9a",
   CellTags->{"Compatibility", "TemplateCellGroup"},
   CellID->618273920]},
 "CompatibilityARSupport"->{
  Cell[456382, 8272, 1370, 35, 70, "Output",ExpressionUUID->"f0f57908-630c-4223-bf24-a3de2c755577",
   CellTags->{"CheckboxCell", "CompatibilityARSupport", "CompatibilityARSupport-Checkboxes"},
   CellID->966199964]},
 "CompatibilityARSupport-Checkboxes"->{
  Cell[456382, 8272, 1370, 35, 70, "Output",ExpressionUUID->"f0f57908-630c-4223-bf24-a3de2c755577",
   CellTags->{"CheckboxCell", "CompatibilityARSupport", "CompatibilityARSupport-Checkboxes"},
   CellID->966199964]},
 "ScrapeDefault"->{
  Cell[458963, 8343, 139, 3, 70, "Text",ExpressionUUID->"34f6fbb4-dbfc-45b5-83ac-af39a417128f",
   CellTags->"ScrapeDefault",
   CellID->291004391]},
 "CompatibilityCloudSupport"->{
  Cell[460251, 8380, 1328, 34, 70, "Output",ExpressionUUID->"715ea688-197e-4bd1-b364-32f7a07fce3a",
   CellTags->{"CheckboxCell", "CompatibilityCloudSupport", "CompatibilityCloudSupport-Checkboxes"},
   CellID->855747700]},
 "CompatibilityCloudSupport-Checkboxes"->{
  Cell[460251, 8380, 1328, 34, 70, "Output",ExpressionUUID->"715ea688-197e-4bd1-b364-32f7a07fce3a",
   CellTags->{"CheckboxCell", "CompatibilityCloudSupport", "CompatibilityCloudSupport-Checkboxes"},
   CellID->855747700]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Name", 602576, 11083},
 {"Title", 602735, 11087},
 {"Caption", 602896, 11091},
 {"CaptionCells", 603099, 11095},
 {"TemplateCellGroup", 603307, 11099},
 {"Initialization Code", 606264, 11145},
 {"InitializationCode", 606492, 11149},
 {"DefaultContent", 606716, 11153},
 {"samplecell", 607728, 11172},
 {"TabNext", 607923, 11176},
 {"Manipulate", 608935, 11195},
 {"ManipulateGroup", 609149, 11199},
 {"SnapshotGroup", 609361, 11203},
 {"Snapshots", 609565, 11207},
 {"Snapshot", 609768, 11211},
 {"SourceInformationGroup", 610250, 11221},
 {"AuthorNames", 610429, 11225},
 {"Contributed By", 610647, 11229},
 {"AuthorNotes", 610862, 11233},
 {"DetailCells", 611097, 11237},
 {"Details & Citations", 611340, 11241},
 {"ReferenceCells", 611578, 11245},
 {"References", 611791, 11249},
 {"Submission Notes", 612010, 11253},
 {"SubmissionNotes", 612235, 11257},
 {"Keywords", 612453, 11261},
 {"Categories", 612646, 11265},
 {"DemoCategories", 612863, 11269},
 {"CheckboxCell", 613078, 11273},
 {"Topics", 613721, 11283},
 {"Topics-Checkboxes", 613935, 11287},
 {"Related Demonstrations", 614154, 11291},
 {"RelatedDemonstrations", 614395, 11295},
 {"External Links", 614629, 11299},
 {"ExternalLinks", 614848, 11303},
 {"Related Symbols", 615069, 11307},
 {"RelatedSymbols", 615291, 11311},
 {"Published Date", 615513, 11315},
 {"PublishedDate", 615732, 11319},
 {"Compatibility", 615951, 11323},
 {"CompatibilityARSupport", 616161, 11327},
 {"CompatibilityARSupport-Checkboxes", 616419, 11331},
 {"ScrapeDefault", 616657, 11335},
 {"CompatibilityCloudSupport", 616839, 11339},
 {"CompatibilityCloudSupport-Checkboxes", 617106, 11343}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 477, 9, 70, "Title",ExpressionUUID->"995c4733-e412-4b21-989a-55649c965229",
 CellTags->{"Name", "Title"},
 CellID->20345292],
Cell[CellGroupData[{
Cell[1082, 35, 1495, 33, 70, "Section",ExpressionUUID->"8b6acf92-4382-43ee-99f4-244f895c8d7c",
 CellTags->{"Caption", "CaptionCells", "TemplateCellGroup"},
 CellID->138150581],
Cell[2580, 70, 2321, 38, 70, "Text",ExpressionUUID->"c87aeb91-6475-413d-881a-1b495ef3ce9a",
 CellID->1681142296],
Cell[4904, 110, 2975, 59, 70, "Text",ExpressionUUID->"3a01bb12-1059-4eb9-b58c-3725f2931a3c",
 CellID->873849716]
}, Closed]],
Cell[CellGroupData[{
Cell[7916, 174, 2246, 48, 70, "Section",ExpressionUUID->"2c92aa16-5ef4-4000-8e2f-66ab015b8611",
 CellTags->{"Initialization Code", "InitializationCode", "TemplateCellGroup"},
 CellID->447669593],
Cell[10165, 224, 751, 16, 70, "CodeText",ExpressionUUID->"10e7c42c-f640-4e54-bce7-9137664b6044",
 CellTags->{"DefaultContent", "samplecell", "TabNext"},
 CellID->687519280]
}, Closed]],
Cell[CellGroupData[{
Cell[10953, 245, 1944, 40, 70, "Section",ExpressionUUID->"c0ec5477-bc83-49be-aa1d-9f8cfdec5168",
 CellTags->{"Manipulate", "ManipulateGroup", "TemplateCellGroup"},
 CellID->791025314],
Cell[CellGroupData[{
Cell[12922, 289, 6922, 175, 70, "Input",ExpressionUUID->"7c58953f-62a7-43bd-8885-1b54cee47d26",
 CellID->1561965383],
Cell[19847, 466, 4519, 93, 70, "Output",ExpressionUUID->"a17c8fd3-d318-41eb-888b-8305b87e838e",
 CellID->457239182]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[24415, 565, 1302, 31, 70, "Section",ExpressionUUID->"28d25da0-61b1-4f4c-a0e3-5ad86af21678",
 CellTags->{"SnapshotGroup", "Snapshots", "TemplateCellGroup"},
 CellID->98938448],
Cell[25720, 598, 51890, 856, 70, "Output",ExpressionUUID->"26d41ef0-86f8-4af3-82e1-f3977c89b51a",
 CellID->435020502],
Cell[77613, 1456, 51454, 850, 70, "Output",ExpressionUUID->"8dbcc7e4-36e5-45fa-ae0f-243f0494b04a",
 CellTags->"Snapshot",
 CellID->203531714],
Cell[129070, 2308, 64888, 1070, 70, "Output",ExpressionUUID->"9e2bbe85-b4fe-4a0a-9c03-9077b0b94224",
 CellTags->"Snapshot",
 CellID->1963551174],
Cell[193961, 3380, 55316, 913, 70, "Output",ExpressionUUID->"6021e95c-1dde-468a-be39-b11856046114",
 CellTags->"Snapshot",
 CellID->1023377969]
}, Closed]],
Cell[CellGroupData[{
Cell[249314, 4298, 273, 5, 70, "Section",ExpressionUUID->"e949cd00-c867-43b2-843a-ecb3040c97df",
 CellTags->"SourceInformationGroup",
 CellID->62407265],
Cell[CellGroupData[{
Cell[249612, 4307, 1221, 29, 70, "Subsection",ExpressionUUID->"ebd2873a-0db1-4593-a72b-104787fd259d",
 CellTags->{"AuthorNames", "Contributed By", "TemplateCellGroup"},
 CellID->255368948],
Cell[250836, 4338, 123, 2, 70, "Text",ExpressionUUID->"b6afadcb-1eee-423c-b3ab-3a7591a0016a",
 CellID->622029586]
}, Open  ]],
Cell[CellGroupData[{
Cell[250996, 4345, 2197, 46, 70, "Subsection",ExpressionUUID->"3b6cb1a5-3373-4390-acbe-b5e58b14d20f",
 CellTags->{"AuthorNotes", "DetailCells", "Details & Citations", "TemplateCellGroup"},
 CellID->441931514],
Cell[253196, 4393, 592, 9, 70, "Text",ExpressionUUID->"b44443b2-ac27-49b5-82c4-3bc1bf431af2",
 CellTags->{"DefaultContent", "TabNext"},
 CellID->111711384]
}, Open  ]],
Cell[CellGroupData[{
Cell[253825, 4407, 2173, 45, 70, "Subsection",ExpressionUUID->"104ac704-e551-4a7c-a07c-1ba981002e23",
 CellTags->{"ReferenceCells", "References", "TemplateCellGroup"},
 CellID->592881655],
Cell[256001, 4454, 892, 19, 70, "Text",ExpressionUUID->"b8efa94d-fc10-4d95-9cec-bdac620c4d42",
 CellID->1705372193]
}, Open  ]],
Cell[CellGroupData[{
Cell[256930, 4478, 1242, 30, 70, "Subsection",ExpressionUUID->"dd34accf-2e03-48cb-a622-4efbeda83270",
 CellTags->{"Submission Notes", "SubmissionNotes", "TemplateCellGroup"},
 CellID->797097429],
Cell[258175, 4510, 589, 9, 70, "Text",ExpressionUUID->"e9ba1f57-4050-48b3-9613-0f23ca8abafd",
 CellTags->{"DefaultContent", "TabNext"},
 CellID->820829112]
}, Open  ]],
Cell[CellGroupData[{
Cell[258801, 4524, 1106, 27, 70, "Subsection",ExpressionUUID->"e09edf6f-dabd-41a9-a9ae-e7b3d4df9542",
 CellTags->{"Keywords", "TemplateCellGroup"},
 CellID->938146184],
Cell[259910, 4553, 119, 2, 70, "Item",ExpressionUUID->"7a0f8b29-5ae9-41eb-95ed-ebc3555b5884",
 CellID->639559915],
Cell[260032, 4557, 119, 2, 70, "Item",ExpressionUUID->"39aef799-7912-43a7-b25d-c9c63bb4cfd8",
 CellID->19443273],
Cell[260154, 4561, 119, 2, 70, "Item",ExpressionUUID->"2c971967-17ae-4aab-ab1c-02c404d8944a",
 CellID->375137771]
}, Open  ]],
Cell[CellGroupData[{
Cell[260310, 4568, 1128, 27, 70, "Subsection",ExpressionUUID->"c8f4c3cb-07f2-4f5e-87ff-358f077a4018",
 CellTags->{"Categories", "DemoCategories", "TemplateCellGroup"},
 CellID->845692503],
Cell[261441, 4597, 185612, 3431, 70, "Output",ExpressionUUID->"5004e665-2e8b-45e8-bce7-40d852ad9588",
 CellTags->{"CheckboxCell", "Topics", "Topics-Checkboxes"},
 CellID->904163252]
}, Open  ]],
Cell[CellGroupData[{
Cell[447090, 8033, 1216, 30, 70, "Subsection",ExpressionUUID->"a2a5523e-bb7c-4a2b-b21e-afe62dfadd2b",
 CellTags->{"Related Demonstrations", "RelatedDemonstrations", "TemplateCellGroup"},
 CellID->1132753],
Cell[448309, 8065, 580, 9, 70, "Item",ExpressionUUID->"5f7fa02c-a02e-4477-8083-68d9c01cbef8",
 CellTags->{"DefaultContent", "TabNext"},
 CellID->180966586]
}, Open  ]],
Cell[CellGroupData[{
Cell[448926, 8079, 1558, 37, 70, "Subsection",ExpressionUUID->"52e1a53a-9d47-45f1-a747-31a9fbf14684",
 CellTags->{"External Links", "ExternalLinks", "TemplateCellGroup"},
 CellID->843468725],
Cell[450487, 8118, 577, 9, 70, "Item",ExpressionUUID->"321e9393-46d5-476c-9f58-5021ae3b983b",
 CellTags->{"DefaultContent", "TabNext"},
 CellID->159321921]
}, Open  ]],
Cell[CellGroupData[{
Cell[451101, 8132, 1191, 29, 70, "Subsection",ExpressionUUID->"126d73cf-b570-4c7a-8a6b-f929d8bbe4d8",
 CellTags->{"Related Symbols", "RelatedSymbols", "TemplateCellGroup"},
 CellID->899564547],
Cell[452295, 8163, 595, 9, 70, "Item",ExpressionUUID->"4b86a41f-5350-43c2-bf30-9f130e38224c",
 CellTags->{"DefaultContent", "TabNext"},
 CellID->15904391]
}, Open  ]],
Cell[CellGroupData[{
Cell[452927, 8177, 1070, 26, 70, "Subsection",ExpressionUUID->"ba3a9b99-9ae4-45bb-a55e-90b2fa7f0d3d",
 CellTags->{"Published Date", "PublishedDate", "TemplateCellGroup"},
 CellID->364555554],
Cell[454000, 8205, 120, 2, 70, "Text",ExpressionUUID->"8b9e9961-7917-441d-bfae-13c1b0af77f3",
 CellID->678130364]
}, Open  ]],
Cell[CellGroupData[{
Cell[454157, 8212, 1073, 26, 70, "Subsection",ExpressionUUID->"1fa98527-ac1b-4eae-8ff4-ffddc0715a9a",
 CellTags->{"Compatibility", "TemplateCellGroup"},
 CellID->618273920],
Cell[CellGroupData[{
Cell[455255, 8242, 1124, 28, 70, "Subsubsection",ExpressionUUID->"ec0b06b8-4c43-423d-aa7a-07bcfc22c5ce",
 CellID->96439972],
Cell[456382, 8272, 1370, 35, 70, "Output",ExpressionUUID->"f0f57908-630c-4223-bf24-a3de2c755577",
 CellTags->{"CheckboxCell", "CompatibilityARSupport", "CompatibilityARSupport-Checkboxes"},
 CellID->966199964]
}, Closed]],
Cell[CellGroupData[{
Cell[457789, 8312, 1171, 29, 70, "Subsubsection",ExpressionUUID->"5c6d482b-e067-46ae-9fac-6fe055eb2b59",
 CellID->122353723],
Cell[458963, 8343, 139, 3, 70, "Text",ExpressionUUID->"34f6fbb4-dbfc-45b5-83ac-af39a417128f",
 CellTags->"ScrapeDefault",
 CellID->291004391]
}, Open  ]],
Cell[CellGroupData[{
Cell[459139, 8351, 1109, 27, 70, "Subsubsection",ExpressionUUID->"d3f816c2-491b-4df7-8b31-e29787224d95",
 CellID->221026220],
Cell[460251, 8380, 1328, 34, 70, "Output",ExpressionUUID->"715ea688-197e-4bd1-b364-32f7a07fce3a",
 CellTags->{"CheckboxCell", "CompatibilityCloudSupport", "CompatibilityCloudSupport-Checkboxes"},
 CellID->855747700]
}, Closed]]
}, Open  ]]
}, Closed]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
