(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 14.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    619470,      11581]
NotebookOptionsPosition[    454201,       8437]
NotebookOutlinePosition[    612249,      11428]
CellTagsIndexPosition[    610569,      11379]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Higgs Mass and Decay Width", "Title",
 TaggingRules->{},
 CellChangeTimes->{{3.625143022597662*^9, 3.625143048086687*^9}, 
   3.6279278994275513`*^9, {3.630156596540031*^9, 3.630156608854206*^9}, {
   3.630156683061561*^9, 3.6301566856833963`*^9}},
 CellTags->{"Name", "Title"},
 CellID->118417941,ExpressionUUID->"5b117da6-40c7-4534-b65c-13505717c553"],

Cell[CellGroupData[{

Cell[TextData[{
 "Caption",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CaptionCells", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "The caption provides all the information needed to understand the \
Demonstration. It should be between three and five sentences long, but \
clarity is more important than length. Include only text in this section \
\[LongDash] no code, graphics, etc. Do not change the cell style or copy \
cells from other sections. Do not copy text from books or the web. Write your \
ideas in your own words. If you want to refer to something on the web, link \
to it in the Details.", 
           StyleBox["\n", FontSize -> 4]}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCaptionCells"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "57cac672-45f5-4dad-86dc-355a182e973e"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "CaptionCells"},
 CellTags->{"Caption", "CaptionCells", "TemplateCellGroup"},
 CellID->138150581,ExpressionUUID->"e1358b63-00d2-43fc-96cd-4b61e4f4f797"],

Cell[TextData[{
 "This Demonstration describes the variation of the Higgs boson decay rate ",
 Cell[BoxData[
  FormBox["\[CapitalGamma]", TraditionalForm]], "InlineMath",ExpressionUUID->
  "af338976-0f0a-4829-b72a-44eb903416b6"],
 ", or Higgs width, as a function of the Higgs boson mass ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["m", "h"], TraditionalForm]], "InlineMath",ExpressionUUID->
  "2761653e-e316-443d-b5ee-05a723a40abf"],
 ". The results are obtained using first-order perturbation theory. In fact, \
this plot shows the probability densities of the total energies released in \
Higgs boson decay. In other words, it represents the possible measurements of \
the Higgs mass, and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["M", "H"], TraditionalForm]], "InlineMath",ExpressionUUID->
  "a4a129f8-1ed9-43d9-996b-74890998296d"],
 " is the most probable value; the different values obtained are consequences \
of the time-energy uncertainty principle. The mean lifetime is calculated as \
the inverse of the decay width ",
 Cell[BoxData[
  FormBox["\[CapitalGamma]", TraditionalForm]], "InlineMath",ExpressionUUID->
  "a0cbe78a-e83a-49bb-a286-b884312509a1"],
 ", defined as the width of the distribution at the middle of its height."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.625156902510168*^9, 3.625156903206305*^9}, {
   3.625157136552043*^9, 3.625157149001252*^9}, {3.6251571955163317`*^9, 
   3.625157223702231*^9}, {3.6251572634544163`*^9, 3.625157299418079*^9}, 
   3.625157441779181*^9, {3.625157507705645*^9, 3.625157514877393*^9}, {
   3.6251577838836403`*^9, 3.6251577846727*^9}, {3.625157846092401*^9, 
   3.625157884941822*^9}, {3.625157957085051*^9, 3.6251579644004717`*^9}, {
   3.6251580254577208`*^9, 3.625158062266721*^9}, {3.625158117815132*^9, 
   3.625158297717175*^9}, {3.625158328214024*^9, 3.625158446181121*^9}, {
   3.626358024883258*^9, 3.6263580282390413`*^9}, {3.6263583124675198`*^9, 
   3.626358344078919*^9}, {3.626358388935153*^9, 3.626358393093081*^9}, {
   3.6263586340595407`*^9, 3.62635863762882*^9}, {3.626358733990631*^9, 
   3.6263587439623623`*^9}, {3.626358855788496*^9, 3.626358952545364*^9}, {
   3.6263590503893538`*^9, 3.626359074554988*^9}, 3.6266717154810057`*^9, {
   3.62686613061318*^9, 3.6268661346343813`*^9}, {3.627047398222103*^9, 
   3.62704740578377*^9}, {3.6270479428160753`*^9, 3.627047949945197*^9}, {
   3.6270479812408133`*^9, 3.627047987868949*^9}, {3.627048027074595*^9, 
   3.6270480668056383`*^9}, {3.627048099323513*^9, 3.627048099466061*^9}, {
   3.6270481314617567`*^9, 3.627048143158558*^9}, {3.627048181910101*^9, 
   3.627048185052663*^9}, {3.627048217762195*^9, 3.627048243285194*^9}, {
   3.627048282344605*^9, 3.627048293405795*^9}, {3.6270483368028383`*^9, 
   3.6270483696242237`*^9}, {3.62704857425268*^9, 3.627048581135099*^9}, {
   3.627048637578883*^9, 3.627048691311739*^9}, {3.627048741933105*^9, 
   3.6270487454894333`*^9}, {3.6270703930525665`*^9, 
   3.6270703991837206`*^9}, {3.627083344018124*^9, 3.627083381452577*^9}, {
   3.6271334121291866`*^9, 3.6271334637672896`*^9}, {3.627133508916252*^9, 
   3.627133509384291*^9}, {3.6272293078890057`*^9, 3.627229391629981*^9}, {
   3.627927942375175*^9, 3.627927956371744*^9}, {3.6279284346178102`*^9, 
   3.627928505423018*^9}, {3.627928559087245*^9, 3.627928606041162*^9}, {
   3.627928699667371*^9, 3.627928751280345*^9}, {3.627928809346005*^9, 
   3.627928809575922*^9}, {3.627928872549021*^9, 3.627928873562368*^9}, {
   3.63015652470711*^9, 3.630156551074757*^9}, 3.6301604829670153`*^9},
 CellID->560350242,ExpressionUUID->"dc758a88-607c-4a76-93c4-1f653211d338"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Initialization Code",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"InitializationCode", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{"Provide any code that must be evaluated before the ", 
           StyleBox["Manipulate", "MRbig"], 
           ". This will automatically be built into the ", 
           StyleBox["Manipulate", "MRbig"], 
           " in the final notebook version. Never use a package that is not \
included in the default distribution of ", 
           StyleBox["Mathematica", FontSlant -> "Italic"], 
           ". To use a package, use the ", 
           StyleBox["Initialization", "MRbig"], " option (with ", 
           StyleBox["Get", "MRbig"], ", not ", 
           StyleBox["Needs", "MRbig"], ") in the ", 
           StyleBox["Manipulate", "MRbig"], 
           " itself, and use the full name of the function from the package. \
For example:\n", 
           StyleBox[
           "  Manipulate[\n  \[Ellipsis]\n  ComputationalGeometry`ConvexHull[\
\[Ellipsis]]\[Ellipsis]\n  \[Ellipsis]\n  Initialization :> \
Get[\"ComputationalGeometry`\"],\n  \[Ellipsis]\n  ]", "MR"], 
           "\nIf you provide initialization code, include a ", 
           StyleBox["SaveDefinitions->True", "MRbig"], " option in the ", 
           StyleBox["Manipulate", "MRbig"], ".", 
           StyleBox["\n", FontSize -> 4]}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoInitializationCode"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "7524b84e-7f28-45e2-b331-c0229581042a"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "InitializationCode"},
 DefaultNewCellStyle->"Input",
 CellTags->{"Initialization Code", "InitializationCode", "TemplateCellGroup"},
 
 CellID->447669593,ExpressionUUID->"a964dcce-d970-4eee-8637-eadd12c47b0b"],

Cell[TextData[{
 "If you provide initialization code, include a ",
 StyleBox["SaveDefinitions->True", "MRbig"],
 " option in the ",
 StyleBox["Manipulate", "MRbig"],
 "."
}], "CodeText",
 Editable->False,
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "samplecell", "TabNext"},
 CellID->687519280,ExpressionUUID->"cca18a78-0dfe-4937-8ec9-4b17dded0004"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Manipulate",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"ManipulateGroup", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{"This section contains the ", 
           StyleBox["Manipulate", "MRbig"], 
           " input cell and its evaluated output cell. Make all control \
labels or labels in the output as descriptive as possible, with only proper \
nouns and proper adjectives capitalized. More description of the controls can \
be provided in the Details section below, if necessary. If you change this ", 
           
           StyleBox["Manipulate", "MRbig"], 
           " after creating screenshots and/or thumbnails, use ", 
           StyleBox["Update Thumbnail & Snapshots", FontWeight -> "Bold"], 
           " in the toolbar to update any copies in later sections. You can \
control the Flash preview for the Demonstration with the ", 
           StyleBox["AutorunSequencing", "MRbig"], " option. Use ", 
           StyleBox["SaveDefinitions->True", "MRbig"], 
           " if you provided initialization code in the previous section."}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoManipulateGroup"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "69544e35-9a37-4a41-96c5-25c3a0792d88"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "ManipulateGroup"},
 DefaultNewCellStyle->"Input",
 CellTags->{"Manipulate", "ManipulateGroup", "TemplateCellGroup"},
 CellID->791025314,ExpressionUUID->"ea06d89a-ceac-4dbe-98ed-a1d0d79c1569"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\[CapitalGamma]h", ",", " ", "\[Gamma]", ",", " ", "a", ",", " ", 
       "h"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[CapitalGamma]h", "=", 
       RowBox[{"\[CapitalGamma]", "[", "Mh", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Gamma]", "=", 
       RowBox[{"Sqrt", "[", 
        RowBox[{
         RowBox[{"Mh", "^", "2"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Mh", "^", "2"}], "+", 
           RowBox[{"\[CapitalGamma]h", "^", "2"}]}], ")"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"a", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", " ", 
          RowBox[{"Sqrt", "[", "2", "]"}], " ", "Mh", " ", "\[CapitalGamma]h",
           " ", "\[Gamma]"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"\[Pi]", " ", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"Mh", "^", "2"}], "+", "\[Gamma]"}], "]"}]}], ")"}]}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"h", "=", 
       FractionBox["a", 
        RowBox[{"2", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Mh", "^", "2"}], " ", 
           RowBox[{"\[CapitalGamma]h", "^", "2"}]}], ")"}]}]]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Show", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"a", "/", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"M", "^", "2"}], "-", 
                RowBox[{"Mh", "^", "2"}]}], ")"}], "^", "2"}], "+", 
             RowBox[{
              RowBox[{"Mh", "^", "2"}], " ", 
              RowBox[{"\[CapitalGamma]h", "^", "2"}]}]}], ")"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"M", ",", 
            RowBox[{"Mh", "-", ".1"}], ",", 
            RowBox[{"Mh", "+", ".1"}]}], "}"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Mh", "-", ".01"}], ",", 
               RowBox[{"Mh", "+", ".01"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"1.3", " ", 
                RowBox[{"10", "^", "2"}]}]}], "}"}]}], "}"}]}], ",", 
          RowBox[{"AxesLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\!\(\*SubscriptBox[\(m\), \(h\)]\)[GeV]\>\"", ",", 
             "\"\<\!\(\*SubscriptBox[\(\[Sigma]\), \(t\)]\)\>\""}], "}"}]}]}],
          "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Plot", "[", 
         RowBox[{"h", ",", 
          RowBox[{"{", 
           RowBox[{"M", ",", 
            RowBox[{"(", 
             RowBox[{"Mh", "-", 
              RowBox[{"\[CapitalGamma]h", "/", "2"}]}], ")"}], ",", 
            RowBox[{"(", 
             RowBox[{"Mh", "+", 
              RowBox[{"\[CapitalGamma]h", "/", "2"}]}], ")"}]}], "}"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"{", "Red", "}"}]}], ",", 
          RowBox[{"PlotLegends", "\[Rule]", 
           RowBox[{"{", "\"\<\[CapitalGamma]\>\"", "}"}]}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Graphics", "[", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"\"\<\!\(\*SubscriptBox[\(M\), \(H\)]\) = \>\"", "<>", " ", 
            RowBox[{"ToString", "[", "Mh", "]"}], "<>", "\"\< GeV\>\""}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Mh", "+", "0.007"}], ",", "80"}], "}"}]}], "]"}], "]"}],
         ",", 
        RowBox[{"Graphics", "[", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"\"\<\[CapitalGamma] = \>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"NumberForm", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"10", "^", "3"}], "\[CapitalGamma]h"}], ",", "3"}], 
              "]"}], "]"}], "<>", "\"\< MeV\>\""}], ",", 
           RowBox[{"{", 
            RowBox[{"Mh", ",", 
             RowBox[{"h", "-", "10"}]}], "}"}]}], "]"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"ImageSize", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"500", ",", "300"}], "}"}]}]}], "\[IndentingNewLine]", 
       "]"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Mh", ",", "125", ",", 
       RowBox[{"Text", "@", 
        RowBox[{"Style", "[", 
         RowBox[{
         "\"\<\!\(\*SubscriptBox[\(m\), \(h\)]\)\>\"", ",", "Italic", ",", 
          "10"}], "]"}]}]}], "}"}], ",", "100", ",", "150", ",", "1", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Initialization", "\[RuleDelayed]", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Alpha]", "=", 
       RowBox[{"1", "/", "137"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"k", "=", "0.23"}], ";", "\[IndentingNewLine]", 
      RowBox[{"me", "=", 
       RowBox[{
        RowBox[{"m", "[", "1", "]"}], "=", 
        RowBox[{"5", "*", 
         RowBox[{"10", "^", 
          RowBox[{"-", "4"}]}]}]}]}], ";", "\n", 
      RowBox[{"Mu", "=", 
       RowBox[{
        RowBox[{"m", "[", "2", "]"}], "=", 
        RowBox[{"3", "*", 
         RowBox[{"10", "^", 
          RowBox[{"-", "3"}]}]}]}]}], ";", "\n", 
      RowBox[{"Md", "=", 
       RowBox[{
        RowBox[{"m", "[", "3", "]"}], "=", 
        RowBox[{"7", "*", 
         RowBox[{"10", "^", 
          RowBox[{"-", "3"}]}]}]}]}], ";", "\n", 
      RowBox[{"m\[Mu]", "=", 
       RowBox[{
        RowBox[{"m", "[", "4", "]"}], "=", "0.105"}]}], ";", "\n", 
      RowBox[{"Ms", "=", 
       RowBox[{
        RowBox[{"m", "[", "5", "]"}], "=", "0.12"}]}], ";", "\n", 
      RowBox[{"Mc", "=", 
       RowBox[{
        RowBox[{"m", "[", "6", "]"}], "=", "1.3"}]}], ";", "\n", 
      RowBox[{"m\[Tau]", "=", 
       RowBox[{
        RowBox[{"m", "[", "7", "]"}], "=", "1.777"}]}], ";", "\n", 
      RowBox[{"Mb", "=", 
       RowBox[{
        RowBox[{"m", "[", "8", "]"}], "=", "5"}]}], ";", "\n", 
      RowBox[{"mw", "=", 
       RowBox[{
        RowBox[{"m", "[", "9", "]"}], "=", "80"}]}], ";", "\n", 
      RowBox[{"mz", "=", 
       RowBox[{
        RowBox[{"m", "[", "10", "]"}], "=", "91"}]}], ";", "\n", 
      RowBox[{"Mt", "=", 
       RowBox[{
        RowBox[{"m", "[", "11", "]"}], "=", "175"}]}], ";", "\n", 
      RowBox[{"\[Alpha]s", "=", "0.12"}], ";", "\n", 
      RowBox[{
       RowBox[{"\[Eta]p", "[", "\[Lambda]_", "]"}], ":=", 
       RowBox[{
        FractionBox["1", "2"], "+", 
        SqrtBox[
         RowBox[{
          FractionBox["1", "4"], "-", "\[Lambda]"}]]}]}], ";", "\n", 
      RowBox[{
       RowBox[{"\[Eta]m", "[", "\[Lambda]_", "]"}], ":=", 
       RowBox[{
        FractionBox["1", "2"], "-", 
        SqrtBox[
         RowBox[{
          FractionBox["1", "4"], "-", "\[Lambda]"}]]}]}], ";", "\n", 
      RowBox[{
       RowBox[{"f", "[", "\[Lambda]_", "]"}], ":=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"\[Lambda]", "<", 
          FractionBox["1", "4"]}], ",", 
         RowBox[{
          RowBox[{
           FractionBox["1", "2"], 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"Log", "[", 
              FractionBox[
               RowBox[{"\[Eta]p", "[", "\[Lambda]", "]"}], 
               RowBox[{"\[Eta]m", "[", "\[Lambda]", "]"}]], "]"}], ")"}], "^",
             "2"}]}], "-", 
          FractionBox[
           RowBox[{"\[Pi]", "^", "2"}], "2"], "-", 
          RowBox[{"I", " ", "\[Pi]", " ", 
           RowBox[{"Log", "[", 
            FractionBox[
             RowBox[{"\[Eta]p", "[", "\[Lambda]", "]"}], 
             RowBox[{"\[Eta]m", "[", "\[Lambda]", "]"}]], "]"}]}]}], ",", 
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"ArcSin", "[", 
             FractionBox["1", 
              RowBox[{"2", 
               SqrtBox["\[Lambda]"]}]], "]"}], ")"}], "^", "2"}]}]}], "]"}]}],
       ";", "\n", 
      RowBox[{
       RowBox[{"Y", "[", "\[Lambda]_", "]"}], ":=", 
       RowBox[{"3", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", "\[Lambda]"}], "+", 
          RowBox[{"\[Lambda]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"4", "\[Lambda]"}], "-", "1"}], ")"}], 
           RowBox[{"f", "[", "\[Lambda]", "]"}]}]}], ")"}]}]}], ";", "\n", 
      RowBox[{
       RowBox[{"Q", "[", "n_", "]"}], ":=", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"n", "\[Equal]", "2"}], "||", 
          RowBox[{"n", "\[Equal]", "6"}], "||", 
          RowBox[{"n", "\[Equal]", "11"}]}], ",", 
         FractionBox["2", "3"], ",", 
         RowBox[{
          RowBox[{"n", "\[Equal]", "3"}], "||", 
          RowBox[{"n", "\[Equal]", "5"}], "||", 
          RowBox[{"n", "\[Equal]", "8"}]}], ",", 
         RowBox[{"-", 
          FractionBox["1", "3"]}], ",", 
         RowBox[{
          RowBox[{"n", "\[Equal]", "1"}], "||", 
          RowBox[{"n", "\[Equal]", "4"}], "||", 
          RowBox[{"n", "\[Equal]", " ", "7"}]}], ",", 
         RowBox[{"-", "1"}]}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"F", "[", "mf_", "]"}], ":=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"mf", "\[Equal]", "Mu"}], "||", 
          RowBox[{"mf", "\[Equal]", "Md"}], "||", 
          RowBox[{"mf", "\[Equal]", "Mc"}], "||", 
          RowBox[{"mf", "\[Equal]", "Ms"}], "||", 
          RowBox[{"mf", "\[Equal]", "Mb"}], "||", 
          RowBox[{"mf", "\[Equal]", "Mt"}]}], ",", "3", ",", "1"}], "]"}]}], 
      ";", "\n", 
      RowBox[{
       RowBox[{"\[CapitalGamma]1", "[", 
        RowBox[{"mh_", ",", "mf_"}], "]"}], ":=", 
       RowBox[{
        FractionBox[
         RowBox[{"\[Alpha]", " ", "mh"}], 
         RowBox[{"8", " ", "k"}]], " ", 
        FractionBox[
         RowBox[{"mf", "^", "2"}], 
         RowBox[{"mw", "^", "2"}]], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", " ", 
           FractionBox[
            RowBox[{"4", " ", 
             RowBox[{"mf", "^", "2"}]}], 
            RowBox[{"mh", "^", "2"}]]}], ")"}], 
         RowBox[{"3", "/", "2"}]], 
        RowBox[{"F", "[", "mf", "]"}]}]}], ";", "\n", 
      RowBox[{
       RowBox[{"\[CapitalGamma]2", "[", 
        RowBox[{"mh_", ",", "mb_"}], "]"}], ":=", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{"mb", "\[Equal]", "mw"}], ",", 
         RowBox[{
          FractionBox[
           RowBox[{"\[Alpha]", " ", 
            RowBox[{"mh", "^", "3"}]}], 
           RowBox[{"16", " ", 
            RowBox[{"mw", "^", "2"}], " ", "k"}]], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"12", " ", 
             FractionBox[
              RowBox[{"mw", "^", "4"}], 
              RowBox[{"mh", "^", "4"}]]}], "-", 
            RowBox[{"4", " ", 
             FractionBox[
              RowBox[{"mw", "^", "2"}], 
              RowBox[{"mh", "^", "2"}]]}]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"4", " ", 
              FractionBox[
               RowBox[{"mw", "^", "2"}], 
               RowBox[{"mh", "^", "2"}]]}]}], ")"}], 
           RowBox[{"1", "/", "2"}]]}], ",", 
         RowBox[{"mb", "\[Equal]", "mz"}], ",", 
         RowBox[{
          FractionBox[
           RowBox[{"\[Alpha]", " ", 
            RowBox[{"mh", "^", "3"}]}], 
           RowBox[{"32", " ", 
            RowBox[{"mw", "^", "2"}], " ", "k"}]], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"12", " ", 
             FractionBox[
              RowBox[{"mz", "^", "4"}], 
              RowBox[{"mh", "^", "4"}]]}], "-", 
            RowBox[{"4", " ", 
             FractionBox[
              RowBox[{"mz", "^", "2"}], 
              RowBox[{"mh", "^", "2"}]]}]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"4", " ", 
              FractionBox[
               RowBox[{"mz", "^", "2"}], 
               RowBox[{"mh", "^", "2"}]]}]}], ")"}], 
           RowBox[{"1", "/", "2"}]]}]}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"\[CapitalGamma]4", "[", "mh_", "]"}], ":=", 
       RowBox[{
        FractionBox[
         RowBox[{"\[Alpha]", " ", "mh"}], 
         RowBox[{"8", " ", "k"}]], " ", 
        FractionBox[
         RowBox[{"mh", "^", "2"}], 
         RowBox[{"mw", "^", "2"}]], 
        FractionBox[
         RowBox[{"\[Alpha]s", "^", "2"}], 
         RowBox[{"9", 
          RowBox[{"\[Pi]", "^", "2"}]}]], 
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{
            UnderoverscriptBox["\[Sum]", 
             RowBox[{"q", "=", "2"}], "3"], 
            RowBox[{"Y", "[", 
             FractionBox[
              RowBox[{
               RowBox[{"m", "[", "q", "]"}], "^", "2"}], 
              RowBox[{"mh", "^", "2"}]], "]"}]}], "+", 
           RowBox[{
            UnderoverscriptBox["\[Sum]", 
             RowBox[{"q", "=", "5"}], "6"], 
            RowBox[{"Y", "[", 
             FractionBox[
              RowBox[{
               RowBox[{"m", "[", "q", "]"}], "^", "2"}], 
              RowBox[{"mh", "^", "2"}]], "]"}]}], "+", " ", 
           RowBox[{"Y", "[", 
            FractionBox[
             RowBox[{
              RowBox[{"m", "[", "8", "]"}], "^", "2"}], 
             RowBox[{"mh", "^", "2"}]], "]"}], "+", 
           RowBox[{"Y", "[", 
            FractionBox[
             RowBox[{
              RowBox[{"m", "[", "11", "]"}], "^", "2"}], 
             RowBox[{"mh", "^", "2"}]], "]"}]}], "]"}], "2"]}]}], ";", "\n", 
      RowBox[{
       RowBox[{"\[CapitalGamma]5", "[", "mh_", "]"}], ":=", 
       RowBox[{
        FractionBox[
         RowBox[{"\[Alpha]", " ", "mh"}], 
         RowBox[{"8", " ", "k"}]], " ", 
        FractionBox[
         RowBox[{"mh", "^", "2"}], 
         RowBox[{"mw", "^", "2"}]], 
        FractionBox[
         RowBox[{"\[Alpha]", "^", "2"}], 
         RowBox[{"18", 
          RowBox[{"\[Pi]", "^", "2"}]}]], 
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{
            UnderoverscriptBox["\[Sum]", 
             RowBox[{"f", "=", "1"}], "8"], 
            RowBox[{
             RowBox[{
              RowBox[{"Q", "[", "f", "]"}], "^", "2"}], 
             RowBox[{"F", "[", 
              RowBox[{"m", "[", "f", "]"}], "]"}]}]}], "+", 
           RowBox[{
            RowBox[{
             RowBox[{"Q", "[", "11", "]"}], "^", "2"}], 
            RowBox[{"F", "[", 
             RowBox[{"m", "[", "11", "]"}], "]"}]}], "-", 
           FractionBox["21", "4"]}], "]"}], "2"]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[CapitalGamma]", "[", "mh_", "]"}], ":=", 
       "\[IndentingNewLine]", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"n", ",", "temp"}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"n", "=", "1"}], ";", "\[IndentingNewLine]", 
          RowBox[{"temp", "=", 
           RowBox[{
            RowBox[{"\[CapitalGamma]4", "[", "mh", "]"}], "+", 
            RowBox[{"\[CapitalGamma]5", "[", "mh", "]"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"While", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"mh", "\[GreaterEqual]", 
              RowBox[{"2", " ", 
               RowBox[{"m", "[", "n", "]"}]}]}], "&&", 
             RowBox[{"n", "\[LessEqual]", "8"}]}], ",", 
            RowBox[{
             RowBox[{"temp", "=", 
              RowBox[{"temp", "+", 
               RowBox[{"\[CapitalGamma]1", "[", 
                RowBox[{"mh", ",", 
                 RowBox[{"m", "[", "n", "]"}]}], "]"}]}]}], ";", 
             RowBox[{"n", "++"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"While", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"mh", "\[GreaterEqual]", 
              RowBox[{"2", " ", 
               RowBox[{"m", "[", "n", "]"}]}]}], "&&", " ", 
             RowBox[{"n", "\[LessEqual]", " ", "10"}]}], ",", 
            RowBox[{
             RowBox[{"temp", "=", 
              RowBox[{"temp", "+", 
               RowBox[{"\[CapitalGamma]2", "[", 
                RowBox[{"mh", ",", 
                 RowBox[{"m", "[", "n", "]"}]}], "]"}]}]}], ";", 
             RowBox[{"n", "++"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"mh", "\[GreaterEqual]", 
             RowBox[{"2", " ", 
              RowBox[{"m", "[", "n", "]"}]}]}], ",", 
            RowBox[{"temp", "=", 
             RowBox[{"temp", "+", 
              RowBox[{"\[CapitalGamma]1", "[", 
               RowBox[{"mh", ",", 
                RowBox[{"m", "[", "n", "]"}]}], "]"}]}]}]}], "]"}], ";", 
          "\[IndentingNewLine]", "temp"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[CapitalGamma]b", "[", "mh_", "]"}], ":=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"mh", "<", 
          RowBox[{"2", "Mb"}]}], ",", 
         RowBox[{"temp", "=", "0"}], ",", 
         RowBox[{"temp", "=", 
          FractionBox[
           RowBox[{"\[CapitalGamma]1", "[", 
            RowBox[{"mh", ",", "Mb"}], "]"}], 
           RowBox[{"\[CapitalGamma]", "[", "mh", "]"}]]}]}], "]"}]}], ";", 
      "\n", 
      RowBox[{
       RowBox[{"\[CapitalGamma]\[Tau]", "[", "mh_", "]"}], ":=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"mh", "<", 
          RowBox[{"2", "m\[Tau]"}]}], ",", "0", ",", 
         FractionBox[
          RowBox[{"\[CapitalGamma]1", "[", 
           RowBox[{"mh", ",", "m\[Tau]"}], "]"}], 
          RowBox[{"\[CapitalGamma]", "[", "mh", "]"}]]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[CapitalGamma]c", "[", "mh_", "]"}], ":=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"mh", "<", 
          RowBox[{"2", "Mc"}]}], ",", "0", ",", 
         FractionBox[
          RowBox[{"\[CapitalGamma]1", "[", 
           RowBox[{"mh", ",", "Mc"}], "]"}], 
          RowBox[{"\[CapitalGamma]", "[", "mh", "]"}]]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[CapitalGamma]g", "[", "mh_", "]"}], ":=", 
       FractionBox[
        RowBox[{"\[CapitalGamma]4", "[", "mh", "]"}], 
        RowBox[{"\[CapitalGamma]", "[", "mh", "]"}]]}], ";", "\n", 
      RowBox[{
       RowBox[{"\[CapitalGamma]\[Gamma]", "[", "mh_", "]"}], ":=", 
       FractionBox[
        RowBox[{"\[CapitalGamma]5", "[", "mh", "]"}], 
        RowBox[{"\[CapitalGamma]", "[", "mh", "]"}]]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[CapitalGamma]w", "[", "mh_", "]"}], ":=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"mh", "<", 
          RowBox[{"2", "mw"}]}], ",", "0", ",", 
         FractionBox[
          RowBox[{"\[CapitalGamma]2", "[", 
           RowBox[{"mh", ",", "mw"}], "]"}], 
          RowBox[{"\[CapitalGamma]", "[", "mh", "]"}]]}], "]"}]}], ";", "\n", 
      
      RowBox[{
       RowBox[{"\[CapitalGamma]z", "[", "mh_", "]"}], ":=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"mh", "<", 
          RowBox[{"2", "mz"}]}], ",", "0", ",", 
         FractionBox[
          RowBox[{"\[CapitalGamma]2", "[", 
           RowBox[{"mh", ",", "mz"}], "]"}], 
          RowBox[{"\[CapitalGamma]", "[", "mh", "]"}]]}], "]"}]}], ";", "\n", 
      
      RowBox[{
       RowBox[{"\[CapitalGamma]t", "[", "mh_", "]"}], ":=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"mh", "<", 
          RowBox[{"2", "Mt"}]}], ",", "0", ",", 
         FractionBox[
          RowBox[{"\[CapitalGamma]1", "[", 
           RowBox[{"mh", ",", "Mt"}], "]"}], 
          RowBox[{"\[CapitalGamma]", "[", "mh", "]"}]]}], "]"}]}]}], 
     ")"}]}]}], "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.625142187616374*^9, 3.625142240932836*^9}, {
   3.625142293985943*^9, 3.625142365361662*^9}, {3.6251424111968727`*^9, 
   3.625142426687969*^9}, {3.625142483307097*^9, 3.625142534087367*^9}, {
   3.625142593559484*^9, 3.625142617731702*^9}, {3.625142864755336*^9, 
   3.6251428915918093`*^9}, {3.625142940011402*^9, 3.625142943062598*^9}, 
   3.62514297885957*^9, {3.62515671856003*^9, 3.625156720392597*^9}, {
   3.625156776842692*^9, 3.6251567769749403`*^9}, {3.6251576751347923`*^9, 
   3.625157679728915*^9}, {3.62686501158357*^9, 3.626865013395444*^9}, {
   3.626865102697164*^9, 3.626865103920369*^9}, {3.6268653312661123`*^9, 
   3.6268653762456217`*^9}, {3.626865406264534*^9, 3.626865553499749*^9}, {
   3.626865592666933*^9, 3.6268656041878366`*^9}, {3.626865696608075*^9, 
   3.626865765780079*^9}, {3.626865876473011*^9, 3.626865894668042*^9}, {
   3.626865931672079*^9, 3.626865951991932*^9}, 3.626866378598041*^9, {
   3.627044785330031*^9, 3.6270447865226803`*^9}, {3.627044822193074*^9, 
   3.6270448296820097`*^9}, {3.627045036278442*^9, 3.627045147233061*^9}, {
   3.627045228980075*^9, 3.627045230660572*^9}, {3.6270453745732718`*^9, 
   3.627045380013069*^9}, {3.6270454244174557`*^9, 3.627045466052207*^9}, {
   3.627045498876672*^9, 3.627045574010352*^9}, {3.627045668965592*^9, 
   3.627045717939679*^9}, {3.627045761410359*^9, 3.6270457731796503`*^9}, {
   3.6270458320676823`*^9, 3.627045876552824*^9}, {3.627045908905322*^9, 
   3.627045944739781*^9}, {3.6270460222837276`*^9, 3.6270460724817467`*^9}, {
   3.627046117735631*^9, 3.627046146353302*^9}, {3.6270461876250057`*^9, 
   3.627046205010453*^9}, {3.627046466005333*^9, 3.6270464905005817`*^9}, {
   3.627046548342263*^9, 3.6270465706060658`*^9}, {3.627046632084453*^9, 
   3.627046697044629*^9}, {3.6270467408206*^9, 3.627046787961195*^9}, {
   3.627046918217773*^9, 3.627046921767436*^9}, {3.627047194364558*^9, 
   3.627047233768309*^9}, {3.6270496157452927`*^9, 3.627049628933333*^9}, {
   3.627049669158434*^9, 3.627049673496153*^9}, {3.627049710937395*^9, 
   3.627049726378542*^9}, 3.6270498158890676`*^9, {3.6270499146774807`*^9, 
   3.627049922814065*^9}, {3.6270499712289248`*^9, 3.62705000721931*^9}, {
   3.627050086258951*^9, 3.627050102204439*^9}, {3.627051060999359*^9, 
   3.627051061495192*^9}, {3.6270553703224897`*^9, 3.6270553846600657`*^9}, {
   3.6270554541140537`*^9, 3.627055474661461*^9}, {3.627055507101479*^9, 
   3.6270555343197193`*^9}, {3.627055569251498*^9, 3.6270555990180273`*^9}, {
   3.6270556334244223`*^9, 3.627055647846933*^9}, 3.627056045252261*^9, 
   3.627056106577734*^9, {3.62705614135802*^9, 3.627056141982214*^9}, {
   3.6270562863979187`*^9, 3.6270562957320213`*^9}, {3.6270567368691683`*^9, 
   3.627056768798519*^9}, {3.627056804173217*^9, 3.627056837056675*^9}, {
   3.6270569196918077`*^9, 3.627056927634095*^9}, {3.627057086403401*^9, 
   3.6270571275330257`*^9}, {3.6270571853222847`*^9, 3.627057211965663*^9}, {
   3.627057255248102*^9, 3.62705737619538*^9}, {3.627057425695364*^9, 
   3.627057442692904*^9}, {3.627057504101956*^9, 3.627057629916931*^9}, {
   3.627057739554599*^9, 3.627057749452477*^9}, {3.627057813178924*^9, 
   3.627057822375646*^9}, {3.627057873098394*^9, 3.6270578843905582`*^9}, {
   3.627058251791498*^9, 3.627058268020959*^9}, {3.6270584047066717`*^9, 
   3.627058437013708*^9}, {3.6270585557695627`*^9, 3.6270585682072763`*^9}, {
   3.627058639385522*^9, 3.627058705712154*^9}, {3.627058758027841*^9, 
   3.627058766411271*^9}, {3.6270588066705093`*^9, 3.62705882758886*^9}, {
   3.627058892059167*^9, 3.627058893717517*^9}, {3.627059215041004*^9, 
   3.627059250884576*^9}, {3.627059296092936*^9, 3.6270593172882843`*^9}, {
   3.627061004338855*^9, 3.627061019610021*^9}, {3.627061149007904*^9, 
   3.627061166458498*^9}, {3.6270701940340776`*^9, 3.6270702225101213`*^9}, {
   3.627070348903417*^9, 3.6270703681013265`*^9}, {3.627070720166707*^9, 
   3.6270707258142333`*^9}, {3.627078699229357*^9, 3.6270787029340487`*^9}, {
   3.627078951085021*^9, 3.6270789856060877`*^9}, {3.62707916452236*^9, 
   3.627079221438594*^9}, {3.6270793619792147`*^9, 3.627079365157247*^9}, {
   3.627079399491858*^9, 3.627079438590098*^9}, {3.627079479168105*^9, 
   3.627079550934082*^9}, {3.627079598136042*^9, 3.6270795998097963`*^9}, {
   3.627082565069159*^9, 3.627082599395166*^9}, {3.6270828589061737`*^9, 
   3.6270828895776873`*^9}, {3.6270829477167053`*^9, 3.627082949156171*^9}, {
   3.627082980003448*^9, 3.62708298639323*^9}, {3.627083052375342*^9, 
   3.627083124674231*^9}, {3.627083200305669*^9, 3.627083208972426*^9}, {
   3.627133478845146*^9, 3.6271334855089016`*^9}, {3.6272291088004723`*^9, 
   3.627229121250979*^9}, {3.6272291960453987`*^9, 3.6272292059796352`*^9}, {
   3.630156164947476*^9, 3.630156168713099*^9}, {3.630156240431342*^9, 
   3.6301562754584846`*^9}, {3.630156357347148*^9, 3.630156367165401*^9}, {
   3.630156417085828*^9, 3.6301564519871397`*^9}},
 CellID->168934683,ExpressionUUID->"7c9065db-13e0-4b09-a51e-dc7adf8fa6b1"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`Mh$$ = 125, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`Mh$$], 125, 
       Text[
        Style["\!\(\*SubscriptBox[\(m\), \(h\)]\)", Italic, 10]]}, 100, 150, 
      1}}, Typeset`size$$ = {690., {184., 191.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`Mh$3970$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`Mh$$ = 125}, 
      "ControllerVariables" :> {
        Hold[$CellContext`Mh$$, $CellContext`Mh$3970$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`\[CapitalGamma]h$, $CellContext`\[Gamma]$, \
$CellContext`a$, $CellContext`h$}, $CellContext`\[CapitalGamma]h$ = \
$CellContext`\[CapitalGamma][$CellContext`Mh$$]; $CellContext`\[Gamma]$ = 
         Sqrt[$CellContext`Mh$$^2 ($CellContext`Mh$$^2 + $CellContext`\
\[CapitalGamma]h$^2)]; $CellContext`a$ = ((((2 
              Sqrt[2]) $CellContext`Mh$$) $CellContext`\[CapitalGamma]h$) \
$CellContext`\[Gamma]$)/(Pi 
          Sqrt[$CellContext`Mh$$^2 + $CellContext`\[Gamma]$]); \
$CellContext`h$ = $CellContext`a$/(
          2 ($CellContext`Mh$$^2 $CellContext`\[CapitalGamma]h$^2)); Show[
          
          Plot[$CellContext`a$/(($CellContext`M^2 - $CellContext`Mh$$^2)^2 + \
$CellContext`Mh$$^2 $CellContext`\[CapitalGamma]h$^2), {$CellContext`M, \
$CellContext`Mh$$ - 0.1, $CellContext`Mh$$ + 0.1}, 
           PlotRange -> {{$CellContext`Mh$$ - 0.01, $CellContext`Mh$$ + 
              0.01}, {0, 1.3 10^2}}, 
           AxesLabel -> {
            "\!\(\*SubscriptBox[\(m\), \(h\)]\)[GeV]", 
             "\!\(\*SubscriptBox[\(\[Sigma]\), \(t\)]\)"}], 
          
          Plot[$CellContext`h$, {$CellContext`M, $CellContext`Mh$$ - \
$CellContext`\[CapitalGamma]h$/
            2, $CellContext`Mh$$ + $CellContext`\[CapitalGamma]h$/2}, 
           PlotStyle -> {Red}, PlotLegends -> {"\[CapitalGamma]"}], 
          Graphics[
           
           Text[("\!\(\*SubscriptBox[\(M\), \(H\)]\) = " <> 
             ToString[$CellContext`Mh$$]) <> 
            " GeV", {$CellContext`Mh$$ + 0.007, 80}]], 
          Graphics[
           Text[("\[CapitalGamma] = " <> ToString[
               NumberForm[10^3 $CellContext`\[CapitalGamma]h$, 3]]) <> 
            " MeV", {$CellContext`Mh$$, $CellContext`h$ - 10}]], 
          ImageSize -> {500, 300}]], 
      "Specifications" :> {{{$CellContext`Mh$$, 125, 
          Text[
           Style["\!\(\*SubscriptBox[\(m\), \(h\)]\)", Italic, 10]]}, 100, 
         150, 1, Appearance -> "Labeled"}}, "Options" :> {}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{
      733.0999999999999, {227.80445861816406`, 233.53639221191406`}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>(($CellContext`\[Alpha] = 1/137; $CellContext`k = 
       0.23; $CellContext`me = ($CellContext`m[1] = 
        5 10^(-4)); $CellContext`Mu = ($CellContext`m[2] = 
        3 10^(-3)); $CellContext`Md = ($CellContext`m[3] = 
        7 10^(-3)); $CellContext`m\[Mu] = ($CellContext`m[4] = 
        0.105); $CellContext`Ms = ($CellContext`m[5] = 
        0.12); $CellContext`Mc = ($CellContext`m[6] = 
        1.3); $CellContext`m\[Tau] = ($CellContext`m[7] = 
        1.777); $CellContext`Mb = ($CellContext`m[8] = 
        5); $CellContext`mw = ($CellContext`m[9] = 
        80); $CellContext`mz = ($CellContext`m[10] = 
        91); $CellContext`Mt = ($CellContext`m[11] = 
        175); $CellContext`\[Alpha]s = 0.12; $CellContext`\[Eta]p[
         Pattern[$CellContext`\[Lambda], 
          Blank[]]] := 
       1/2 + (1/4 - $CellContext`\[Lambda])^
         Rational[1, 2]; $CellContext`\[Eta]m[
         Pattern[$CellContext`\[Lambda], 
          Blank[]]] := 
       1/2 - (1/4 - $CellContext`\[Lambda])^Rational[1, 2]; $CellContext`f[
         Pattern[$CellContext`\[Lambda], 
          Blank[]]] := 
       If[$CellContext`\[Lambda] < 
         1/4, (1/2) 
          Log[$CellContext`\[Eta]p[$CellContext`\[Lambda]]/$CellContext`\[Eta]\
m[$CellContext`\[Lambda]]]^2 - Pi^2/2 - (I Pi) 
         Log[$CellContext`\[Eta]p[$CellContext`\[Lambda]]/$CellContext`\[Eta]\
m[$CellContext`\[Lambda]]], (-2) 
         ArcSin[1/(
            2 $CellContext`\[Lambda]^Rational[1, 2])]^2]; $CellContext`Y[
         Pattern[$CellContext`\[Lambda], 
          Blank[]]] := 
       3 (2 $CellContext`\[Lambda] + ($CellContext`\[Lambda] (
            4 $CellContext`\[Lambda] - 
            1)) $CellContext`f[$CellContext`\[Lambda]]); $CellContext`Q[
         Pattern[$CellContext`n, 
          Blank[]]] := Which[
         Or[$CellContext`n == 2, $CellContext`n == 6, $CellContext`n == 11], 
         2/3, 
         Or[$CellContext`n == 3, $CellContext`n == 5, $CellContext`n == 8], -(
          1/3), 
         Or[$CellContext`n == 1, $CellContext`n == 4, $CellContext`n == 
          7], -1]; $CellContext`F[
         Pattern[$CellContext`mf, 
          Blank[]]] := If[
         Or[$CellContext`mf == $CellContext`Mu, $CellContext`mf == \
$CellContext`Md, $CellContext`mf == $CellContext`Mc, $CellContext`mf == \
$CellContext`Ms, $CellContext`mf == $CellContext`Mb, $CellContext`mf == \
$CellContext`Mt], 3, 1]; $CellContext`\[CapitalGamma]1[
         Pattern[$CellContext`mh, 
          Blank[]], 
         Pattern[$CellContext`mf, 
          
          Blank[]]] := ((($CellContext`\[Alpha] ($CellContext`mh/(
            8 $CellContext`k))) ($CellContext`mf^2/$CellContext`mw^2)) (1 - 
           4 ($CellContext`mf^2/$CellContext`mh^2))^(3/
           2)) $CellContext`F[$CellContext`mf]; $CellContext`\[CapitalGamma]2[
        
         Pattern[$CellContext`mh, 
          Blank[]], 
         Pattern[$CellContext`mb, 
          Blank[]]] := 
       Which[$CellContext`mb == $CellContext`mw, (($CellContext`\[Alpha] \
($CellContext`mh^3/((16 $CellContext`mw^2) $CellContext`k))) (1 + 
           12 ($CellContext`mw^4/$CellContext`mh^4) - 
           4 ($CellContext`mw^2/$CellContext`mh^2))) (1 - 
           4 ($CellContext`mw^2/$CellContext`mh^2))^(1/
           2), $CellContext`mb == $CellContext`mz, (($CellContext`\[Alpha] \
($CellContext`mh^3/((32 $CellContext`mw^2) $CellContext`k))) (1 + 
           12 ($CellContext`mz^4/$CellContext`mh^4) - 
           4 ($CellContext`mz^2/$CellContext`mh^2))) (1 - 
           4 ($CellContext`mz^2/$CellContext`mh^2))^(1/
           2)]; $CellContext`\[CapitalGamma]4[
         Pattern[$CellContext`mh, 
          
          Blank[]]] := ((($CellContext`\[Alpha] ($CellContext`mh/(
            8 $CellContext`k))) ($CellContext`mh^2/$CellContext`mw^2)) \
($CellContext`\[Alpha]s^2/(9 Pi^2))) Abs[Sum[
             $CellContext`Y[$CellContext`m[$CellContext`q]^2/$CellContext`mh^\
2], {$CellContext`q, 2, 3}] + Sum[
             $CellContext`Y[$CellContext`m[$CellContext`q]^2/$CellContext`mh^\
2], {$CellContext`q, 5, 
              6}] + $CellContext`Y[$CellContext`m[
               8]^2/$CellContext`mh^2] + $CellContext`Y[$CellContext`m[
               11]^2/$CellContext`mh^2]]^2; $CellContext`\[CapitalGamma]5[
         Pattern[$CellContext`mh, 
          
          Blank[]]] := ((($CellContext`\[Alpha] ($CellContext`mh/(
            8 $CellContext`k))) ($CellContext`mh^2/$CellContext`mw^2)) \
($CellContext`\[Alpha]^2/(18 Pi^2))) 
        Abs[Sum[$CellContext`Q[$CellContext`f]^2 $CellContext`F[
               $CellContext`m[$CellContext`f]], {$CellContext`f, 1, 
              8}] + $CellContext`Q[11]^2 $CellContext`F[
              $CellContext`m[11]] - 21/4]^2; $CellContext`\[CapitalGamma][
         Pattern[$CellContext`mh, 
          Blank[]]] := 
       Module[{$CellContext`n, $CellContext`temp}, $CellContext`n = 
          1; $CellContext`temp = \
$CellContext`\[CapitalGamma]4[$CellContext`mh] + \
$CellContext`\[CapitalGamma]5[$CellContext`mh]; While[
           
           And[$CellContext`mh >= 
            2 $CellContext`m[$CellContext`n], $CellContext`n <= 
            8], $CellContext`temp = $CellContext`temp + $CellContext`\
\[CapitalGamma]1[$CellContext`mh, 
               $CellContext`m[$CellContext`n]]; Increment[$CellContext`n]]; 
         While[
           
           And[$CellContext`mh >= 
            2 $CellContext`m[$CellContext`n], $CellContext`n <= 
            
            10], $CellContext`temp = $CellContext`temp + $CellContext`\
\[CapitalGamma]2[$CellContext`mh, 
               $CellContext`m[$CellContext`n]]; Increment[$CellContext`n]]; 
         If[$CellContext`mh >= 
           2 $CellContext`m[$CellContext`n], $CellContext`temp = \
$CellContext`temp + $CellContext`\[CapitalGamma]1[$CellContext`mh, 
              $CellContext`m[$CellContext`n]]]; $CellContext`temp]; \
$CellContext`\[CapitalGamma]b[
         Pattern[$CellContext`mh, 
          Blank[]]] := 
       If[$CellContext`mh < 2 $CellContext`Mb, $CellContext`temp = 
         0, $CellContext`temp = \
$CellContext`\[CapitalGamma]1[$CellContext`mh, $CellContext`Mb]/$CellContext`\
\[CapitalGamma][$CellContext`mh]]; $CellContext`\[CapitalGamma]\[Tau][
         Pattern[$CellContext`mh, 
          Blank[]]] := 
       If[$CellContext`mh < 2 $CellContext`m\[Tau], 
         0, $CellContext`\[CapitalGamma]1[$CellContext`mh, $CellContext`m\
\[Tau]]/$CellContext`\[CapitalGamma][$CellContext`mh]]; $CellContext`\
\[CapitalGamma]c[
         Pattern[$CellContext`mh, 
          Blank[]]] := 
       If[$CellContext`mh < 2 $CellContext`Mc, 
         0, $CellContext`\[CapitalGamma]1[$CellContext`mh, \
$CellContext`Mc]/$CellContext`\[CapitalGamma][$CellContext`mh]]; \
$CellContext`\[CapitalGamma]g[
         Pattern[$CellContext`mh, 
          
          Blank[]]] := \
$CellContext`\[CapitalGamma]4[$CellContext`mh]/$CellContext`\[CapitalGamma][$\
CellContext`mh]; $CellContext`\[CapitalGamma]\[Gamma][
         Pattern[$CellContext`mh, 
          
          Blank[]]] := \
$CellContext`\[CapitalGamma]5[$CellContext`mh]/$CellContext`\[CapitalGamma][$\
CellContext`mh]; $CellContext`\[CapitalGamma]w[
         Pattern[$CellContext`mh, 
          Blank[]]] := 
       If[$CellContext`mh < 2 $CellContext`mw, 
         0, $CellContext`\[CapitalGamma]2[$CellContext`mh, \
$CellContext`mw]/$CellContext`\[CapitalGamma][$CellContext`mh]]; \
$CellContext`\[CapitalGamma]z[
         Pattern[$CellContext`mh, 
          Blank[]]] := 
       If[$CellContext`mh < 2 $CellContext`mz, 
         0, $CellContext`\[CapitalGamma]2[$CellContext`mh, \
$CellContext`mz]/$CellContext`\[CapitalGamma][$CellContext`mh]]; \
$CellContext`\[CapitalGamma]t[
         Pattern[$CellContext`mh, 
          Blank[]]] := 
       If[$CellContext`mh < 2 $CellContext`Mt, 
         0, $CellContext`\[CapitalGamma]1[$CellContext`mh, \
$CellContext`Mt]/$CellContext`\[CapitalGamma][$CellContext`mh]]); 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 TaggingRules->{},
 CellID->129021848,ExpressionUUID->"31a00447-4085-4907-9e9d-295e67727d22"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Snapshots",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"SnapshotGroup", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "To create snapshots, click 'Add Snapshot' in the toolbar at least \
three times, and adjust the controls of each copy to show a range of \
interesting settings. Optional captions for the screenshots may be included \
in the Details section.", 
           StyleBox["\n", FontSize -> 4]}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoSnapshotGroup"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "83978e9d-9462-4cd5-a214-78b6547042af"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "SnapshotGroup"},
 DefaultNewCellStyle->"Text",
 CellTags->{"SnapshotGroup", "Snapshots", "TemplateCellGroup"},
 CellID->98938448,ExpressionUUID->"f5ec9e5e-ae8a-4fb5-96ab-b6b665528ed0"],

Cell[BoxData[
 PaneBox[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzs3QmYVeVh8HFETRQ1Uk3UxLg0+nxpbK3RFk2aNmlsP6PNE5ukbR7Trw1K
DComaNRoXKMgIiqiImqCK1ERt7qEHUQEWQWVfR/2nQFmYBhm83vDaQ53FjgD
zMy5587v9/D43Pvec899Zxiu5z/n3HP+vNM1P+zctk2bNtcfFv7zw8tu+vZ1
111287+1D3f+o+v1V13R9WeXX9T1hp9d8bPrvtbp4DB4aPjPs4e0afPH25/U
s3PnztLS0o0AAADkpZBsIdzq11ydstu8y9atW7cBAACQl0KyRe22p8rbvn17
eLSkpGT7LjsAAADIS1G1hXwLERduNBh3IQPLysrSnikAAADJQr6FiKuTeNFh
meIOAAAgW+LEiw/ULC4ujg7LTHtqAAAA7JvoQM2QdSHuysvLo915aU8KAACA
/RF94C7EXQi9rVu3OjITAAAgo0LQhawLcbdx48Zt27alPR0AAAD2X8i66NJ4
+g4AACDT9B0AAEBh0HcAAACFQd8BAAAUBn0HAABQGPQdAABAYdB3AAAAhUHf
AQAAFAZ9BwAAUBj0HQAAQCqW7DJllxG1RYPRAo1fob4DAABIhb4DAADIutm7
/KFxooUbs1p9BwAA0ML0HQAAQNZFh1zWj7gttdVfoDHHauo7AACAFqPvAAAA
CkN04pT96LvoiXtfub4DAABoMfoOAACgMESXP2iw6fYkWjh64t5Xru8AAABa
jL4DAAAoDPoOAACgMOg7AACAwqDvAAAACoPzZwIAABQGfQcAAFAYluyyH30X
PXHvK9d3AAAALUbfAQAAFJLZu9SPuAZFCzdmtfoOAACghek7AACAQhIdchmd
OGVEbdFgY47JzKXvAAAAUqHvAAAAaJC+AwAAKAz6DgAAoDDoOwAAgMKg7wAA
AAqDvgMAACgM+g4AAKAw6DsAAIDCoO8AAAAKg76jdSrbq7RnBwAA+0Pf0ark
Rtz2PRB6AABklL6jlaiTdeEHvmSXrTmikfBQndBLe+4AANAo+o7WIC67KOu2
bNmyYcOGdevWrVmzZtWqVSt2CTfC3TAYHgoLxKEn8QAAyAp9R8HLLbvi4uJQ
cCtXrly9enX4sQ8j5eXl1buEG+FuGAwPhQXCYmHh3MpL++sAAIAE+o7CFsfd
li1bQrKFdtuwYUMY/GSvwgJhsbBweEp4osQDACAT9B0FLIq70tLSzZs3h1hb
u3ZtuLv3sssVFg5PCU8MTw8rkXgAAOQ5fUehiuNu06ZNq1at2rBhQ+PLLld4
Ynh6WInEAwAgz+k7ClIcd8XFxStXrgw/4fsXd5Hw9LCSsCqJBwBAPtN3FJ7o
jJfRZ+4OZM9d/b140WfxnFETAID8pO8oPNHOu5KSkrVr165Zs+bA4y4SVhVW
GFZrFx4ZUlpaOmHChPfffz/cSHsuAECz03cUmGjnWvSxu5UrV4YbTdV3YVVh
hdEH8ezCI68MGDDg6KOPbtOmTUi5eDD8iHbt2rVdu3Ztdjn88MPvuuuu3Gc9
9NBDbeo58cQTW3z6AECT0XcUmNydd+vWrWuquIuEFdqFx4H7Q+MM3mXvq1q/
fv1//dd/xXU2fvz4+KHOnTuHkfPOO+/hhx/u0aNHCLdwt2fPnvECN998cxj5
0Y9+9F85QhI215cNADS/Ju+7sWPHXnbZZf369fv444+vuuqqv/mbv+nYseOk
SZPCQxMnTrz66qvDyKWXXjp8+PAmeTmoI/rk3ebNm1esWBFuNG3fhRWG1YaV
R5/CS/trJauasO++/OUvh0b7wQ9+8B//8R+5fbdly5bDDz/8jDPOCD+u0cjM
mTPDAmeeeWb83E6dOrVt23b79u3N9GUCAC2vyfvuV7/6VfQb4/bt24cbn/rU
p8J/TznllGefffawww4Ltz/96U+H/x555JGbNm3aj/WHjeq1a9cuXbp0yZ8s
hj9ZtMuCBQs+/vjjOXPmNG3cRcJqw8rDS0SvlfZXTB6J35TCG1R4m9rLbwDq
p9zWP6n/0N7fEo877rjHH3883PjZz36W23fTpk37xje+0bt379yFv/jFLx5y
yCHxxL773e9+/vOf34/3YQAgbzV5333729+ODhPq1KlT2Ppdv379McccE41c
fvnlYSRswHzlK18JdwcNGrQf6w9bTUtqS3ubjjwSfsAWLlw4b9686dOnFxUV
NUffhdWGlYeXCC+k78hV561p3bp1e3ofa8K+C68b3ajTd/WF6gxxd8YZZ8Qj
HTp0OPvss2fNmnXzzTeH9+f+/fuHae/jWzIAkF+atu/Kysqiz/h37NgxHjz5
5JPDyKWXXhqPfP3rXw8jQ4cOje4ee+yxxx9/fCNfInfPnb6jjmjn3dy5c6dM
mbJ+/frm6Luw2rDy8BLRLry0v2LySJ23pvBmtaf3sdx8G7LLfvddLLHvfvjD
H4YFHnvssXgkvDmfcMIJ0TEVkSOOOOK9995r5CsCAHmoaftuxowZ0UbCvHnz
opFVq1aFuwcddFD8a+Ht27cfddRRYTAamTNnTrj9L//yL418CX3HXkR9F36o
Jk6cGH7SmqPvwmrDysNL6DvqyOe+u/3228Oj3/rWt3I/bRcdM3/DDTdEb6R3
3313uNu+ffuVK1c28kUBgHzTtH331FNPhc2Dr33ta/HI22+/HUa++tWvxiMf
ffRRGIk/9DFgwIBw984772zkSzg+k72I+27ChAlVVVXN0XdhtWHl+o769vX4
zK1Jmqrvfve734WHvvKVr4T3z3gwhF4ou9/+9re5S3bt2jUs+dJLLzXyRQGA
fNO0fdelS5c6sXbHHXeEkauvvjoe6d+/fxj53ve+F92NNyc6dep0yimnnHrq
qddff31JScmeXsL5VdiLqO9mz579/vvvN1/fhZWHl9B31LGv51dpmb577bXX
Dj744C9+8YvhJzZxJYMHDw4r+eUvf9nIFwUA8k3T9t25554btg1yN0i++93v
hpGnn346HrnyyitzG/Dv/u7vwt3Pfe5zxxxzzMUXX3zSSSf57TH7Lbo4QnFx
cdjYDrebo+/CasPKw0u4RAL7rcX67p133jnssMOOP/74mTNn1ll+7ty5l19+
+fPPP587+Pvf/77ONfIAgGxpwr4rKSmJPqe/Zs2aeDBsV4SR3E2LDh06hJHo
ok7hRQ8//PDo83fRPruwMRPu/vSnPz3AydA6RX23ZcuWoqKiTZs2NUffhdWG
lYeX0HfstyY8f2asft9Nmzatffv2Rx999AcffFB/+eLi4iOPPPLkk0+O37HD
q3/rW9/a+0laAIA814R9N2HChLBhcNppp8UjCxcujD6tH28Gh4iLrogXbVFM
njw53P7zP//zsLUcLfDCCy+EkVtvvfUAJ0PrFPfdihUrVq1a1Rx9F1YbVq7v
OBAt0HcrV6488cQToxNe/Wdts2fPjpa55pprwqOnn3763Xfffd99933ta18L
dy+88MKmulwOANDymrDvHn/88bBtcMkll8Qjr776ahg5//zz45EpU6ZEmxPR
3X79+oW7t912W7xAdHn0/bs0HoTg2r59e9hIXr169ZIlS5qj78Jqw8rDS4QX
0nfsn+bouyuuuCK8eU6YMCG6G/32rEFjxoyJlgk/wLfccku7du2i8cMPPzzU
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
gHTou0T6DmgB0+atzS2Uwe8vTntGGfPQSx/kXlGitMwVJQBojfRdIn0HNLcd
OyuveXBUnCd3/G58dbUjDPfNxi1ll/fYfTm8p96akfaMACAF+i6RvgOa28AR
c+Iwuaz7kGVrnSFkf7w9rtbl8Bat2Jz2jACgpem7RPoOaFYr19c6w/8ro+el
PaOsqqyqvqnfu/F38vbfjrMbFIDWRt8l0ndAs+r53MQ4SX750Ojyiqq0Z5Rh
s5dszN2FN2JyUdozAoAWpe8S6Tug+UycuSq3R6bOWZP2jDLvsdc+jL+fV9w7
fEtpedozAoCWo+8S6TugmZSVV3btvfu0Kvc/PzntGRWCzaXlnXsOj7+rT7z+
YdozAoCWo+8S6Tugmbw4fPdpVTrdPXTNRhe8axrDJxXl7hWdW7Qx7RkBQAvR
d4n0HdAcVq4vubSb06o0i+rqmtueeC/+3v6639jKquq0JwUALUHfJdJ3QHO4
59lap1XZ6bQqTWrh8uLcXXh/GL8o7RkBQEvQd4n0HdDkJs2qdVqVD+Y6rUrT
e/LNj+Pv8OX3DNu4pSztGQFAs9N3ifQd0LTKK6qu7TPaaVWaW+n2nVfdNyL+
Pj886IO0Z0QemTVr1vW7TJkypcEFli5dGi0wdOjQFp5brpKSkquvvnrQoEH1
H3rvvffuvffeLl263H333fUnOXHixBfqGTVq1N5fLmzIvfjii506dbrgggu+
9a1vXXXVVY8//vjKlSsbP+F33nknfNPCxPa+wBNPPNH4dQL7pFD7burUqdGb
Xq9evcLXWH+B2bNn9+jRI7xnhneY+fPn72VV+g5oWq++Mz+Ojsu6D3FaleYz
Ztqy3P2kMxauT3tG5IuePXu22eU3v/lNgwv86Ec/ihZ46qmnWnZqu9XU1Fx8
8cVhDl27ds0dr6io+P73v9+mtm9/+9tbtmyJl/nHf/zHNvX8/d///V5ebtiw
YZ/73OfqP+vP/uzPXn755UbOOfRy9KzFixc3uMA3v/nN8GjYBmvkCoF9VZB9
d/311x900EHx+1K4fcMNN+QuMGDAgIMPPjhe4NBDDx04cOCe1qbvgCa0fvP2
n949NC6Ol0bOTXtGhSxsHt/15Pvxd/vmx8ZWV9ekPSnywg9/+MNoG+CSSy6p
/+j48ePjjYQZM2a0/PSCEGs/+clPojnU6bsbb7wxDB533HG33nrrxIkT77nn
ni9+8Yth5L//+7/jZdq3bx9GrrnmmmtzPProo3t6uTfeeKNt27bhKV/5ylf6
9+8/efLkBQsWvPbaaxdccEE0h7fffruRMz/zzDPD8t27d6//0JIlS8JWWdgG
W7VqVSPXBuyrwuu7119/PbyrfPrTn7799tvDm94dd9xx2GGHhZFXXnklWmD1
6tXhTS80Xd++fWfOnNmrV6/wPhPe06ZPn97gCvUd0IQeHvRBnBu/6D2qrLwy
7RkVuKLVWzrm7MIb/cGytGdEXjjppJOibPnqV79a56Gamppzzz03evSII46o
qkrh3Echpk488cS4MXP7Lkwv2ssWKiweDCEWRj71qU9VVFSEu0VFReHuaaed
1siX27RpU6jF8JQf//jHYVsu96Hwcl26dAkPfeMb32jk2h566KGw/Je//OX6
D915553hoe9973uNXBWwHwqv76JfdnXs2DEe6dSpU/SWFd295JJLwt1bbrkl
XuC2224LI2GxBleo74CmMnvJxtzDBcd9tCLtGbUKv3vjo/h7/vMHRmpq1qxZ
E/0qODRIu3btQsLkPvr8889HcRT++w//8A+pzPDoo48Or37++efffPPNdfpu
1apVZ5xxxgknnJB7NGaI0PDlxEdF/s///E+4/aMf/aiRL/fwww+H5UNRlpSU
1H90w4YN4bt08sknr169Oh6cO3dumNW3vvWtr3/961deeeXUqVPjh8LmYijN
sMI6H5AJ3+cvfelLYfzNN99s5MSA/VB4fRcdMB+SLR554IEHwshFF130yR8v
ilR91FFHhbvz5u2+1NTChQvDSHjvavB3dPoOaBLV1TW3Pr77omx3Pfl+na1K
mklxyY7Le+w+JvblUS412Nq99dZb4f/7Z5555j/90z+FG0uXLo0fKisri451
7NixY/jvddddl8oML7jggldffTW8RfTt27f+8Zn1ffTRR2Gxww8/vLLyj7++
+M1vfhPu/vKXv7zzzjt/+MMfhq/l0UcfLS8v39PT//7v/37vr7Ju3brcuyGB
w2tF207RZtUhhxwSphovEG2MXXvttbnPGjt2bBj8whe+kMouUWg9Cq/vnnnm
mfDuccoppyxfvvyTXUdj/sVf/EUYefjhh8PdBQsWhNtHH310nWcdc8wxYbzB
E63oO6BJjJ66NHfn3aKVm9OeUSvy+rsL4u/8T+8e6loJrVx03M5PfvKT8L/4
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
Ueo3fsBZfrIHAPdlsHz3pz/9ST7x//jHPwZ/6Ve/+pW0zJgxQ65XVFTI/ozc
fPjhhx0eKHs+0u5yigTyHaA4HJHpcDJOIyfjdJuS7ySS9NLyZbs3dOjQW2+9
Vb1l/ulPfypPKiGurUeNGjVKOmzfvt3lvUpeGzhwoP3nM9m0ys22zmK25zvJ
XF//+tcdDtEsKyuT8jqb75QE+v3vf9/5rrlz58pdL7/8cgcXBU2VtaYpy1ud
chuXdk3vogAArhks3w0fPrytI50GtBx+KfsVcuXOO++0Wq32R1ksliFDhki7
y7NdyHeACIvLU4e7qStOMRtCj+jtfLd8+XJZ/vjx49WN6enpsj0sLCxs61HK
IQ1paWku75V25SDP+vp6pcVsNn/jG9+QxtjYWOf+Sr679957f/vb38qVI0eO
qO9ds2aNNL700kvO+U7qfOedd371q18999xz48aNi4uLs98ln0e33XabPEQ+
xdQPsdlsjz76qPOzoJuulta8pRoyd4xX4JWrlXoXBQBwwWD5bsGCBZNaUwZO
efHFF+W68sWykgHDwsLsjwoJCZGWRx55xOUyyXfA2eQi9Ujp432Di6/X6l2U
QfR2vlPGmzp06FBFRcXhw4dlI7lnzx7ZmLfzkKampsGDB995550HDx588803
X3nllenTp58/f17d5+GHH5bFent7WywWq9W6cuVKuXnfffepvzqzs+e7DRs2
yJW///3v6nuff/75QYMGbdq0ySHf7dix42tf+9qAlslrlHltbr31Vn9/f3uH
v/zlL9I4ZcoU9dIiIiKk8dvf/rbL+W7QHSnZ119f8NWUlxOXhJSU1+ldFADA
kcHynTOH8+9ufvlt9ksvvWQ2m2+2fO2snPrh5+fncgnkO/RzCRml6p26MV6B
mQUVehdlHJ3Kd3FxcavbVl5e7vyQl19+WZa/atUq5fc1xbe+9S2Xw0kpEhIS
nI9/kAimHq4kMjLyO9/5jrQ/8MADDz744ICWeWd27drlcoH2fCcVSnJUH6JZ
WFgof4Hf/e53ytBY9nxXVFQ0dOhQafH19ZWkZrPZdu/eLXFPHm4/BPTkyZNK
AeooN3r0aGmcOXNmR/6e6KzIhKvq3/HfW8nv+ADgdvphvqutrR02bNiAljE2
p0+froyc+cwzz7j82vkm+Q79W3peuQQ6++6cBL3EzJ4ctB+dynezZ89u5xB0
l2cQP/XUU8q9jzzyiGTAbdu2KWclSxwrLi52+SzKaJZSmKQkWWZiYqJsBpWW
U6dOKX0kWylHR9jJE7U1YIs938n13//+9+qDJ5ctWyY35Rkd8t37778vNx9/
/HH1cl577TVpHDdunHJTNtrKz4hSjNJSX19/1113SZ2aE0Cgy/afylBHvFlr
I+sbzXoXBQD4iuHznTJS3N69e9WNshPy7LPP2ndLJNy5HBNAQb5Dv5VTVDV2
0Un1oAoxKQxI2MM6le9k67qkbdevX3d+yA9+8ANZ/rBhw+zHZEos+u53vyuN
H3zwgctnycvL2759e0BAgLpx5MiR8pBXXnlFrssGUxkRZdasWYWFhVevXv3o
o4/khUi2cjlFgjrfbd26Va7/7W9/U+6Sze/tt99eVVXlkO+UGPi73/1ujYqy
PX/++eftS54zZ84A1ZicO3bskJu/+c1vOvLHRJetP5SojngLt5xtMnM0LAC4
C8Pnu3ZUVFTExcUVFBS03418h/6pqKx2wuJg9V5ceHy+3kUZUG+ff6cMaTJ9
+nR1o9xUDlPv+HIk7slDHn30Ubnu6+sr10ePHq3uMGnSJGn8+OOPnR+rzncS
5W677TZJgiaTKTs7W9pfffXVm19OXWrPd9/73vfa+pnyoYcesi9ZoujAgQOH
Dh2qjPSivNi2DhNFT7FYrQ6T4i3deb7Z4voYGABAH+vP+a6DyHfoh65XNkxe
FqrefztxhgPeekWn8l1TU1NV21zOPafMdDB37lx1oxLWfvazn7l8FovFUlJS
Ilt7dWN0dLQ85Dvf+Y5cf+GFF+T6vn371B1OnTqlHPfuvEB1vhOvvPKK3Dx8
+LC3t7f9+HmHfPeTn/xEbs6fPz/USVRUlHrhygnUkumuXr0qWU+exWH+BfSG
JrNl4Zaz6k3Eqn0Xra7WQABAHyPfaSLfob+pqjW9/0m4es9tX9hlvYsyrE7l
u48++qid8+8SEhKcH+Lj4yN3/eEPf1A3+vv7S+PUqVNdPouSv+ynuSmU+eYk
TMn1V199Va4vW7ZM3eHAgQPS+Mtf/tJ5gQ75bufOncpBlU8++aT9pzeHfKcc
iin5Tr2c8+fPz5492+F4e4mH0vO//uu//Pz85MrkyZNdvij0uLpG86x1keoN
xaajSS6/ZAAA9CXynSbyHfqVugbzrLWt9tm2Hk/Wuygj61S+W7t27f9rm8vz
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
50/n1xcEbD3BJEcAAA3puTdcDrA5qmWY5aul/JYHoE8ZLN8VFRX98Ic/fOCB
B9RHY1oslttvv10SXHZ2ttVqveuuu+T65cuX7R2ysrKkZciQIdLTeZnkO6OK
v1zy8adRLj+R1x1MKK2o17tAAIDHSMws/Wi9i88UuazccyHvGuflAegjBst3
LiUmJkp8+9rXvtbc3JyZmSnX7777boc+9957r7S7HGiFfGcwVpvtXHKRy/Ps
lLPjCzg7HgDQeTab7UL6tVnrXH+++O06fzmvXO8aARif4fOd2Wx+/vnnJbuN
HDlSbsbExMj14cOHO3R77LHHpD06Otp5CWPb0BfVo0eZmy3h8fkux8b8Itl9
HpdbXKW9FAAA2iYpLy7t2uw2Ut68jWfkXqvNpneZAAzL2PnOYrH89a9/leB2
3333lZWVSUtYWJjcfOqppxx6jhgxQtqDg4OdF0KUM4D6RvPx6Csu57OTyyd7
4/M5cgYA0KNazgJwcX63XKb5nw6Pzzc3MywzgJ5n4HxXX1//8ssvS2obOnSo
/Yc5qU1annzySYfOTzzxhLSHh4c7L4d859FKyuu2BaS86R3k8jy71fs58x0A
0IsSM0tdjs8sl7eXhhyNyqprZIhmAD3JqPlOSn3mmWeUX+5iYmLs7bm5udL4
8MMPO/R/6KGHpN3lFAnkOw+Vnntj+edxo1x9pL6+IGDjkUvXbtTpXSMAoF+4
nFfuciYFubzpHbTzZNqNqga9awRgEIbMd8oompLXHnvssaysLPVdJpNJ2u+8
806r1WpvtFgsQ4YMkfbS0lLnpZHvPEuzxRqVeLWtEx+Uj9Hy6ka9ywQA9DuF
ZTWfHk58fUGAyy8e1xxIyC6s1LtGAB7PePlOwt2jjz4qYe3nP/+5FOzcYfjw
4XJvWFiYvSUkJERaHnnkEZcLJN95ipr6psMRWZOWhrhMdu/4hX5xGAwzlQMA
dFVe3bg7OG3sIhcnDshl/qYzMSlFFtW30ADQKcbLd3/+858lrD333HMNDa4P
dVi+fLl0eOmll5TpzuXfF198UVr8/Pxc9iffub+rpTWbjiaNWRjo8rPy40+j
ziQVNlv4rAQAuIv6RvOxtgf+mrws9HBEVmWtSe8yAXgeg+W76OjoAS0GDRp0
n5O0tDTpU1tbO2zYMOkzYsSI6dOnKyNnPvPMM9Y2visj37ktiWznkou8tpx1
+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
AN0LcIcaKIAC3KGGrhWQlJTk7+8vuSkjI2PNmjXTpk1bvny5EtDkrrVr10qL
BKUOpiTnfHf48GElkdXW1jr3r6ioGD9+/AcffHDt2jV7Y3p6ujzvrFmzpk+f
LrXFx8er+7/11lsOTyHMZvOUKVOkPTY21t5IvnMf/S3fZWZmSpS7++67Hdrv
vfdeaXc50IqHbkCMVIA71EABFOAONVAABehegDvUQAEU4A41dK2A7du3ywMn
TZokOUuuKOlJstLBgweVwx2V9nHjxlVXVysPsbVwuTTnfKecCrd169a2Cqiq
qlLfPHHihPK8EyZMePvtt5Xre/bssXdYuXKltGzcuFH9KIkPStkS9OyN5Dv3
0d/yXUxMjOS44cOHO7Q/9thj0h4dHe38kLEAAABAa13YEV2wYIHy2E2bNpWX
l9fW1tpT1ZYtW6RFEtOHH34oN5WdUqvVKh0kD7pcmkO+kxioxMOwsLCOFFNY
WKgEzCNHjlgsFnkueVJlCVlZWUqf+Ph4uSk1qI/29Pf3H+t0Xh75zn30t3wn
K7zkuKeeesqhfcSIEdIeHBysS1UAAAAwNsluSnr69NNP7WfATZ48WVo2bNhg
/5Fuzpw50pKYmCjXr169KtcXL17scoEO+a6mpkaJiqmpqepuu3bt2vylTS2U
Dlu3bh3bMgyL+vfBtWvXSuO6deuUm5L7pk6dqg5u1dXV48aNkxapTf0s5Dv3
0d/yndQmOe7JJ590aH/iiSekPTw8XI+iAAAAYHBXrlxR8ldRUZHSUlZWprSU
lpYqLU1NTUp6KikpkZtRUVFyff/+/S4X6JDv5LHK0iIjI9Xd3n33XYdfHgMC
AqR90aJFY1uGWzms4uvrK43z5s2zP3zfvn3SIvFNuRkcHCw3vby8HIoh37mP
/pbvcnNzJcc9/PDDDu0PPfSQtLc1RQIAAADQHcrMBerodP78eSVh2VuysrKk
ZfLkycpvatu2bRvbMqPB1q1bZ8yYMXPmTElbkuOUzs7n3ynDnsij1M8rzxL9
JeUEPSXfvffee20devrOO+/YHy5pdGzLqYLKKYFSv3OEvEm+cyf9Ld+ZTCbJ
cXfeead6YFiLxTJkyBBpt395AgAAAPSgjRs3jm2ZENzesmfPnrGth0MJCQmR
lmXLlik3lTAl2Wr8+PE+Pj5KfDt79qxyr3O+W7dunbRIiHM5JvzNL8dLUfLd
Rx99NLZlNJU0J+px5oUyt11oaGhBQYFyOp7s8zssmXznPvpbvhPDhw+XKKc+
81TeStLyyCOP6FgVAAAADGz27NmSgNRHiy1evHhs6wnH1RnQZDIp459IvGpo
aLj55cCV9tEsnfNdUlKS8gPc+vXrnSOe1WpVkpqS71atWiXXd+7cqe4jS5C8
6TAkhXKYqFSrjPPpcnxO8p376If5bvny5ZLmXnrpJWVMV/n3xRdflBY/Pz+9
SwMAAIAB1dfXK8mroqJCaVHGxpSW/Px8ezd1BszMzJTr7733nhLuRHR0tLTs
3btXuemc74QkO+WJVq9enZGRoRzMKTvwCQkJyq+B9nynpLZx48bZf62rrKxU
fiI8cuSIepmyhz9p0qSxLTM7yL9XrlxxfoHkO/fRD/NdbW3tsGHDJNCNGDFi
+vTpysiZzzzzjPqITQAAAKCnpKWlSfyZNm2avUUZG3PChAn2H9pkN1udAZWR
TOxp7mbLSJjtH58pJAwqP8wpxo8fL09qvylpbvfu3fJEN1sCpjLEyltvvbVy
5Up/f/+JEyfKzTlz5jQ3NzvUrwy2qdzr8gWS79xHP8x3N1tGWXn22WcHfEnC
ncuZzQEAAIDuU06sk+Rlb4mNjVWOvbS3KIOr2DOg8kucOr55e3tLS3FxsXLT
Zb5TSM5SDv60mz59uizQPnSnoqmpSeKeEusU8qjCwkLnBdoH/5QX4vIFku/c
R//Md4qKioq4uLiCggK9CwEAAABamTFjhiSm+vp65abFYpkwYcKkSZPsh5y1
k+8UsmcugS4/P1/5wa4tssCSkpLc3Nza2touV0u+cx/9Od8BAAAAbqi6unps
66kTJKZJy5IlS+wtmvmuL5Hv3Icx8l1NTc3EiRP37NnjfFdkZKSPj8+ECRMW
LlwYGBjYzkKk+A8//FD9rmlLVFSUt7f3u+++e+zYMfsZr53qkJqa6uXlJTWv
W7eOQ0MNw7PWQ9kC73QSGhqq+bxwc11eD7u2SmhuzbrfAZ7Is9ZDtodG5W7r
oWZV6iVIVeqhMkVERIS07Nu3z96i5DvZbZArOk7ivHbtWilAOciTfOcODJDv
bDbbK6+8MmDAAPVUjDdbBsZ89dVXB7T2wgsvVFVVuVyOPFw6/OAHP2jnuZqa
ml577TX1Ar/2ta8dPXq04x1utkxVOWjQIHuHwYMH7969uxt/ALgFj1sPf/3r
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
AAAAbkmZCqH9ZAcAAAAAAAAAAABAX/8fNVQWvA==
     "], {{0, 386.5}, {592., 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{144, 144}],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSizeRaw->{592., 386.5},
   PlotRange->{{0, 592.}, {0, 386.5}}]]], "Output",
 TaggingRules->{"Settings" :> {$CellContext`Mh = 125}},
 CellID->296330815,ExpressionUUID->"3beb5e0c-2e6f-4058-a80f-be0c4fc1e686"],

Cell[BoxData[
 PaneBox[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzs3QmYVeVh8HFETRQ1Uk3UxLg0+nxpbK3RFk2aNmlsP6PNE5ukbR7Trw1K
DComaNRoXKMgIiqiImqCK1ERt7qEHUQEWQWVfR/2nQFmYBhm83vDaQ53FjgD
zMy5587v9/D43Pvec899Zxiu5z/n3HP+vNM1P+zctk2bNtcfFv7zw8tu+vZ1
111287+1D3f+o+v1V13R9WeXX9T1hp9d8bPrvtbp4DB4aPjPs4e0afPH25/U
s3PnztLS0o0AAADkpZBsIdzq11ydstu8y9atW7cBAACQl0KyRe22p8rbvn17
eLSkpGT7LjsAAADIS1G1hXwLERduNBh3IQPLysrSnikAAADJQr6FiKuTeNFh
meIOAAAgW+LEiw/ULC4ujg7LTHtqAAAA7JvoQM2QdSHuysvLo915aU8KAACA
/RF94C7EXQi9rVu3OjITAAAgo0LQhawLcbdx48Zt27alPR0AAAD2X8i66NJ4
+g4AACDT9B0AAEBh0HcAAACFQd8BAAAUBn0HAABQGPQdAABAYdB3AAAAhUHf
AQAAFAZ9BwAAUBj0HQAAQCqW7DJllxG1RYPRAo1fob4DAABIhb4DAADIutm7
/KFxooUbs1p9BwAA0ML0HQAAQNZFh1zWj7gttdVfoDHHauo7AACAFqPvAAAA
CkN04pT96LvoiXtfub4DAABoMfoOAACgMESXP2iw6fYkWjh64t5Xru8AAABa
jL4DAAAoDPoOAACgMOg7AACAwqDvAAAACoPzZwIAABQGfQcAAFAYluyyH30X
PXHvK9d3AAAALUbfAQAAFJLZu9SPuAZFCzdmtfoOAACghek7AACAQhIdchmd
OGVEbdFgY47JzKXvAAAAUqHvAAAAaJC+AwAAKAz6DgAAoDDoOwAAgMKg7wAA
AAqDvgMAACgM+g4AAKAw6DsAAIDCoO8AAAAKg76jdSrbq7RnBwAA+0Pf0ark
Rtz2PRB6AABklL6jlaiTdeEHvmSXrTmikfBQndBLe+4AANAo+o7WIC67KOu2
bNmyYcOGdevWrVmzZtWqVSt2CTfC3TAYHgoLxKEn8QAAyAp9R8HLLbvi4uJQ
cCtXrly9enX4sQ8j5eXl1buEG+FuGAwPhQXCYmHh3MpL++sAAIAE+o7CFsfd
li1bQrKFdtuwYUMY/GSvwgJhsbBweEp4osQDACAT9B0FLIq70tLSzZs3h1hb
u3ZtuLv3sssVFg5PCU8MTw8rkXgAAOQ5fUehiuNu06ZNq1at2rBhQ+PLLld4
Ynh6WInEAwAgz+k7ClIcd8XFxStXrgw/4fsXd5Hw9LCSsCqJBwBAPtN3FJ7o
jJfRZ+4OZM9d/b140WfxnFETAID8pO8oPNHOu5KSkrVr165Zs+bA4y4SVhVW
GFZrFx4ZUlpaOmHChPfffz/cSHsuAECz03cUmGjnWvSxu5UrV4YbTdV3YVVh
hdEH8ezCI68MGDDg6KOPbtOmTUi5eDD8iHbt2rVdu3Ztdjn88MPvuuuu3Gc9
9NBDbeo58cQTW3z6AECT0XcUmNydd+vWrWuquIuEFdqFx4H7Q+MM3mXvq1q/
fv1//dd/xXU2fvz4+KHOnTuHkfPOO+/hhx/u0aNHCLdwt2fPnvECN998cxj5
0Y9+9F85QhI215cNADS/Ju+7sWPHXnbZZf369fv444+vuuqqv/mbv+nYseOk
SZPCQxMnTrz66qvDyKWXXjp8+PAmeTmoI/rk3ebNm1esWBFuNG3fhRWG1YaV
R5/CS/trJauasO++/OUvh0b7wQ9+8B//8R+5fbdly5bDDz/8jDPOCD+u0cjM
mTPDAmeeeWb83E6dOrVt23b79u3N9GUCAC2vyfvuV7/6VfQb4/bt24cbn/rU
p8J/TznllGefffawww4Ltz/96U+H/x555JGbNm3aj/WHjeq1a9cuXbp0yZ8s
hj9ZtMuCBQs+/vjjOXPmNG3cRcJqw8rDS0SvlfZXTB6J35TCG1R4m9rLbwDq
p9zWP6n/0N7fEo877rjHH3883PjZz36W23fTpk37xje+0bt379yFv/jFLx5y
yCHxxL773e9+/vOf34/3YQAgbzV5333729+ODhPq1KlT2Ppdv379McccE41c
fvnlYSRswHzlK18JdwcNGrQf6w9bTUtqS3ubjjwSfsAWLlw4b9686dOnFxUV
NUffhdWGlYeXCC+k78hV561p3bp1e3ofa8K+C68b3ajTd/WF6gxxd8YZZ8Qj
HTp0OPvss2fNmnXzzTeH9+f+/fuHae/jWzIAkF+atu/Kysqiz/h37NgxHjz5
5JPDyKWXXhqPfP3rXw8jQ4cOje4ee+yxxx9/fCNfInfPnb6jjmjn3dy5c6dM
mbJ+/frm6Luw2rDy8BLRLry0v2LySJ23pvBmtaf3sdx8G7LLfvddLLHvfvjD
H4YFHnvssXgkvDmfcMIJ0TEVkSOOOOK9995r5CsCAHmoaftuxowZ0UbCvHnz
opFVq1aFuwcddFD8a+Ht27cfddRRYTAamTNnTrj9L//yL418CX3HXkR9F36o
Jk6cGH7SmqPvwmrDysNL6DvqyOe+u/3228Oj3/rWt3I/bRcdM3/DDTdEb6R3
3313uNu+ffuVK1c28kUBgHzTtH331FNPhc2Dr33ta/HI22+/HUa++tWvxiMf
ffRRGIk/9DFgwIBw984772zkSzg+k72I+27ChAlVVVXN0XdhtWHl+o769vX4
zK1Jmqrvfve734WHvvKVr4T3z3gwhF4ou9/+9re5S3bt2jUs+dJLLzXyRQGA
fNO0fdelS5c6sXbHHXeEkauvvjoe6d+/fxj53ve+F92NNyc6dep0yimnnHrq
qddff31JScmeXsL5VdiLqO9mz579/vvvN1/fhZWHl9B31LGv51dpmb577bXX
Dj744C9+8YvhJzZxJYMHDw4r+eUvf9nIFwUA8k3T9t25554btg1yN0i++93v
hpGnn346HrnyyitzG/Dv/u7vwt3Pfe5zxxxzzMUXX3zSSSf57TH7Lbo4QnFx
cdjYDrebo+/CasPKw0u4RAL7rcX67p133jnssMOOP/74mTNn1ll+7ty5l19+
+fPPP587+Pvf/77ONfIAgGxpwr4rKSmJPqe/Zs2aeDBsV4SR3E2LDh06hJHo
ok7hRQ8//PDo83fRPruwMRPu/vSnPz3AydA6RX23ZcuWoqKiTZs2NUffhdWG
lYeX0HfstyY8f2asft9Nmzatffv2Rx999AcffFB/+eLi4iOPPPLkk0+O37HD
q3/rW9/a+0laAIA814R9N2HChLBhcNppp8UjCxcujD6tH28Gh4iLrogXbVFM
njw53P7zP//zsLUcLfDCCy+EkVtvvfUAJ0PrFPfdihUrVq1a1Rx9F1YbVq7v
OBAt0HcrV6488cQToxNe/Wdts2fPjpa55pprwqOnn3763Xfffd99933ta18L
dy+88MKmulwOANDymrDvHn/88bBtcMkll8Qjr776ahg5//zz45EpU6ZEmxPR
3X79+oW7t912W7xAdHn0/bs0HoTg2r59e9hIXr169ZIlS5qj78Jqw8rDS4QX
0nfsn+bouyuuuCK8eU6YMCG6G/32rEFjxoyJlgk/wLfccku7du2i8cMPPzzU
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
gHTou0T6DmgB0+atzS2Uwe8vTntGGfPQSx/kXlGitMwVJQBojfRdIn0HNLcd
OyuveXBUnCd3/G58dbUjDPfNxi1ll/fYfTm8p96akfaMACAF+i6RvgOa28AR
c+Iwuaz7kGVrnSFkf7w9rtbl8Bat2Jz2jACgpem7RPoOaFYr19c6w/8ro+el
PaOsqqyqvqnfu/F38vbfjrMbFIDWRt8l0ndAs+r53MQ4SX750Ojyiqq0Z5Rh
s5dszN2FN2JyUdozAoAWpe8S6Tug+UycuSq3R6bOWZP2jDLvsdc+jL+fV9w7
fEtpedozAoCWo+8S6TugmZSVV3btvfu0Kvc/PzntGRWCzaXlnXsOj7+rT7z+
YdozAoCWo+8S6Tugmbw4fPdpVTrdPXTNRhe8axrDJxXl7hWdW7Qx7RkBQAvR
d4n0HdAcVq4vubSb06o0i+rqmtueeC/+3v6639jKquq0JwUALUHfJdJ3QHO4
59lap1XZ6bQqTWrh8uLcXXh/GL8o7RkBQEvQd4n0HdDkJs2qdVqVD+Y6rUrT
e/LNj+Pv8OX3DNu4pSztGQFAs9N3ifQd0LTKK6qu7TPaaVWaW+n2nVfdNyL+
Pj886IO0Z0QemTVr1vW7TJkypcEFli5dGi0wdOjQFp5brpKSkquvvnrQoEH1
H3rvvffuvffeLl263H333fUnOXHixBfqGTVq1N5fLmzIvfjii506dbrgggu+
9a1vXXXVVY8//vjKlSsbP+F33nknfNPCxPa+wBNPPNH4dQL7pFD7burUqdGb
Xq9evcLXWH+B2bNn9+jRI7xnhneY+fPn72VV+g5oWq++Mz+Ojsu6D3FaleYz
Ztqy3P2kMxauT3tG5IuePXu22eU3v/lNgwv86Ec/ihZ46qmnWnZqu9XU1Fx8
8cVhDl27ds0dr6io+P73v9+mtm9/+9tbtmyJl/nHf/zHNvX8/d///V5ebtiw
YZ/73OfqP+vP/uzPXn755UbOOfRy9KzFixc3uMA3v/nN8GjYBmvkCoF9VZB9
d/311x900EHx+1K4fcMNN+QuMGDAgIMPPjhe4NBDDx04cOCe1qbvgCa0fvP2
n949NC6Ol0bOTXtGhSxsHt/15Pvxd/vmx8ZWV9ekPSnywg9/+MNoG+CSSy6p
/+j48ePjjYQZM2a0/PSCEGs/+clPojnU6bsbb7wxDB533HG33nrrxIkT77nn
ni9+8Yth5L//+7/jZdq3bx9GrrnmmmtzPProo3t6uTfeeKNt27bhKV/5ylf6
9+8/efLkBQsWvPbaaxdccEE0h7fffruRMz/zzDPD8t27d6//0JIlS8JWWdgG
W7VqVSPXBuyrwuu7119/PbyrfPrTn7799tvDm94dd9xx2GGHhZFXXnklWmD1
6tXhTS80Xd++fWfOnNmrV6/wPhPe06ZPn97gCvUd0IQeHvRBnBu/6D2qrLwy
7RkVuKLVWzrm7MIb/cGytGdEXjjppJOibPnqV79a56Gamppzzz03evSII46o
qkrh3Echpk488cS4MXP7Lkwv2ssWKiweDCEWRj71qU9VVFSEu0VFReHuaaed
1siX27RpU6jF8JQf//jHYVsu96Hwcl26dAkPfeMb32jk2h566KGw/Je//OX6
D915553hoe9973uNXBWwHwqv76JfdnXs2DEe6dSpU/SWFd295JJLwt1bbrkl
XuC2224LI2GxBleo74CmMnvJxtzDBcd9tCLtGbUKv3vjo/h7/vMHRmpq1qxZ
E/0qODRIu3btQsLkPvr8889HcRT++w//8A+pzPDoo48Or37++efffPPNdfpu
1apVZ5xxxgknnJB7NGaI0PDlxEdF/s///E+4/aMf/aiRL/fwww+H5UNRlpSU
1H90w4YN4bt08sknr169Oh6cO3dumNW3vvWtr3/961deeeXUqVPjh8LmYijN
sMI6H5AJ3+cvfelLYfzNN99s5MSA/VB4fRcdMB+SLR554IEHwshFF130yR8v
ilR91FFHhbvz5u2+1NTChQvDSHjvavB3dPoOaBLV1TW3Pr77omx3Pfl+na1K
mklxyY7Le+w+JvblUS412Nq99dZb4f/7Z5555j/90z+FG0uXLo0fKisri451
7NixY/jvddddl8oML7jggldffTW8RfTt27f+8Zn1ffTRR2Gxww8/vLLyj7++
+M1vfhPu/vKXv7zzzjt/+MMfhq/l0UcfLS8v39PT//7v/37vr7Ju3brcuyGB
w2tF207RZtUhhxwSphovEG2MXXvttbnPGjt2bBj8whe+kMouUWg9Cq/vnnnm
mfDuccoppyxfvvyTXUdj/sVf/EUYefjhh8PdBQsWhNtHH310nWcdc8wxYbzB
E63oO6BJjJ66NHfn3aKVm9OeUSvy+rsL4u/8T+8e6loJrVx03M5PfvKT8L/4
cGPYsGHxQ926dQsj//mf//m9730v3HjppZei8X/4h38Id+t/lOO5554L4w1u
KoQ6e+yxx/rtQSNPy9mYvquoqIhOWhJ/lvBf//Vf658m5YwzzliyZEmDazj2
2GPDAk8//XRjprRq1aojjzwyLN+rV69QauHLHDhwYMi9Qw89NN6OGj58eFjg
hBNOyE256Hiq3AOogOZQeH0X5nDVVVeFN5C2bdueddZZ0XlU/u///b+bN/9x
U2rSpEkNHpF++umnh/Hx48fXX2HnPWiJLwYoFNt2VHTJOVf/E69/mPaMWpfy
nZVde4+Kv/+Pveb736p95zvfCf/TD+n04IMPhhsPPfRQNB7K5Ygjjgipsnjx
4mi3VHS4Y4iUMH7YYYdFn27LFW1yNHi2//Cs+pEVu/jiixsz1cS+C6/y4x//
OCzz2c9+dv36/z1D7MknnxxG/uqv/ur1119ftGjRK6+8Eo384z/+Y/3DBsrL
y6MpTZ5c61otId9+vctNfxItcMMNN4SF//qv/zp34UsvvTQMXnnlldHd6urq
U045JYyE0ItGtm/fHr6lBx100J7Oqwk0lcLruzDDn//853XeRR999NHoDW30
6NHh7jnnnFPnWR06dAjjI0aMqL9CKQccuBeGz8m91nZxyY7k59Ck3vtwhf2n
RKKDdiZNmjRkyJDcKoki5fbbb586dWq4ceyxx0bjM2bMaLOHE4ycffbZDe7X
+2TX/rsHHnjg/j144403GjPVvfddiKZoP+ORRx6Z+zvq8HU99thjmzZtikdm
zpx5yCGHNDjV0GKHHnpoeOjVV1/NHT/11FPrbE1FR2BedNFF0W/OH8vxn//5
n2Hwm9/8Zvz06BjR+JSe0acazz///MZ81cCBKLy+i86v8pWvfGXMmDGbN28O
//3Lv/zLNn86fUqYW7gd3o3rPOuss84K42Hh+ivUd8ABWrtp22Xdh8Rl8eZ7
C9OeUWtUXVNz2xO7P//Y/ekJac+IdCxatKjNrksjlZeXL1mypM2uK8eF8RA+
bdu2/cIXvhA2dfr16xfGL7zwwugpTz75ZLh7/fXX11lVWPLggw+OP/XWHPbS
d2GrLDrP52c/+9nQqomrihYeMGBA/YeifW033XRT7uArr7zy1J/8zd/8Tdx3
/+f//J897ZQ86aST4qcvXbo0fD9DeIYIDXf/+Z//OSzw4osv7ut3ANhXBdZ3
FRUVn/nMZz71qU+Fd+94cNmyZdFhFeEdJjpjcHgfq/PE6DzJDf7+Td8BByj3
mgi/fGj0zkrnFkjH7CUbcnfhTZ69Ovk5FJyBAweG/+OHYPlk166rsHnwpS99
6ZNdpzQJ488999wnf/pd8e233x49JfqYXnyhpdi7774bxv/u7/5uT6+1devW
LXtQVtaoD4Huqe+is2iGh04//fSFC+v+yqi0tDT3XJeRqLAa/JDdZZdd1mav
Jwv9j//4j7jv/vZv/zbc7tat26h6xo0bl/us6Fsamm7FihWh9Y455pi9nOMF
aCoF1nfRqZn+8i//ss549LnjwYMHRweZh9wLb+nxo1VVVe3atQvjdU4PFdF3
wIGYv2xTblNMmOmqvml6cODU+O/ihkfGVFZVJz+HwnLdddflHpP513/91yHx
oo9vhHKJPs3x5S9/uU3OFb2/+tWvttl1rshjagubE23qnSUytvfP3/3rv/5r
Y2bbYN+FuIsuNPCNb3wjbJvVecr06dOjHZTRieYiO3fuPP7448P4hAkN7LmO
Np+CX//61w1O4+KLL477LjoUM/Rd7gJTpky57bbbXn755dzBQYMGhSV/8IMf
9O7du82ui6035ksGDlCB9V10fuD27dvn5ltw5plnhvHw7h1uR1e0iW5HRo4c
GUZOPfXUBtep74D9FrYVf9N/fBwUd/Yf75oI6Vq9ofTSbruPlR0ywakeWp3o
WgDxbqzoTP5RwUUfYSsuLj7ooIPC3bVr136y6zNuhxxySGjADvVE1wh44YUX
GnyhsCly9tlnf3UPfvnLXzZmtg323b//+7+Hwa9//esN7gQMXflnf/ZnYYGf
//zn8WAItzDyF3/xF3s6lDQ6uWVUYfFBUOFLmDZt2ne/+93cz99F1faZz3wm
Pltm2Dj88z//8zB4//33566zvLz82GOPDd+lENHh0ZkzZzbmSwYOUIH1XUVF
RfSelvtrpehIjPD2El21s0+fPtFB9dFZsMJ/o+MHevfu3eA69R2w396fsTJ3
5938ZZuSn0MzGzBkVvw3cuW9w0u370x7RrSc+IiduDXuuOOOKF7iq4FH5/aP
P0oWoq/Nn66iW0cUNfUPj2xC9fsumk9w8MEHf7aeOXPmhGWeffbZaJm/+qu/
uvHGG7/97W9HG0KjRo3a0wuFjI1SN3LCCSecd9550XUQor2BN9xww9atW6OF
o0M9jzjiiLCN1KVLl+hDLn/7t39b/8J2oRajNYS1NcO3B2hAgfXdJ3+queCf
/umfbr311vBmFf0W7rHHHosWKC0tPe6448JIhw4dbrrppujMmeeee26dXX4x
fQfsn52VVdf2GR2nRN9XpqU9I/4oBF3IuvjvJeRe2jOi5YT8qfMxjRdffDGM
HHbYYfFVznv27BlG/u3f/i26G11DIWRgnVWFjaIwfswxxzTrhKMzveQeAhod
67gnM2bMiBb7/e9//4UvfCEaDBtCZ5111ocfJl8W5OWXXz7//POjDafIqaee
+uMf/7jOBYLLy8tDNkalHAnF1+BFhKNTjwb9+/c/sO8E0FiF13fBm2++mXtS
3/D+FqIvd4GioqLzzjsvXiDEXYNvShF9B+yfN99bGEfEZd2HrCvenvaM+F9D
JizO/atZs7E07RmRvy655JKwqfDWW2/VGY92833nO99JZVaNUVNTs2zZsrCl
F+93a6SwsTd37typU6du2bJlL4uFRl60aFFYf+6FGIDUFWTfRdasWRPemlat
2uOpDIqLi8MCuZ8+bpC+A/bDltLyzj2HxRExcMSctGfEbpVV1dc//E78t9Nn
4NS0Z0T+is5kEjYq6oz36NGjTc45NgHyRAH3XVPRd8B+ePrtGXE+XHXfiG07
KtKeEbVMnr0696ORs5fUPQkhBBs2bAgRd+KJJ9Z/6Ac/+EGD+/UA0qXvEuk7
YF+tWFfSsdvudhgxuSjtGdGA7k9PiP+ObvvtuGqnNqWeESNGhIj7/ve/X/+h
6JMg0Tk2AfKHvkuk74B9dd/zk+NwuPHRd6v2cPom0rVoxebcXXjvfbgi7RkB
wIHSd4n0HbBPPl64Prcaps/z6/389dir0+O/qWseHFVeUffs7gCQLfoukb4D
Gq+6uubmx8bGydDzuUlpz4i92bC57Kd3D43/vl5/d0HaMwKAA6LvEuk7oPFG
f7AsjoWOdw1eumbfTktOy3t51Lz4r+zye4YVl+xIe0YAsP/0XSJ9BzRSWXnl
1fePjGOh/xsfpz0jkpWVV/hbA6Bg6LtE+g5oJHuCMspeVwAKhr5LpO+Axti4
xSe5ssqnJgEoGPoukb4DGiP3TIxdezsTY8Y46ykAhUHfJepcW9rTAfLR4pWu
pJZ59/3eVQsByDx9l0jTAYl6PDMhToPbfjuuuqYm7Rmxz1asK+nYbXekj5hc
lPaMAGCf6btE+g7Yu2nz1ubuvJu1eEPaM2I/Pf32jPjvsct9I7bvqEh7RgCw
b/RdIn0H7EVVdfVNj74bR8EDL0xJe0bsvy2l5Z17Dov/NgeOmJP2jABg3+i7
RPoO2ItRU5fuPrV+t8Er1pWkPSMOyJvvLYz/Qi/rPmR98fa0ZwQA+0DfJdJ3
wJ7UuaD5U2/NSHtGHKidFVXX9hkd/532fWVa2jMCgH2g7xLpO2BPXn2n1gXN
N7ugeUF4f8bK3A9ULlhenPaMAKCx9F0ifQc0aNPWHZf3yLmg+Zj5ac+IplFT
U/Ob/uPjv9k7nxxf44SoAGSEvkuk74AG9X/j4zgBfvHAyPKdlWnPiCYzb+mm
3F14E2auSntGANAo+i6RvgPqW7Z2a8ec7f93PliW9oxoYg8P+iD++/3lQ6N3
VlalPSMASKbvEuk7oL77np8cb/z/ut/Y6mrH7xWatZu2XdZ9SPy3/Pa4RWnP
CACS6btE+g6oY+ai9bkH7304f13aM6JZvDB8Tvy33Lnn8K3bytOeEQAk0HeJ
9B2Qq7qm5tYn3os3+3s+NzHtGdFctpVVXNVrRPx3/ezgmWnPCAAS6LtE+g7I
Ne6jFbk775as2pL2jGhGwycVxX/Xl3YbsnpDadozAoC90XeJ9B0Q21lRdc2D
uy9+/fhrH6Y9I5pXZVX1DY+Mif/GH3rpg7RnBAB7o+8S6Tsg9ta4hfGmfqe7
h27YXJb2jGh2U2avzt1jO2/pprRnBAB7pO8S6TsgsnVbeeeew+Pt/IEj5qQ9
I1rIXU+9v/ty5/3Hpz0dANgjfZdI3wGRAUNmxRv5V/UasW1HRdozooUsWF6c
uwtv0iyXOwcgT+m7RPoOCNZsrHU1tGETl6Q9I1pU7uXOr3/4ncqq6rRnBAAN
0HeJ9B0Q9Bk41eZ9a1Yn8IcKfADykr5LpO+A2Us21j48b3XaMyIFdQ/QLXOA
LgB5R98l6lxb2tMBWlp1Tc1tORc07/ZUQb3F0Xgl23dece/uE+y8ONwJdgDI
O/oukaaDVm7s9OW5O+8Wrdyc9oxIzdvjFuVeIGP95u1pzwgAatF3ifQdtGbl
Oyt/0XuUC5oT2VlZdW2f3Re47/fq9LRnBAC16LtE+g5as1ffmRdvzP/07qEb
t7igeWs3/uOV9ucCkLf0XSJ9B63Wpq1lP+0xNN6SD62X9oxIX01Nze2/HRf/
VHR/ekLaMwKA3fRdIn0Hrdbjr30Yb8b/4oGRO3ZWpj0j8kKd86lOnbMm7RkB
wP/Sd4n0HbROi1duzt2GHzt9edozIo88mHM9xF/1HeN6iADkCX2XSN9B69T9
6QnxBvytT7xXXVOT9ozII6vWl17abfflzodPKkp7RgDwR/oukb6DVmjy7NW5
O+9mLd6Q9ozIO8/+Yebuy53fN2L7Dpc7ByB9+i6RvoPWpqKy6vqH34k33fsM
nJr2jMhHW7eVd+45LP45GTjC5c4BWotQPccff/xxe3XuueemMjd9l0jfQWvz
h/G7r2F9abchqzeUpj0j8tSb7y10uXOAVig0UZskp556aipz03eJ9B20Krt2
ygyPN9qfHzo77RmRv3ZWVF3zoMudA7Q6cd99/vOfv2IPbr/99lTmpu8S6Tto
VXI/VHVlr+GlZTvTnhF5bdxHK3I/qrlweXHaMwKg2cV9953vfCftudSl7xLp
O2g9Vq4v6dht97b6sIlL0p4R+a7O5c7vfHJ8jVOtAhQ6fZdp+g5aj/ufn+yi
ZuyruUs35e7CmzBjZdozAqB56btM03fQSsxYuD53K33a3LVpz4jMeHjQB/FP
zrV9Ru+sqEp7RgA0I32XafoOWoPq6pqbHxsbb6Lf8+zEtGdElqzdtO2y7rsv
d/7G2AVpzwiAZqTvMk3fQWsweurSeOO8412Dl67ekvaMyJiBI+bEP0KX3zNs
c8mOtGcEQHPRd5mm76DglZVXXH3/yHjjvP8bH6c9I7Jn+45aP0W/e+OjtGcE
kGXbt3+ybl2L/tm+D9cw1XeZpu+g4L00cm7unpdie17YL3X2AhfZCwyw3+68
85M2bVr0T3jFRtN3mda5trSnAzSx9Zu3d7p7qE9OceDqfIqzh09xAuw3fbe/
9F0iTQeFre8r0+IN8mseHF3uzIccgBmLap2FdeqcNWnPCCCb9N3+0neJ9B0U
sAXLi3O3xsd/7MplHKgHXpgS/0Td8IirKALsl/vv/+S441r0T3jFRtN3mabv
oFDV1NTc2X98vCl+x+/Gh5G0J0XmrdpQemm33ddKGPz+4rRnBEAT03eZpu+g
UL0/Y2Xuzrt5SzelPSMKxIAhs+KfqyvuHb51W3naMwKgKem7TNN3UJB2VlRd
22d0vBHe9+Vpac+IwlG6feeVvYbHP13P/GFm2jMCoCnpu0zTd1CQ3hi7MN78
vqz7kHXF+3DVG0g0bOKS3ddK6DZ4xbqStGcEQJPRd5mm76DwbC4t/9k9w+LN
74Ej5qQ9IwpNZVX1r/qOiX/G7vv95LRnBECTKSsrO+igg0Lf/cu//Evac6lL
3yXSd1B4nnzz43jDu8t9I7bvqEh7RhSgafPW5n7A86MF69KeEQCFT98l0ndQ
YJat2doxZ6t71JSlac+IgtXzuUnxT9pNj75bVe1aCQA0L32XSN9Bgam1yd3P
JjfNqM4vE0ZMLkp7RgAUOH2XSN9BIXHIHC3sqbdmxD9vV903YluZg4EBaEb6
LpG+g4Kx65QX7zrlBS1pS2l55567T+YzYMistGcEQCHTd4n0HRSM4ZOKnLKe
lvf2uEXxD96l3Yb4wQOg+ei7RPoOCsO2soqreo3Yfcnpt2ekPSNai4rKqhse
2X2thHsHTEp7RgAUrELtu/Xr17/44os33HDDr3/965dffrm63vkTZs+e3aNH
j6uvvvqJJ56YP3/+Xlal76AwPD9sdryB3bnn8K3bytOeEa3ItLm1Pvg5dc6a
tGcEQGEqyL4bO3bs8ccf3yZHhw4dSktL4wUGDBhw8MEHx48eeuihAwcO3NPa
9B0UgJXrSy7rPiTeun57/KK0Z0Sr0+v3k+OfwOsefmdnZVXaMwKgABVe361b
t+7www8P1fazn/1s4sSJjzzyyMknnxzuXnnlldECq1evbt++fWi6vn37zpw5
s1evXqH12rZtO3369AZXqO+gAPR8buLuTeuH3qmwaU2LW7W+9NJuu3/J8MbY
BWnPCIACVHh9d+utt4aa++53v1tTUxONDBs2LIwce+yx0VGal1xySbh7yy23
xE+57bbbwkinTp0aXKG+g6ybNGuVQ+PIB88P3X2Q8OU9hm7cUpb2jAAoNAXW
d6Hp2rdv37Zt2zVr1uQOvv322+PHjw+3Q+IdddRRoebmzZsXL7Bw4cIw0q5d
u6qqBn6lr+8g03bsrLzmwVG7r4nwvGsikJrtOyquvn9k/NN49zMT0p4RAIWm
wPpu3bp1odTOOuus0HQffvjhI4880qdPn4kTJ8YLLFiwICxw9NFH13niMccc
E8YbPNGKvoNMGzhiTrw5fVn3IWs2bkt7RrRqY6cvz92bPHTikrRnBEBBKbC+
mzZtWsi0iy666L/+679yz6/y//7f/ysr++NhMJMmTQp3TzvttDpPPP3008N4
tI+vjs570BJfD3BgVq0vzT2tyiuj5yU/B5pTTU1N7g7lTncP3VlZmfakACgc
BdZ3b731Vtx0l19++UsvvXTnnXe2a9cu3L3xxhvDAqNHjw63zznnnDpP7NCh
QxgfMWJE/XVKOciuewdMijekr+0zurzCaVVI35hptXbhPfTSB2nPCIDCUWB9
N2jQoCjuunfvHg8+88wzYeSQQw7ZunVrmFu4ffbZZ9d54llnnRXGx4wZU3+d
+g4yatKs1blb0VNmr057RvC/ftV39+XOf3bPsM0lO9KeEQAFosD6bvz48SHT
DjrooO3bt8eDW7Zs+fSnPx3GJ02aVFRUFG6ccsopdZ540kknhfEGL5Gg7yCL
yv94WpXRu0+r8nunVSGPrFhXcmnOkcOPvdrwBXoAYF8VWN9F+XbIIYfUORPm
ueeeGx1+WV5eHm4cccQR0bUSImHh6BjOdevW1V+nvoMsemnk3NqnVSlNe0ZQ
y6gpS3P3L88p2pj2jAAoBAXWdxUVFZ/5zGdCqYWvKx4M+Xb88ce3bdt28+bN
4e5pp50WFhg9enS8wMiRI8PIqaee2uA69R1kzqoNtU6rMmjU3LRnBHVV19Tc
9ttx8U/pzY+Nrcr5xSMA7J8C67vg5ptvDrH2ta99LUwmGrn//vujiyZEd/v0
6RPuXnjhhSEGP9mVhBdccEEY6d27d4Mr1HeQOXVPq7LT+QnJRwtXFOfuwhsy
YXHaMwIg8wqv79avX//5z38+9NqXv/zl66+//t/+7d+iAzKnTp0aLVBaWnrc
cceFwQ4dOtx0003RmTPPPffc6j384lTfQbZMnl3rtCqTnVaFPNb/zY/jn9XO
PYcVO9EKAAem8PouWLt27UUXXXTIIYeEcGvbtu0555xT58IHRUVF5513Xnwl
hRB3DV7ZPKLvIEPKd1Ze22f3aVXuHTAp7RnB3mzdVn5lr+FOtAJAUynIvouU
lZV9+OGHYc57WqC4uHjq1KnLly/f+3r0HWTIoFG1TquyeoPTqpDv6pxoZfYS
J1oBYP8VcN81FX0HWbG6zmlVRjqtChlQXVNze86JVm589N2KyqrkpwFAQ/Rd
In0HWdHr95PjjeRrHnRaFTKjzolWXhuzx48MAMDe6btE+g4yYYrTqpBlz/xh
Zu6hxascWgzAftF3ifQd5L+y8sprHhzltCpk1/YdFb/ovftnuMczE2pqatKe
FADZo+8S6TvIf78fOsu+D7KuzqU9xkxblvaMAMgefZdI30GeW7Jqc8ecreJX
Rs9Le0awn3q/OCX+Sb6y1/Ct28rTnhEAGaPvEuk7yGfV1bXOPXjDI2N2Vjj3
IFm1YXPZ5fcM2305vNc+THtGAGSMvkuk7yCfDZ24JPeQthmL1qc9IzggQycs
9iMNwH7Td4n0HeStjVvKfpa7s+PV6WnPCA5UdXXNbTm7pK9/+B27pAFoPH2X
SN9B3urz0tTdH1a6d/iWUh9WohD88SOl3Xbvwhs0cm7aMwIgM/Rdos61pT0d
4H99MHdN7mFs73zgZIMUjueHzo5/ti/tNmT52q1pzwiAbNB3iTQd5KFdF7wb
HW8Ad3vqfRcLo5Ds2Fl5bZ/dP+F3Pfl+tZ9wABpB3yXSd5CHnh08M/eCdyvW
laQ9I2hi0+atzd1DPXJKUdozAiAD9F0ifQf5ZsHy4tzt3pdHueAdhenhQR/E
P+edew4vLtmR9owAyHf6LpG+g7xSWVX9635j443eX/Uds7PS2QUpTCHoQtbF
P+2PvDwt7RkBkO/0XSJ9B3nl9THzc3fezSnamPaMoBmNnFKU+wM/fd7atGcE
QF7Td4n0HeSPFetKLus+JN7WfeqtGWnPCJpXdU3NnU+Oj3/mr+0zesfOyrQn
BUD+0neJ9B3kiT9u6PbfvaH7iwdGbttRkfakoNktW7v10m67f63x/LDZac8I
gPyl7xLpO8gTQycszj1QbeqcNWnPCFrISyPnxj/5He8avHBFcdozAiBP6btE
+g7ywdpN2y7vMTTexO3rRBO0Jjsrqq57+J345/+mfu9WOK0QAA3Rd4n0HaSu
urrmriffjzdur+o1YktpedqTghY1a/GG3P3Xr4x2WRAAGqDvEuk7SF2dc2aO
+2hF2jOCFDz11oz4X8Gl3YYsXb0l7RkBkHf0XSJ9B+latGJz7sklHnrpg7Rn
BOnYvqPimgdHxf8Wbn3ivcqq6rQnBUB+0XeJ9B2kqHxn5Q2PjMk9Z2bJ9p1p
TwpS8+H8dbn7sl8bMz/tGQGQX/RdIn0HKXryzY9zt2Y/Xrg+7RlByp54/UNH
aQKwJ/oukb6DtEybuzY37gYMmZX2jCB928oqftE75yjNxx2lCcBu+i6RvoNU
bC4t73LfiNwTwu+scEJ4+KPp82r96uPVd5xLE4D/pe8S6TtIxQMvTIk3Xy/r
7iA0qCX3KM2O3QYvWrk57RkBkBf0XSJ9By1v5JSi3N0Tb49flPaMIL9sK6vo
mnOU5q/62sENwB/pu0T6DlrYqg2lP+0xNN5w7fHMhOqamrQnBXnn44XrfUAV
gDr0XSJ9By2psqr69t+OizdZr7h3+IbNZWlPCvLUM3+YmZt4sxZvSHtGAKRM
3yXqXFva04ECN2jU3Nzt1fEfr0x7RpC/6lwg8to+o7fvqEh7UgCkSd8l0nTQ
YuYt3dQxJ+4efWV62jOCfDd/Wa1/Nb/9n4/SnhEAadJ3ifQdtIyy8opfPjQ6
3ky95sHR28rsiYBkg0bW2us9dc6atGcEQGr0XSJ9By0j93zv4c/sJT5JBI1S
WVV96+Pvxf92rr5/5JbS8rQnBUA69F0ifQctYNKsVblx9+LwOWnPCLJk2Zqt
l3UfEv8Luu/3k2ucdRagVdJ3ifQdNLdNW8uu7DU83jS99fH3KipdyQv2zdvj
FuX+kuQPrhoJ0Crpu0T6DppVTU1Nz+cmxRulne4eumJdSdqTguyprqm559mJ
8T+ly7oPWbxyc9qTAqCl6btE+g6a1ZpvXlD2qcPjP5XtjvjkqKP88cef/fhT
c+SROz69+19TuF1xT8+0/4kD0KL0XSJ9B81n2dqtM08/55M2bfzxx5/m+DP5
ki5p/ysHoEXpu0T6DppJRWXVzY+NnXGavvPn/7d3J+BR1ff+xxFELWK1Vqm3
V6sVn/Z2ufpXi9YutvZpfexzq9fb9vbS2wUFRRYRRBFZlDUhAcJiWGWVVfY9
CVkIWYCEEBKykoSsJCEJZN8mk5nh/zXnOp7MTHKyn5mT9+uZh2fmN785851w
5sz5zJzz+3Hprcv+3/w9MuGq3u91AEDfId9pIt8BvWRnUOo/550g33Hh0nsX
yXdveAddu1Gr99sdANBHyHeayHdAb0jJvq6MAjFm9sGxM/dt3nXmZk0NFy5c
euRSnFs88eMD8s56/aPD8i6bvT6q2WLV+00PAOgL5DtN5Dugx9U2NE1eFmof
6G/qylMNpma9iwIMJeJigXq6hB1BqXpXBADoC+Q7TeQ7oMf574u373aOmn8i
I79c74oAA1q176I64iVklOpdEQCg15HvNJHvgJ4VlXhVvc+5L+yy3hUBxlTf
aJ668pT9vTZhcXBlTaPeRQEAehf5ThP5DuhBZZX1YxedtO9wfvxpNKcFAb0n
62rFa/MD7O+4RZ/FWG02vYsCAPQi8p0m8h3QU2THcsHms/ZdzTe8AouvM6wf
0LuORV1R/2J+JDJL74oAAL2IfKeJfAf0FNmxVO9nhsbl6V0RYHxWm81nW4z9
fffa/ICsggq9iwIA9BbynSbyHdAjcoqqXl/w1XFifrvO610R0F9U1jROXBLy
1Yi1K07VN5r1LgoA0CvId5rId0D31TWY31ON8yC7mlW1Jr2LAvqRxMxS9a/n
n+yN17siAECvIN9pGtua3uUAnsdqsy3deV69b3nxconeRQH9zs6gVPXbMPBc
jt4VAQB6HvlOE5kO6Kb9py6r9yo/O5Gid0VAf9RssX78aZT6RDymngQA4yHf
aSLfAd0Rf7lEHe7mbTrDhAiAXsoq6sf5fjVByeRlodV1HCkNAIZCvtNEvgO6
7NqN2rd8vtqZnLQ0pILplQFdJWS0+spl0WfnrFZmxAMA4yDfaSLfAV3T2NT8
4eoI+27k6ws4GAxwC3tDWx0yvTs4Te+KAAA9hnyniXwHdI3/vnj1PmRwbK7e
FQH4gtVqW/RZjPrtGZtarHdRAICeQb7TRL4DuuDEmWz13uO6gwl6VwTgK9V1
psnLwuzv0De9gwrLavQuCgDQA8h3msh3QGelZF8fNf+rcDd7XWST2aJ3UQBa
uVJY+fqCAPv79P1PwuuY9BwAPB/5ThP5DuiUG1UNExYH23cax/sGl1XU610U
ABfCLuSrf2dfvCOWsVYAwNOR7zSR74COa2q2qCfYGjXvRFJWmd5FAWjTpqNJ
jLUCAEZCvtNEvgM6bsPhS+p9xSORWXpXBKA9zRbr/E1n1G/bs0mFehcFAOg6
8p0m8h3QQWFxeeq9xJV7LthsHOsFuLuq2lZjrYzxCswpqtK7KABAF5HvNJHv
gI7ILKhQj9UwfdXpBlOz3kUB6JCcosoxCwPt798py8Oq60x6FwUA6ArynSby
HaCprLJ+4pIQ+87h2EVBRddr9S4KQCdEXypU//6+YPNZczPD3gKA5yHfaSLf
Ae1rMDXPWBOh3jOMS7umd1EAOm3nyTT1G3nN/oscYg0AHsfw+S4gIOC9995L
SkpyaE9NTfXy8po4ceK6desyMjLaWQL5DmiH1WpbuvO8ep/wYHh7bygAbkve
zr7bY9Vv531hl/UuCgDQOcbOd7m5uV//+tcHDBiwZ88edfu2bdsGDRo04EuD
Bw/evXt3Wwsh3wHt2BGUqt4bXLWPL/wBD1bXYJ6++rT6TR1xsUDvogAAnWDg
fGe1Wn/5y18qCU6d74qLi++55x7JdP7+/snJyb6+vpL1Bg4cePHiRZfLId8B
bXGYHHnuhugmTtgBPJzD6bSvzQ9IvsIslgDgMQyc77y9ve2/0Knz3ciRI6Vl
5syZ9pbZs2dLy+jRo10uh3wHuJSSfV12/NQD7lXWMuAeYARXCivHeH01nObY
RSevltboXRQAoEOMmu/kdQ0ePPh73/veK6+8os53Vqv1rrvukpbLl786pyAr
K0tahgwZYrG4+OmBfAc4KyyrGedz0r7794Z3UN61ar2LAtBjLqRfG6X6df6L
L3BqGvUuCgCgzZD5rr6+/vvf//6tt94aGxv717/+VZ3vMjMz5ebdd9/t8JB7
771X2l0OtEK+AxxU1preXfHVbMiyExifXqJ3UQB6WNC5HPUB2B+tjzI1Makl
ALg7Q+a78ePHS1ibM2eOXHfIdzExMXJz+PDhDg957LHHpD06Otp5aWPb0Msv
AnBTJrPl40+j1Xt9J85k612UB5s2bdp7bSgtLe3BJ5Lt29KlSydOnLhkyZLs
bI3/svr6+p2uqEtqaGjYsmXL+y3kitxsa2mVlZXKK5KeJpOLg3irqqqUDmvW
rOnIazl16pR09vHxab/DunXrOrI0tGNbQIr6ze6367zVygBKAODWjJfvjh8/
LkltxIgRzc1ffM3okO/CwsLk5lNPPeXwKOkv7cHBwc4LJMoBdrJr57crTr2/
t+V4st5FebZbbrllQBuSk3vmbytb5tdff1295Ntvv/2zzz5r5yGnT592WVJo
aKjSISUl5ZFHHlHf9d3vflcaXS4tJyfH3u3o0aPOHTZv3qzc+4tf/KIjr+j8
+fNK/7aC6vPPPy/3enl5dWRpaIfVZlu2u9VbfusJ3vIA4NYMlu9KS0uHDRs2
ZMgQ++l1DvlOapObTz75pMMDn3jiCWkPDw93Xib5DrDbdDRJvae3dCdf5neX
ku8WLVq02UlVVVWPPMV7770nT/HQQw/t2LEjIiLif//3f+XmHXfckZub29ZD
VqxYIX2effbZKa1lZWUpHR5//HHp8Nxzzx08ePDw4cM///nP5ea///u/u5wd
Q53v/vGPfzh3ePHFFzuV74Q8l/RfsGCBy6eTv+qgQYOKioo6uDS0w9TU/PGn
Ueo3fsBZfrIHAPdlsHz3pz/9ST7x//jHPwZ/6Ve/+pW0zJgxQ65XVFTI/ozc
fPjhhx0eKHs+0u5yigTyHaA4HJHpcDJOIyfjdJuS7ySS9NLyZbs3dOjQW2+9
Vb1l/ulPfypPKiGurUeNGjVKOmzfvt3lvUpeGzhwoP3nM9m0ys22zmK25zvJ
XF//+tcdDtEsKyuT8jqb75QE+v3vf9/5rrlz58pdL7/8cgcXBU2VtaYpy1ud
chuXdk3vogAArhks3w0fPrytI50GtBx+KfsVcuXOO++0Wq32R1ksliFDhki7
y7NdyHeACIvLU4e7qStOMRtCj+jtfLd8+XJZ/vjx49WN6enpsj0sLCxs61HK
IQ1paWku75V25SDP+vp6pcVsNn/jG9+QxtjYWOf+Sr679957f/vb38qVI0eO
qO9ds2aNNL700kvO+U7qfOedd371q18999xz48aNi4uLs98ln0e33XabPEQ+
xdQPsdlsjz76qPOzoJuulta8pRoyd4xX4JWrlXoXBQBwwWD5bsGCBZNaUwZO
efHFF+W68sWykgHDwsLsjwoJCZGWRx55xOUyyXfA2eQi9Ujp432Di6/X6l2U
QfR2vlPGmzp06FBFRcXhw4dlI7lnzx7ZmLfzkKampsGDB995550HDx588803
X3nllenTp58/f17d5+GHH5bFent7WywWq9W6cuVKuXnfffepvzqzs+e7DRs2
yJW///3v6nuff/75QYMGbdq0ySHf7dix42tf+9qAlslrlHltbr31Vn9/f3uH
v/zlL9I4ZcoU9dIiIiKk8dvf/rbL+W7QHSnZ119f8NWUlxOXhJSU1+ldFADA
kcHynTOH8+9ufvlt9ksvvWQ2m2+2fO2snPrh5+fncgnkO/RzCRml6p26MV6B
mQUVehdlHJ3Kd3FxcavbVl5e7vyQl19+WZa/atUq5fc1xbe+9S2Xw0kpEhIS
nI9/kAimHq4kMjLyO9/5jrQ/8MADDz744ICWeWd27drlcoH2fCcVSnJUH6JZ
WFgof4Hf/e53ytBY9nxXVFQ0dOhQafH19ZWkZrPZdu/eLXFPHm4/BPTkyZNK
AeooN3r0aGmcOXNmR/6e6KzIhKvq3/HfW8nv+ADgdvphvqutrR02bNiAljE2
p0+froyc+cwzz7j82vkm+Q79W3peuQQ6++6cBL3EzJ4ctB+dynezZ89u5xB0
l2cQP/XUU8q9jzzyiGTAbdu2KWclSxwrLi52+SzKaJZSmKQkWWZiYqJsBpWW
U6dOKX0kWylHR9jJE7U1YIs938n13//+9+qDJ5ctWyY35Rkd8t37778vNx9/
/HH1cl577TVpHDdunHJTNtrKz4hSjNJSX19/1113SZ2aE0Cgy/afylBHvFlr
I+sbzXoXBQD4iuHznTJS3N69e9WNshPy7LPP2ndLJNy5HBNAQb5Dv5VTVDV2
0Un1oAoxKQxI2MM6le9k67qkbdevX3d+yA9+8ANZ/rBhw+zHZEos+u53vyuN
H3zwgctnycvL2759e0BAgLpx5MiR8pBXXnlFrssGUxkRZdasWYWFhVevXv3o
o4/khUi2cjlFgjrfbd26Va7/7W9/U+6Sze/tt99eVVXlkO+UGPi73/1ujYqy
PX/++eftS54zZ84A1ZicO3bskJu/+c1vOvLHRJetP5SojngLt5xtMnM0LAC4
C8Pnu3ZUVFTExcUVFBS03418h/6pqKx2wuJg9V5ceHy+3kUZUG+ff6cMaTJ9
+nR1o9xUDlPv+HIk7slDHn30Ubnu6+sr10ePHq3uMGnSJGn8+OOPnR+rzncS
5W677TZJgiaTKTs7W9pfffXVm19OXWrPd9/73vfa+pnyoYcesi9ZoujAgQOH
Dh2qjPSivNi2DhNFT7FYrQ6T4i3deb7Z4voYGABAH+vP+a6DyHfoh65XNkxe
FqrefztxhgPeekWn8l1TU1NV21zOPafMdDB37lx1oxLWfvazn7l8FovFUlJS
Ilt7dWN0dLQ85Dvf+Y5cf+GFF+T6vn371B1OnTqlHPfuvEB1vhOvvPKK3Dx8
+LC3t7f9+HmHfPeTn/xEbs6fPz/USVRUlHrhygnUkumuXr0qWU+exWH+BfSG
JrNl4Zaz6k3Eqn0Xra7WQABAHyPfaSLfob+pqjW9/0m4es9tX9hlvYsyrE7l
u48++qid8+8SEhKcH+Lj4yN3/eEPf1A3+vv7S+PUqVNdPouSv+ynuSmU+eYk
TMn1V199Va4vW7ZM3eHAgQPS+Mtf/tJ5gQ75bufOncpBlU8++aT9pzeHfKcc
iin5Tr2c8+fPz5492+F4e4mH0vO//uu//Pz85MrkyZNdvij0uLpG86x1keoN
xaajSS6/ZAAA9CXynSbyHfqVugbzrLWt9tm2Hk/Wuygj61S+W7t27f9rm8vz
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
50/n1xcEbD3BJEcAAA3puTdcDrA5qmWY5aul/JYHoE8ZLN8VFRX98Ic/fOCB
B9RHY1oslttvv10SXHZ2ttVqveuuu+T65cuX7R2ysrKkZciQIdLTeZnkO6OK
v1zy8adRLj+R1x1MKK2o17tAAIDHSMws/Wi9i88UuazccyHvGuflAegjBst3
LiUmJkp8+9rXvtbc3JyZmSnX7777boc+9957r7S7HGiFfGcwVpvtXHKRy/Ps
lLPjCzg7HgDQeTab7UL6tVnrXH+++O06fzmvXO8aARif4fOd2Wx+/vnnJbuN
HDlSbsbExMj14cOHO3R77LHHpD06Otp5CWPb0BfVo0eZmy3h8fkux8b8Itl9
HpdbXKW9FAAA2iYpLy7t2uw2Ut68jWfkXqvNpneZAAzL2PnOYrH89a9/leB2
3333lZWVSUtYWJjcfOqppxx6jhgxQtqDg4OdF0KUM4D6RvPx6Csu57OTyyd7
4/M5cgYA0KNazgJwcX63XKb5nw6Pzzc3MywzgJ5n4HxXX1//8ssvS2obOnSo
/Yc5qU1annzySYfOTzzxhLSHh4c7L4d859FKyuu2BaS86R3k8jy71fs58x0A
0IsSM0tdjs8sl7eXhhyNyqprZIhmAD3JqPlOSn3mmWeUX+5iYmLs7bm5udL4
8MMPO/R/6KGHpN3lFAnkOw+Vnntj+edxo1x9pL6+IGDjkUvXbtTpXSMAoF+4
nFfuciYFubzpHbTzZNqNqga9awRgEIbMd8oompLXHnvssaysLPVdJpNJ2u+8
806r1WpvtFgsQ4YMkfbS0lLnpZHvPEuzxRqVeLWtEx+Uj9Hy6ka9ywQA9DuF
ZTWfHk58fUGAyy8e1xxIyC6s1LtGAB7PePlOwt2jjz4qYe3nP/+5FOzcYfjw
4XJvWFiYvSUkJERaHnnkEZcLJN95ipr6psMRWZOWhrhMdu/4hX5xGAwzlQMA
dFVe3bg7OG3sIhcnDshl/qYzMSlFFtW30ADQKcbLd3/+858lrD333HMNDa4P
dVi+fLl0eOmll5TpzuXfF198UVr8/Pxc9iffub+rpTWbjiaNWRjo8rPy40+j
ziQVNlv4rAQAuIv6RvOxtgf+mrws9HBEVmWtSe8yAXgeg+W76OjoAS0GDRp0
n5O0tDTpU1tbO2zYMOkzYsSI6dOnKyNnPvPMM9Y2visj37ktiWznkou8tpx1
+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
AN0LcIcaKIAC3KGGrhWQlJTk7+8vuSkjI2PNmjXTpk1bvny5EtDkrrVr10qL
BKUOpiTnfHf48GElkdXW1jr3r6ioGD9+/AcffHDt2jV7Y3p6ujzvrFmzpk+f
LrXFx8er+7/11lsOTyHMZvOUKVOkPTY21t5IvnMf/S3fZWZmSpS7++67Hdrv
vfdeaXc50IqHbkCMVIA71EABFOAONVAABehegDvUQAEU4A41dK2A7du3ywMn
TZokOUuuKOlJstLBgweVwx2V9nHjxlVXVysPsbVwuTTnfKecCrd169a2Cqiq
qlLfPHHihPK8EyZMePvtt5Xre/bssXdYuXKltGzcuFH9KIkPStkS9OyN5Dv3
0d/yXUxMjOS44cOHO7Q/9thj0h4dHe38kLEAAABAa13YEV2wYIHy2E2bNpWX
l9fW1tpT1ZYtW6RFEtOHH34oN5WdUqvVKh0kD7pcmkO+kxioxMOwsLCOFFNY
WKgEzCNHjlgsFnkueVJlCVlZWUqf+Ph4uSk1qI/29Pf3H+t0Xh75zn30t3wn
K7zkuKeeesqhfcSIEdIeHBysS1UAAAAwNsluSnr69NNP7WfATZ48WVo2bNhg
/5Fuzpw50pKYmCjXr169KtcXL17scoEO+a6mpkaJiqmpqepuu3bt2vylTS2U
Dlu3bh3bMgyL+vfBtWvXSuO6deuUm5L7pk6dqg5u1dXV48aNkxapTf0s5Dv3
0d/yndQmOe7JJ590aH/iiSekPTw8XI+iAAAAYHBXrlxR8ldRUZHSUlZWprSU
lpYqLU1NTUp6KikpkZtRUVFyff/+/S4X6JDv5LHK0iIjI9Xd3n33XYdfHgMC
AqR90aJFY1uGWzms4uvrK43z5s2zP3zfvn3SIvFNuRkcHCw3vby8HIoh37mP
/pbvcnNzJcc9/PDDDu0PPfSQtLc1RQIAAADQHcrMBerodP78eSVh2VuysrKk
ZfLkycpvatu2bRvbMqPB1q1bZ8yYMXPmTElbkuOUzs7n3ynDnsij1M8rzxL9
JeUEPSXfvffee20devrOO+/YHy5pdGzLqYLKKYFSv3OEvEm+cyf9Ld+ZTCbJ
cXfeead6YFiLxTJkyBBpt395AgAAAPSgjRs3jm2ZENzesmfPnrGth0MJCQmR
lmXLlik3lTAl2Wr8+PE+Pj5KfDt79qxyr3O+W7dunbRIiHM5JvzNL8dLUfLd
Rx99NLZlNJU0J+px5oUyt11oaGhBQYFyOp7s8zssmXznPvpbvhPDhw+XKKc+
81TeStLyyCOP6FgVAAAADGz27NmSgNRHiy1evHhs6wnH1RnQZDIp459IvGpo
aLj55cCV9tEsnfNdUlKS8gPc+vXrnSOe1WpVkpqS71atWiXXd+7cqe4jS5C8
6TAkhXKYqFSrjPPpcnxO8p376If5bvny5ZLmXnrpJWVMV/n3xRdflBY/Pz+9
SwMAAIAB1dfXK8mroqJCaVHGxpSW/Px8ezd1BszMzJTr7733nhLuRHR0tLTs
3btXuemc74QkO+WJVq9enZGRoRzMKTvwCQkJyq+B9nynpLZx48bZf62rrKxU
fiI8cuSIepmyhz9p0qSxLTM7yL9XrlxxfoHkO/fRD/NdbW3tsGHDJNCNGDFi
+vTpysiZzzzzjPqITQAAAKCnpKWlSfyZNm2avUUZG3PChAn2H9pkN1udAZWR
TOxp7mbLSJjtH58pJAwqP8wpxo8fL09qvylpbvfu3fJEN1sCpjLEyltvvbVy
5Up/f/+JEyfKzTlz5jQ3NzvUrwy2qdzr8gWS79xHP8x3N1tGWXn22WcHfEnC
ncuZzQEAAIDuU06sk+Rlb4mNjVWOvbS3KIOr2DOg8kucOr55e3tLS3FxsXLT
Zb5TSM5SDv60mz59uizQPnSnoqmpSeKeEusU8qjCwkLnBdoH/5QX4vIFku/c
R//Md4qKioq4uLiCggK9CwEAAABamTFjhiSm+vp65abFYpkwYcKkSZPsh5y1
k+8UsmcugS4/P1/5wa4tssCSkpLc3Nza2touV0u+cx/9Od8BAAAAbqi6unps
66kTJKZJy5IlS+wtmvmuL5Hv3Icx8l1NTc3EiRP37NnjfFdkZKSPj8+ECRMW
LlwYGBjYzkKk+A8//FD9rmlLVFSUt7f3u+++e+zYMfsZr53qkJqa6uXlJTWv
W7eOQ0MNw7PWQ9kC73QSGhqq+bxwc11eD7u2SmhuzbrfAZ7Is9ZDtodG5W7r
oWZV6iVIVeqhMkVERIS07Nu3z96i5DvZbZArOk7ivHbtWilAOciTfOcODJDv
bDbbK6+8MmDAAPVUjDdbBsZ89dVXB7T2wgsvVFVVuVyOPFw6/OAHP2jnuZqa
ml577TX1Ar/2ta8dPXq04x1utkxVOWjQIHuHwYMH7969uxt/ALgFj1sPf/3r
Xw9w8otf/KIbfwPorzvrYRdWCc2tWfc7wBN53HrI9tCQ3G09bL8q5yU8/fTT
Die7KYOrxMXF2VsWLVo07ktRUVGd+vv0oHnz5tnLOH/+vF5lwM7T8528Gf/5
z38qbwSHd8oHH3wgjcOGDZs1a9a5c+e8vb0ffPBBafnHP/7hvJyTJ0/ecsst
A7T2q+fPny99hgwZsmrVqrS0tC1bttxzzz133XVXampqBzsUFxdLi7zr/f39
k5OTfX195b08cOBAHb91Qfd53HoopEX6TJ48eYqK+rxveJxuroedXSU0t2bd
7wBP5HHrYReeFO7P3dZDzarYHqIHeXS+O3bs2L/+67/av+hQv1NsNtv9998v
jRs2bLA3HjhwQFpuu+02ZeY7O3ld//Iv/6IspJ39annUHXfcIX127drlsMwR
I0Z0pIMYOXKk3Jw5c6a9w+zZs6Vl9OjRXf9DQFeeuB7m5ubKzeHDh3f71cNd
dHM97MIqobk1634HeBxPXA/ZHhqPG66H7VfVwSUAHeTR+e7uu++WNf83v/nN
jBkzHN4pRUVFP/zhDx944AH1r+0Wi+X222+XntnZ2erl/PGPf5TGadOmtb9f
nZqaKh1ks+DQPnTo0FtuuaWsrEyzg9Vqveuuu6SPfR7Jmy1j4So/tdhnP4Fn
8bj1UK4fOnRI+vzlL3/p8quGu+nmetjZVUJza9b9Dl3+U0BHHrceduFJ4f7c
bT3UrIrtIXqWR+e7F198cf/+/Tabzd/f3/mbEGeJiYkDWk5EUk/auGnTJml8
5ZVX5D3V/n51WFiYdHj88cfVjbKoO++8U9ojIiI0O2RmZsoVeYM7LPnee++V
dgYW8FAetx7KzTlz5sj1d999d+7cuZIrR40atWrVKpPJ1JXXD/fQzfWws6uE
5tas+x06+srhTjxuPezCk8L9udt6qFkV20P0LI/Od3Ydef+azebnn39euo0c
OdLeeOXKlaFDh95///2lpaXy9ml/vzo/P186yE5yTU2NvfHkyZPK7+xHjhzR
7BATE+PyF//HHntM2qOjozv9yuFOPGU9lJv/+Z//OcDJD3/4w5ycnG79CeAG
urYednaV0Nyadb9DJ14z3I+nrIddeFJ4EDdZDzWrYnuIntVP8p3FYvnrX/8q
fe677z7l+DSl8ac//al9j1dzv9pms8lbT/r87W9/U77Gkdf7H//xH8obf9eu
XZodlB9WnnrqKYcljxgxQtqDg4O7/6eAjjxlPZSW73znO3L9xz/+8cGDByVd
7tu3T2n59a9/LQ/v2T8L+ljX1sPOrhKaW7Pud+j0K4c78ZT1sAtPCg/iJuuh
ZlVsD9Gz+kO+q6+vf/nll6XD0KFD1d+BzJ07VxrHjBmj3NTcr76pGt7woYce
+v3vf//ggw8OGjRIOVFXGXy+/Q7yl5ErTz75pMNin3jiCWkPDw/vzh8BuvOU
9VA6BAQErFmzpry83L7M5OTkW2+9VTowVJen69p62NlVQnNr1v0OHX7FcEee
sh524UnhQdxkPdSsiu0hepbh853U/MwzzyjfzMTExNjb5R0qb9WBAwceOHAg
uMXGjRulm+wJy3X5s7T1XGFhYbLvLTvP8tinn3768OHDys/6ymlN7XdQRmR6
+OGHHZYpO+F8jhiAp6yHbS1TqXDbtm3d+BtAf11YD9vSziqhuTXrfgfN8uDO
PGU97MKTwoO4yXqoWRXbQ/QsY+c7ZZQkueuxxx7LyspS37V9+/YBbfvZz37W
/jNWVVVVVFTcbDlY7oEHHpCHFBcXa3YwmUwDWk6Mslqt9p4Wi2XIkCHSXlpa
2p0/AnTnKeuh3KytrXXoKX77299Kh82bN3fp1cNddGE9vNn5VUJza9b9Dl17
+XATnrIeduFJ4UHcZD3UrIrtIXqWgfOdvHkfffRRaf/5z38ulTs8RF74pNb+
9re/DWgZvEiur1ixwuUTvf322//93/9dXV1tbwkNDR2gOiVWs4NyYlRYWJi9
Q0hIiLQ88sgj3fgDwC14ynp48eJFuT548OCCggJ7h6ampm9961vSfvbs2e79
GaCzLqyHXVslNLdm3e8Az+Up6yHbQ2Nzn/VQsyq2h+hBBs53f/7zn6Xxueee
a2ho6MhCXJ73dOnSpejo6GvXrik3lRNdfXx8lJuy/6y02CeS1uywfPlyufnS
Sy8pc2jKvy+++KK0+Pn5dfHFw214ynposVi+8Y1vyE2Jgfan+PDDD6Xl3/7t
39SzNsATdWE97OAq4bAeam7Nut8BnstT1kO2h8bmPuuhZlVsD9GDjJrv5E2n
HOE2aNCg+5ykpaU5L8TlfvXTTz8tjfafUWT3WPlW5w9/+IM8nfJlyz//+U97
f80OtbW1w4YNk0bZ354+fbqy1/3MM8+of5GHh/Kg9XDr1q1KYT/+8Y8/+OCD
F154YUDL1D+hoaE9/EdBn+vaetiRVcJhPdTcmnW/AzyXB62HbA8NzH3Ww/ar
6uwSgPYZI9+tXr1a3gVTpkyxt/j5+Q1oW1JSkvNClMklf/SjH6kbf/KTn0jj
J598Ym+R63fffbd94/D3v/9dPctYRzrk5uY+++yz9mLkzcvMlcbgWevh9u3b
v/3tbysdbrnllieeeCIhIaFn/hDQVZfXQ81Vwnk91Nyadb8DPJRnrYdsD43K
rdbDdqrq7BKA9hkj3/Wxpqam1NRUeadXVVV1rYOoqKiIi4tTH90NdEr310Ob
zZafny8bAfWZeujPurZKaG7Nut8B/You6yHbQzjopfWwD5YAkO8AAAAAwBjI
dwAAAABgDOQ7AAAAADAG8h0AAAAAGAP5DgAAAACMgXwHAAAAAMZAvgMAAAAA
YyDfAQAAAIAxkO8AAAAAwBjIdwAAAABgDOQ7AAAAADAG8h0AAAAAGAP5DgAA
AACMgXwHAAAAAMZAvgMAAAAAYyDfAQAAAIAxkO8AAAAAwBjIdwAAAABgDOQ7
AAAAADAG8h0AAAAAGAP5DgAAAACMgXwHAAAAAMZAvgMAAAAAYyDfAQAAAIAx
kO8AAAAAwBjIdwAAAABgDOQ7AAAAADAG8h0AAAAAGAP5DgAAAACMgXwHAAAA
AMbQS/nuAgAAAACgz/VGvgMAAAAA6KIH8x0AAAAAwJ2R7wAAAADAGMh3AAAA
AGAMSr6rqamprq5uaGjQuxwAAAAAQFdIoJNYJ+HOZDJVVlbW19frXREAAAAA
oCsk0Emsk3B38+bNiooKCXpEPAAAAADwOBLlJNBJrLPZbJLvmpqaJOtxFh4A
AAAAeByJchLoJNbZp0RXfs6Tdk7EAwAAAACPIDlOCXdy5WZrSrtyoCYpDwAA
AADclkQ25bBM5Xe6m64oB2qK6urqOgAAAACAW5LIpmQ39WGZLplMJomBNwAA
AAAAbkmZCqH9ZAcAAAAAAAAAAABAX/8fNVQWvA==
     "], {{0, 386.5}, {592., 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{144, 144}],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSizeRaw->{592., 386.5},
   PlotRange->{{0, 592.}, {0, 386.5}}]]], "Output",
 TaggingRules->{"Settings" :> {$CellContext`Mh = 125}},
 CellTags->"Snapshot",
 CellID->1206745619,ExpressionUUID->"86db37b8-b3b6-4ddc-b115-b1685afca0eb"],

Cell[BoxData[
 PaneBox[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
dnXaaaeF8XHjxuWMhxY7+OCDw01DhgzJHj/ppJNyjqaid2Ced9550W/OH8ry
y1/+Mgx+97vfzdw9ehPp//zP/0RXo081nn322Y35qoG9kX99F62v8uUvfzk8
g5WUlIQ/v/rVr7b6+/Ipu/uk95G+A4A8smTJklY7To1UVVW1dOnScPn73/9+
GA9l1Lp1689+9rPhUKd///5h/Nxzz43u8vjjj4er1113Xc6uwpYHHnjgYYcd
tn379n002wb7rkHRmp8DBw6MVtc88cQTczaIlgxtMEWj19puuOGG7MGXXnrp
ib/75je/mem7L37xizt7UTI8RObuy5YtC9/PI444oqKiIlz9P//n/4QNnn/+
+d3/HgC7J8/6btu2bZ/85Cc/8YlPhGfvzODy5cujt1WEZ5g9eNLTd0BLU1Nb
u3pD+YwFa0dOLnhuxNxHXpnZ9/mptz858dbHJ3R/bMKtAyb0fGZS3+enDXj1
/ZfGLhgzddkHH24oKqtMetbQKIMGDQr/xw/B8tGOl67C4cEXvvCFj3YsaRLG
n3nmmY/+/rviW265JbpL9DG9zImWMt56660w/i//8i87e6yysrLSnaisbNQ/
mQb7rry8PHspy0gUUE8++WT0fstw5BO+usyt1dXVbdq0CeM5K6VELr300la7
XCz0Zz/7Wabv/vmf/zlcvu2228bU884772TfK/qWhqZbuXJlaL127dplFoEB
9p0867toaaavfvWrOePf/e53w/jQoUP34ElP3wEtQWl51ZS5hQOHfRDy7bIe
wy/609Dd/e+qu0beNXByKL7Zi9dXbbM+Hs3Utddem/2ezK9//esh8aKPb4Ry
iT7N8aUvfalV1hm9v/GNb7TasVZku7rC4USreqtEZuz683f/9V//1ZjZ1u+7
GTNmRK8/RuvIRbZu3XrssceG8YkTJ4ar0ckdwheV2WD06NFh5KSTTmrwUaLD
p+APf/hDgxucf/75mb6L3ooZ+i57g6lTp958880vvvhi9uDgwYPDlhdccEHf
vn1b7Tgbe2O+ZGAv5VnfzZo1KzyBtG3bNjvfglNPPTXzRLe7T3r6DshjS1eX
Dnlz4S2PvrMHQbeL/y69fVjPZyaNmLx0Y6nX9WheonMBZNaKjFbyjwouWmat
uLj4gAMOCFfXrl370Y6FQQ466KDQgO3ric4R8NxzzzX4QOFQ5PTTT//GTvz2
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
1OBP5gdlXGT4cgB6EhR9wWFTNnbekZQLJVq3CwB0hnyninwHt3W1tn7pzliH
H71nrIsoq7yqddMA4KZl5JaNX9joUoT3px/af5yhEwDgJpDvVJHv4J4uFlVO
WHrMeYS7ejM3rQDQq6rq2jmbHG8l9t4YybWaANBC5DtV5Du4oZCY7GGNB0EY
PisgOrlA63YBQFtZrNZdR9McIt6YuUfi0ou1bhoA6AD5ThX5Dm6lxlS/fJfj
NZmTV4YVllzRumkA0G7OnityGDpBpm2ByVyiAADNI9+pIt/BfZzPK/tiSYjD
Ac8a37jaerPWTQOAdlZaeXXWP086bPGmrg4vKq3WumkA4L7Id6rId3AHFqvV
70SmQ+dyH3kdDo/L1bppaJMvv/zy8yYUFRW117vU1NSsX7/+iwbyQJ6qzlJX
V7dx40ZpxuTJk/38/GTz7lChtLR02bJln3zyiZeXV2hoaH19fVOLKisrUz6R
vLvJ5OIuqvLycqXC8uXLW/Jxjh49KpW9vb2br7By5cqWLA3uTDZ9+0LTh0xv
FPGGzwo4mZCnddMAwE2R71SR76C5y+U1Xhscf8SevDIs/1KV1k1DW91xxx2d
mpCQkNAub5GYmNi7d2/7JT/22GNS2MwssjF/8skn7Wd5/vnnJYXZKoSEhPTs
2dO+wquvvio7CJdLO3/+vK3a/v37nSusW7fO9i4t+USnTp1S6mdmZrqs8OKL
L8qrnp6eLVka3F9adolDv5oyrfaNM9Vx6QIAOCLfqSLfQVsR8bkjvAMcDmz+
6ZdYxzWZhqDku1mzZq1zYp+n2kJJas8999yePXv27dv3+9//Xp7+9re/babP
+QkTJihpKyIiIjQ09JlnnpGnr7/+uvJqSUnJAw88ICVvvvlmUFDQli1blLd4
5513XC7NPt/94x//cK4waNCgm8p3Qtov9WfMmOHy7eRb7dKlS14ep3iM40pN
3eLtpx22hBOWHssurNC6aQDgXsh3qsh30Ioczyxz6kpl1JzAmJRCrZuGdqPk
O4kkt2j5Srbq3Lmz7VRXVlaWPJXCtLQ0l7MkJiZKOLrnnnsqKn48cpak2a1b
N5lL5pWnq1atktkffvjhuro6pUJYWJiU9OjRw+VVmrZ8J4u97777HC7RLC4u
vvPOO2823y1atEjqP/HEE84vfffdd/LSX//61xYuCjoSFH1h2MxGXQfL08Co
LK3bBQBuhHyninwHTSRmXhq3wPF6pDmbokoZu9xYbnW+S05OluXffffd1dU/
dkkhoeynP/2pFEZFRbmcZe7cufLqW2+9ZV/47rvvSqGXl5c8Dg8PnzBhwrZt
22yvSmS7o0FpaanzApV817Nnz1deeUUe+Pr62r+6fPly5fJO53yXkpLyySef
vPTSS88999zIkSOjo6NtL8n+6K677pJZZC9mP4vVav3Vr37l/C4wjJzCignL
HIf+nLM5qoxtIwA0IN+pGt6Y1s2B8dXVm7ccTnI4ehnmef036mYuqINO3ep8
Jx599FElmpnNZovFsnjxYnn6wAMPyGOX9d9++22psHDhQvvCJUuWOIc+hayW
M2fOlFcHDhzocoG2fLd69Wp5IFHR/tUXX3yxS5cua9eudch3mzdvvueee6TQ
w8Oje/fu8uDOO+/08fGxVfj73/8uhePHj7dfWmhoqBT+4he/kA+r9sVAr0x1
5jW+cc7XNkQl5WvdNADQHvlOFZkOt1N2YcXE5aEOxy3ffH88r5iuVIzppvJd
dHT0sqaVlJS4nCssLOyXv/ylvMtDDz308MMPKxdSbt26tal3UU6lbdq0yb5Q
0pYUvvLKK/aFxcXFEtZ69eqlXK5pf37Nni3fSQu7du1qf4lmbm6ufAN/+tOf
Dh48aJ/v8vLyunXrJiWzZ8+WpCYRctu2bRL3ZHbbZaUBAQHKh7KPckOHDpXC
SZMmqXyV0L/IxDzne5OX7z5zpaZO66YBgJbId6rId7g9XI6AMGSa346gVMbz
NbCbyndTpkzp1LTY2FiXc0kO6tu3r33N/v37K3fSufTCCy84d3Tp5+cnhb/7
3e/sC48dO2ZbZr9+/Zrq8NOW7+Txn//8Z/uLJxcsWCBP161b55DvvvjiC3n6
5JNP2i/n/fffl8KRI0cqTy0Wi3JqUj6gUlJdXd29e3f5SpvqVxMG47Jv4XEL
gs6ea7exRQBAd8h3qsh3uA0KLl+ZsS7C4Sjls0VH07Jdn5GBYdxUvpOt69ym
Xbp0yXmWtLQ0pfeSyZMn5+bmXrx48ZtvvpE3lRzU1BAJf/rTn5zvX9u7d68U
vvTSS/aFkqeys7NDQkLeeecd5fpJlxnTPt9t2LDBvqfNgQMH3n333eXl5Q75
TomB0pLldpQLR1988UXbkqdOnWrfJ6dykvGPf/xjS75MGIPyy9jQxp2uXB89
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
JcFlZmZaLJbu3bvL49TUVFuF9PR0KfHw8JCazssk37mzgstVm/2TRngHNHXr
+vGzF+vN3LoOAHBHFVdMO4NTRzaxF/t0UfDB8Ax+nwRwUwyW71w6e/asxLd7
7rmnvr7+3Llz8rhHjx4OdXr27CnlLjtaId+5IYvVeiatcM7mKJc7RJnmbo5K
zLykdTMBAFBnargKpaluNod5+q/xjbtQwEWbAFrE8Pmurq7uxRdflOw2ePBg
eRoZGSmP+/Tp41Ctb9++Uh4eHu68hOFNuB2th5PK6tqD4RlNjSg0dOb1nWBu
caXWzQQA4OZYrNaYlEKvDSeb+unyuzXhoWdy6GkTQPOMne/MZvNbb70lwe2B
Bx4oLr4+kGhwcLA87d+/v0PNAQMGSHlgYKDzQohybiItu2TF7jNDm7hV4eN5
R/aEpFVcoecxAIC+ZRdWrN0fP8zT9f5uhHfAxkOJF4v4JROAawbOd9XV1X/9
618ltXXr1s12Yk7aJiX9+vVzqPzUU09JeUhIiPNyyHfaqqqpDYjM+npZaFO/
Z05beyIiPpeb7AAARiK7P78TmZ8tcn29ikwz1kWEx+XW1nM6D0AjRs130tSB
AwcqZ+4iIyNt5VlZWVL46KOPOtR/5JFHpNzlEAnkO01YrNb4jOKlO2ObOmE3
rKET6az8cvVlAQCgT8pFm83cbz5qduDmw0l5l6q0bikAd2HIfKf0oil5rW/f
vunp6fYvmUwmKb/33nstlv873WM2mz08PKS8qKjIeWnku9usuLR619G08QuD
m9qXfbEk5FBEJv2JAQA6Dtk5bg9K+XjekaZ2jjPXRxw/e5G78wAYL99JuPvV
r34lYe33v/+9NNi5Qp8+feTV4OBgW8mRI0ekpHfv3i4XSL67PWrrzCfic2f9
M7KpPdcHMw4t2RGTkFFsZTwgAECHVG+2RCXle29scl85fNbhtfvjz+WUat1S
AJoxXr773//9Xwlrzz33XE1NjcsKCxculAqvvvqqMty5/Dto0CApmT9/vsv6
5LtbLTO3bP3BhKbGsJPpS5+QA8czyqroOwUAgOsKLl/ZFpg8ek5g07vOY75h
6ZfLXR8LATAwg+W78PDwTg26dOnygJPk5GSpU1VV1atXL6kzYMCACRMmKD1n
Dhw40P6KTXvku1ukpKLmQHjGxOVNdpzyodfhVfvOpl4o0bqlAAC4o7p6c0RC
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
7tz56aef3rdvnxyTd7pxW1PzFZQumx599FGHZcpBOPsRA9DLetjUMgcOHCgV
Nm7c2E7fB7TR1HXCzmz/463YNKnO0vYKqu2HO9PLeqjaKtX2w525yXqo2iq2
h2hfRs13yvVpTXE4022xWHJycpTLMFasWCEV5GC7+XcsLy9XDs5lroceekhm
yc/PV61gMpk6NVyJJ+9oq2k2mz08PKS8qKiozd8EtKSX9VCeVlVVOdQUr7zy
ilRYt25d678CuAGXxzPN/4+3YtOkOkvbK7Txe4C29LIeqraqtV8A3IKbrIeq
rWJ7iPZl1Hw3Y8aMsY0p96gOGjRIHis9ER05cuTdd99dvXq1/aKUK+U2bdrk
8o0+/vjjv/3tbxUVFbaSoKCgTna3xKpWUA74g4ODbRWkGVLSu3fvtn4L0Jpe
1sPY2Fh53LVrV4mTtgq1tbU///nPpTwiIqIdvgtox3k9bMn/eCs2TaqztL0C
9Esv6yHbQ2Nzn/Ww+Va17k2Bphg13zlzvu/Jz8+vU8PlcPKhlJItW7Z0auhY
3tZNblxcXHh4eEFBgfJUudHV29tbeSrHz0qJbSBp1QoLFy6Up6+++mpdXd21
hqGo5VBfSubPn98uXwU0pJf10Gw2//SnP5WnEgNtzfj666+l5N/+7d9sw6xD
p5zXw5b8j7dk0+SwHqrO0vYK0C+9rIdsD43NfdbD5lt1s0sAmteR850cPP/2
t79VfhsZN27c66+/3qVLl3vuuScpKclW5+mnn5YKixYtUp7K4bHys89f/vIX
eTvlx5b33nvPVl+1QlVVVa9evTo1dKg4YcIE5ah74MCB9mfkoVM6Wg83bNjQ
qcFvfvObr7766uWXX5bH8qZBQUHt9nVAIy7XQ9X/8ZZsmhzWQ9VZ2l4B+qWj
9ZDtoYG5z3qo2iq2h2hHxsh3y5Ytk7+C8ePHN1Pn7bffljo7duywLzx//vx/
/ud/drrhscce27dvn32FZ555RsqXLFliK5HHPXr0UOrLcfi7775rP8pYSypk
ZWU9++yztjeVP15GrjQGfa2HmzZtUnrpFHfcccdTTz115syZ1n94uI2m1kPV
/3HVTZPzeqg6S9srQKf0tR6yPTQqt1oPVVvF9hDtxRj5ro0KCwujo6MzMzNb
+CNJbW1tUlKSbArKy8tbV0GUlpbKm9pf/o0O7vavh1arNTs7WzYC9nfqwcBa
8j/eik2T6ixtrwAjcc/1kO1hR6PVengblgCQ7wAAAADAGMh3AAAAAGAM5DsA
AAAAMAbyHQAAAAAYA/kOAAAAAIyBfAcAAAAAxkC+AwAAAABjIN8BAAAAgDGQ
7wAAAADAGMh3AAAAAGAM5DsAAAAAMAbyHQAAAAAYA/kOAAAAAIyBfAcAAAAA
xkC+AwAAAABjIN8BAAAAgDGQ7wAAAADAGMh3AAAAAGAM5DsAAAAAMAbyHQAA
AAAYA/kOAAAAAIyBfAcAAAAAxkC+AwAAAABjIN8BAAAAgDGQ7wAAAADAGMh3
AAAAAGAM5DsAAAAAMAbyHQAAAAAYA/kOAAAAAIyBfAcAAAAAxnCL8t1pAAAA
AMBtdyvyHQAAAABAE+2Y7wAAAAAA7ox8BwAAAADGQL4DAAAAAGNQ8l1lZWVF
RUVNTY3WzQEAAAAAtIYEOol1Eu5MJlNZWVl1dbXWLQIAAAAAtIYEOol1Eu6u
XbtWWloqQY+IBwAAAAC6I1FOAp3EOqvVKvmutrZWsh534QEAAACA7kiUk0An
sc42JLpyOk/KuREPAAAAAHRBcpwS7uTBtcaUcuVCTVIeAAAAALgtiWzKZZnK
ebprrigXaoqKioorAAAAAAC3JJFNyW72l2W6ZDKZJAZeBgAAAAC4JWUohOaT
HQAAAAAAAAAAAABt/X9OGJPH
     "], {{0, 386.5}, {592., 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{144, 144}],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSizeRaw->{592., 386.5},
   PlotRange->{{0, 592.}, {0, 386.5}}]]], "Output",
 TaggingRules->{"Settings" :> {$CellContext`Mh = 150}},
 CellTags->"Snapshot",
 CellID->938056265,ExpressionUUID->"dbde7e77-07d1-4a9d-9c8f-1d2f59de5b6c"],

Cell[BoxData[
 PaneBox[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzs3Ql8VPW9//+wqIBaKbbY1lqo8Ki39VqqLdjlV/vQ3ku1/cutt+19YBcR
RGQRpIAigqhAWGTfUXaUHRFByEYIgRBCAgECCVkgIftGdhImyczw/5ZTvzmZ
JJwsk/nOOfN6PubBY+Y73znnM2fG8bxzzvl+vz/sjf8d0dHPz29iF/HP/w6d
/PSECUOn/Km7ePCXcRNHvTbu1eHPjZv06muvTvj5sE6i8Q7xz6bOfn7/un+z
gerq6oqKimsAAAAAAK8kIpsIbg3TnEuyK7mlrKzsOgAAAADAK4nIpmW3plJe
ZWWleLa8vLzylhsAAAAAAK+kpTYR30SIE3caDXciBlZVVamuFAAAAABgTMQ3
EeJcIp52WibhDgAAAADMRUY8eaJmcXGxdlqm6tIAAAAAAC2jnagpYp0Idzab
TTucp7ooAAAAAEBraBfciXAngl5ZWRlnZgIAAACASYlAJ2KdCHfXrl27fv26
6nIAAAAAAK0nYp02NR75DgAAAABMjXwHAAAAANZAvgMAAAAAayDfAQAAAIA1
kO8AAAAAwBrIdwAAAABgDeQ7AAAAALAG8h0AAAAAWAP5DgAAAACsgXwHAAAA
AEqk3hJ9S3B9WqPWofkLJN8BAAAAgBLkOwAAAAAwu/hbvmwerXNzFku+AwAA
AAAPI98BAAAAgNlpp1w2DHGl9TXs0JxzNcl3AAAAAOAx5DsAAAAAsAZt4JRW
5DvthbdfOPkOAAAAADyGfAcAAAAA1qBNf9BopmuK1ll74e0XTr4DAAAAAI8h
3wEAAACANZDvAAAAAMAayHcAAAAAYA3kOwAAAACwBsbPBAAAAABrIN8BAAAA
gDWk3tKKfKe98PYLJ98BAAAAgMeQ7wAAAADASuJvaRjiGqV1bs5iyXcAAAAA
4GHkOwAAAACwEu2US23glOD6tMbmnJOpR74DAAAAACXIdwAAAACARpHvAAAA
AMAayHcAAAAAYA3kOwAAAACwBvIdAAAAAFgD+Q4AAAAArIF8BwAAAADWQL4D
AAAAAGsg3wEAAACANVg+31XdlurqAAAAAMBtrJrv9CGusgkEPQAAAABWYr18
5xLrxPsqv6VMR2sRT7kEPdW1AwAAAEDrWSzfyWSnxbrS0tLCwsL8/Pzc3Nzs
7OzMW8Qd8VA0iqdEBxn0iHgAAAAATM1K+U6f7IqLi0WCy8rKysnJEe9OtNhs
Nsct4o54KBrFU6KD6CY661Oe6vcBAAAAAK1hmXwnw11paamIbCK7FRYWisab
tyU6iG6is3iJeCERDwAAAIB5WSPfaeGuoqKipKREhLW8vDzx8PbJTk90Fi8R
LxQvFwsh4gEAAAAwIwvkOxnuioqKsrOzCwsLm5/s9MQLxcvFQoh4AAAAAMzI
7PlOhrvi4uKsrCzxRloX7jTi5WIhYlFEPAAAAACmY+p8p414qV1z15Yjdw2P
4mnX4jGiJgAAAAATMXu+q6ysLC8vz8vLy83NbXu404hFiQWKxXIID4DZlZSU
REREBAUFZWRkNNUnKSkpICAgJibGjP8jAAAAeubNd9rBNe2yu6ysLHHHXflO
LEosULsQj0N4ALzfli1b7rvvPj8/v8jISH37vn37evbs6XdLp06dJk6c6PLC
srKyF154we8rP/jBD06fPu3BwgEAgJuZOt/Jg3f5+fnuCncasUAO4QFoJ182
z8Fbbr+ogoKCv//97zKgRUREyKfS0tJ69OjRpUuXIUOGTJs27aGHHhIdNm3a
pH/55MmTReN//ud/+vv7Dxo0qGPHjo8++qgIfe3ytgEAQPtze74LDw8fOnTo
ypUrz58/P2rUqJ/+9Kdi1yIqKko8dfLkyTFjxoiWl19+OSgoqI0r0q68Kykp
yczMFHfcm+/EAsVixcK1q/DcsWEA4N/cmO8eeeQREdBeeOGFv/zlLy75TuQ1
0bJixQrt4eXLl7t27fr1r389PT1da4mMjBSBrlevXqWlpVrL6NGjxUtE6HP/
ewYAAB7h9nz35ptvit2DJ598snv37uLOnXfeKf4V+w+bNm3q0qWLuH/XXXeJ
f++5556ioqJWLF+krby8vLS0tCtXrqSkpMTFxSUkJLg33GnEYkVETU5OvnzL
FQC4rdSvXL16VfxM3eZPQw2jXNlXGj51+5/Enj17rl69Wtx59dVX9flO/KR3
7ty5b9+++t/2SZMmiT7btm3THr777rvi4fr162WHrKysbt26/ehHP2rFjzMA
APAGbs93Tz/9tHaa0LBhw0QsKigo6NGjh9YyfPhw0SJ2YH74wx+Khzt37mzF
8sVek9h9ErtSYlFJSUlnz54VWa898p1YbGxsbGJiokiR5DsAhlLry8/Pb+p3
zI35TqxXu+OS7y5evCge/u1vf9N33rt3r2h8//33tYeDBw8WDy9duqTv88QT
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
d9xxx/bt21vUoaHAwMBvfvObfg18/etf37VrVzNrFnlZe9WVK1ca7fDUU0+J
Z8U+WDMXCKClLJnvJk6c2KFDB/m7JO5PmjRJ36FFP3rkOwCNOpecLyPAyHlB
tXaH6orgNgXF9easLypjznqr+d///V9tH2Dw4MENn42IiJA7CXFxcZ4vTygt
LX3ppZe0GlzyXU5OTvfu3cXey/Llyy9cuDBv3jyxV9OxY8fY2Nhmdmho3759
ooNY1w9/+MO1a9eeOnUqOTn5s88+GzhwoFbDgQMHmln5Y489JvrPnDmz4VOp
qalir0wUk52d3ewtAaBlrJfv9u7dK35V7rrrrnfffffkyZPTp0/v0qWLaNm9
e7fWoaU/euQ7AI1as/es3P9fv1/NHiDaz/vrIuTneyiy8SMRMK+HHnpIiy0/
+clPXJ5yOp0DBgzQnr377rvtdrvnyxNh6sEHH5QZ0yXfiUwqGt955x3ZMm3a
NNEybNiwZnZwUVRU1LNnT9HhxRdfFPty+qfE1hg9erR46le/+lUzi1+yZIno
/8gjjzR86v333xdPPf/8881cFIBWsF6+0/7YNWTIENkifs20nyztYUt/9Mh3
ABqqrrG/OjtQ7v8npF1TXRHcLDAqVX6+0z+OUF0O3Ck3N1f7U7DIIN26dRMR
Rv/sp59+Kp7t06eP+PfXv/61kgrvu+8+sfZnnnlmypQpLvnO4XDce++9ojEx
MVE2pqSkiBbxXkQaNezQcHVLly4Vz4pEWV5e3vDZwsJC8cLvfe97OTk5svHS
pUuiqt/85je/+MUvRo4cGRMTI58Su4t33nmnWKDLBTJiOz/88MOi/YsvvmjV
VgHQLNbLd9oJ8yKyyZYFCxaIlueee+5mM34VGy6QfAegoaiL2XLn/41Fhx31
9w9hASXlN4boTtHMK7quuiK4zf79+8X/9x977LHf/va34s7Vq3VD6FRVVX33
u9/V/lAs/p0wYYKSCgcOHLhnzx4RiJYvX+6S75KTk0WLCIAuL+nRo4doT0pK
MuzQcHX/7//9v0av8pPy8/P1D0UE7tq1q7bvpO1Wde7cWZQqO2g7Y+PHj9e/
Kjw8XDR+5zvfUXJIFPAd1st3GzduFL8evXr1ysjIuHnrbMz/+I//EC1Lly69
2YxfxYYLJN8BaGjhthi55789OEF1OWgXczaflJ/yvvAU1eXAbbTzdl566SXx
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
oCsOB++48g5GVlnTPHFRgLzNx2eUa10RAEDXyHeqyHeAfjS3mScv5+AdPMuW
Y8nyNj9/a4zW5QAAdI18p4p8B+jH4fDsWwfvVnDwDh6h7FrTxIW3DuEl51Rq
XREAQL/Id6rId4BONLa0v7X0jNzLPRWbr3VFwADZcDhR3vI/2xardTkAAP0i
36ki3wE6cSAkU+7ivrMq1GS2aF1RH5g1a9YHXaiqquqTp2hpadnnjIvrP3z4
8Jtvvtna2mrXLlp27dr14U3ijuMCsrq6OukViSVNJpPjAvX19dICmzZtcqWk
iIgIsfDy5ctvv8CWLVtcWZtbKK5s+IfiEF5iNofwAADOke9Uke8APahrMr3h
fWuu5zMXrmhdUd+44447BnUhLS2tT57i7NmzTtcfFham+rtif/6Nb3xDLFxb
W6tsT09Pf+yxx5Rr+/73vy8ana7kypUr8mInT550XGDnzp3ST3/+85+78ori
4+Ol5QsKCpwu8OKLL4qfent7u7I2d7Hu4CV5+5+3OZqBNAEATpHvVJHvAD3Y
dSpV7tzOWB3W3mGEg3c3vs53y5Yt2+mgvr6+T55i7dq14inGjh07s7O8PJXR
ac6cOTNixAgpSdnluyeffFI0Pv/888eOHTt+/PjPfvYz8fCnP/2p09ChzHd/
//vfHRd4+eWXu5XvBPFcYvnFixc7fTrxVx0yZEhZmaFmi7ta1ai8Co+58AAA
TpHvVJHvAM2VVTcph4gPTyjSuqI+I+U7EUn67ykmTpwonmLPnj2u/4pIc6+9
9pry8Jwy30l5bfDgwfLhs8LCQvFQNObk5DiuTc53InPde++9dqdoVldX33nn
nd3Nd1Jo/eEPf+j4o88++0z86He/+52rr9Z9KAfSnOUXabFata4IAKA75DtV
5DtAc6sPJCi6tWeN1K0dgHz31FNPiafIzMx0/VfWrFkjfmXYsGHbt2//zne+
Y5fvxKpEyze/+c2WlhapxWw2f/vb3xaNcXFxjmuT8t0DDzzw61//Wtw5ceKE
8qebNm0SjePGjXPMd1lZWe++++4vfvGL559/fvLkyQkJCfKPxOeRdOKo+BRT
/orNZnv88ccdn8UYKmuaX1sUKL8XIhOLta4IAKA75DtV5DtAW1lFNcqRJRIy
K7SuqC/1d75rb28fOnTo3XfffezYsbfeemv8+PGzZ8+Oj4+//W/t3Llz+vTp
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
UAMFUIAeaqAACtC8AD3UQAEUoIcaNC/gxtf5Ljo6urq62mQySY3h4eFS1Jo3
b15UVFRBQUFFRYXo8K9cuVJqF42urNxms82ZM0cs7/QgiAh90tqqqqrq6upE
AcuXLyff6YQH5rsJEyYMGjRo7ty5csv8+fNFy6RJk5wur/n7lwL0UAMFUIAe
aqAACtC8AD3UQAEUoIcaNC/gxtf5Li0tTW65du3atGnTROPGjRvlxCexWq07
d+4UPxL9XhcP4Z0+fVos//7771ssFrsf7du3T/xo1apVcsvatWvJdzrhaflO
bM/Dhw8XaU55lnJeXp5oGTZsmOPWe0MH718K0EMNFEABeqiBAihA8wL0UAMF
UIAeauhZAampqX5+fiI35eTkbNq0adasWWvWrJECmvjR5s2bRYsISi6mJMd8
d/z4cSmRNTU1OS5fW1s7ZcqUjz76qKKiQm7MysoSzztv3rzZs2eL2hITE5XL
v/3223ZPIZjN5pkzZ4r2uLg4uZF8px+elu9yc3NFlLvvvvvs2h944AHR7nSg
FTfdgRipAD3UQAEUoIcaKIACNC9ADzVQAAXooYaeFbBnzx7xi9OnTxc5S9yR
0pPISseOHZNOd5TaJ0+e3NDQIP2K7Sana3PMd9KlcLt37+6qgPr6euXDgIAA
6XmnTp36zjvvSPcPHjwoL7Bu3TrRsn37duVvifgglS2CntxIvtMPT8t3Fy9e
FDlu1KhRdu1PPPGEaI+NjXX8FS8AAACgsx50RBcvXiz97o4dO2pqapqamuRU
tWvXLtEiEtPHH38sHkqdUqvVKhYQedDp2uzynYiBUjwMDw93pZjS0lIpYJ44
ccJisYjnEk8qrSEvL09aJjExUTwUNSjP9vTz8/NyuC6PfKcfnpbvxAYvctwz
zzxj1z569GjRHhISoklVAAAAMDaR3aT09Pnnn8tXwM2YMUO0bNu2TT5It2DB
AtGSkpIi7l+9elXcX7FihdMV2uW7xsZGKSpmZGQoF9u/f//Or+24SVpg9+7d
XjeHYVEeH9y8ebNo3LJli/RQ5L73339fGdwaGhomT54sWkRtymch3+mHp+U7
UZvIcU8//bRd+1NPPSXaIyMjtSgKAAAABpefny/lr7KyMqmlurpaaqmqqpJa
2tvbpfRUWVkpHsbExIj7R44ccbpCu3wnfldaW3R0tHKx9957z+7IY2BgoGhf
tmyZ183hVo4r+Pj4iMaFCxfKv3748GHRIuKb9DAkJEQ89Pb2tiuGfKcfnpbv
CgsLRY579NFH7dpHjhwp2ruaIgEAAADoDWnmAmV0io+PlxKW3JKXlydaZsyY
IR1T8/f397o5o8Hu3bvnzJkzd+5ckbZEjpMWdrz+Thr2RPyW8nnFs8R+TbpA
T8p3H3zwQVennr777rvyr4s06nXzUkHpkkBRv2OEvEG+0xNPy3cmk0nkuLvv
vls5MKzFYhk2bJhol788AQAAAPrQ9u3bvW5OCC63HDx40KvzcCihoaGiZfXq
1dJDKUyJbDVlypTly5dL8e38+fPSTx3z3ZYtW0SLCHFOx4S/8fV4KVK+++ST
T7xujqaS6UA5zrwgzW0XFhZWUlIiXY4n+vx2aybf6Yen5Tth1KhRIsoprzwV
byXR8thjj2lYFQAAAAxs/vz5IgEpzxZbsWKFV+cJx5UZ0GQySeOfiHjV2tp6
4+uBK+XRLB3zXWpqqnQAbuvWrY4Rz2q1SklNyncbNmwQ9/ft26dcRqxB5E27
ISmk00RFtdI4n07H5yTf6YcH5rs1a9aINDdu3DhpTFfx78svvyxafH19tS4N
AAAABtTS0iIlr9raWqlFGhtTtBQXF8uLKTNgbm6uuP/BBx9I4U6IjY0VLYcO
HZIeOuY7QSQ76Yk2btyYk5MjncwpOvDJycnS0UA530mpbfLkyfLRurq6OukQ
4YkTJ5TrFD386dOne92c2UH8m5+f7/gCyXf64YH5rqmpacSIESLQjR49evbs
2dLImWPGjFGesQkAAAD0lczMTBF/Zs2aJbdIY2NOnTpVPtAmutnKDCiNZCKn
uRs3R8K8/fmZggiD0oE5yZQpU8STyg9Fmjtw4IB4ohs3A6Y0xMrbb7+9bt06
Pz+/adOmiYcLFizo6Oiwq18abFP6qdMXSL7TDw/MdzdujrIyduzYQV8T4c7p
zOYAAABA70kX1onkJbfExcVJ517KLdLgKnIGlI7EKePb0qVLRUt5ebn00Gm+
k4icJZ38KZs9e7ZYoTx0p6S9vV3EPSnWScRvlZaWOq5QHvxTvBCnL5B8px+e
me8ktbW1CQkJJSUlWhcCAAAAdDJnzhyRmFpaWqSHFotl6tSp06dPl085u02+
k4ieuQh0xcXF0gG7rogVVlZWFhYWNjU19bha8p1+eHK+AwAAAHSooaHBq/PU
CSKmiZaVK1fKLar5biCR7/TDYPmupqZm586dM2fOXL16dVenXMbExCxduvS9
9947deqUfL1qb9apuoDZbPb39//ggw/mzZsXEBDQ5jCiLAym99tMn6+zpaVl
nzPMCWI8jY2N06ZNO3jwoOOPMjIyvL29xU+3bNnidCtSXaA/1tmDJ4X+udd2
KHqkjrvHsLAwV54aeqa37bBbVQUFBSmHyhSioqJEy+HDh+UWKd99/PHH4o6G
kzhv3rxZFCCd5Em+0wMj5bvIyMjvfe97gxR+9atfyVNA3rh5jvFrr72mXOCu
u+46efJkb9apuoD4mzz55JPKBX7+85/X19f3x18AetD7baY/1nn27NlBztCB
MRibzTZ+/HjxP6ucmlbi7+8/ZMgQ+b9+6NChBw4c6NYCjnq/zh48KfTP7bbD
X/7yl467R/Fh3Yu/AbSnt+2wu1U9++yzdhe7SYOrJCQkyC3Lli2b/LWYmBhX
/iz9YeHChXIZ8fHxWpUBmWHyXU1NzYMPPjjoZrdWFCA2/v/5n/8RD9944w15
mUWLFomWYcOGbdiwITMzc9euXffff//w4cMzMjJ6tk5XnnT27NnSx8T58+ej
oqKee+458fCVV17p178GtNIn20x/rHPt2rWiZezYsTM7y8vL69c/CAZSfX39
P/7xD6ljYNdzKC8vF7s70d/w8/NLS0vz8fERvYjBgwfL3/eqLuCo9+vswZNC
/9xuOxTEAqLaGTNmKHePynEw4Hb0th32virAdYbJd1J2+/GPfywP6Gq1Wp96
6inRGBAQcOPmSZLf+ta3xMP9+/fLv3X06NFBNydK6Nk6VRdIT08Xb8+77rqr
oaFBWkC8te+55x7xhi0sLOyPvwO01fttpp/WOXHiRPFwz549/fbSobFTp079
67/+q/zFr13PYcKECaJx7ty5csv8+fNFy6RJk1xcwFHv19mDJ4XOueN2KD6O
xcNRo0b1/GVDZ3S4Hfa+KsB1hsl3f/zjH8W7YOPGjcrGlStXisZp06bduHlK
s7j/4IMP2v2iSFt33HFHdXV1D9apuoB0/y9/+YtygVdffVU0Ll26tOevFnrV
+22mn9Ypxb3MzMxev0To1H333Scdw50zZ45dz0Hk/eHDh4tGeQbbGzdH4ZbO
Z7BYLKoLOD5d79fZgyeF/rnddigefvnll+Lhn/70p779U0BDetsOe19VX/xV
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
oCldbYe9rwpwkZHynaSysjIhIaGgoKCrbzza29szMjLErru+vr6v1qm6gGjP
ysq6fPlyS0uLi08Kt9b7baY/1inev2IjFJ8XHLbzWLW1tWIjUV5q1N0F+mOd
PXhSuDUdbodir1hcXCw6RVw94Tk02Q4HYA2A8fIdAAAAAHgm8h0AAAAAGAP5
DgAAAACMgXwHAAAAAMZAvgMAAAAAYyDfAQAAAIAxkO8AAAAAwBjIdwAAAABg
DOQ7AAAAADAG8h0AAAAAGAP5DgAAAACMgXwHAAAAAMZAvgMAAAAAYyDfAQAA
AIAxkO8AAAAAwBjIdwAAAABgDOQ7AAAAADAG8h0AAAAAGAP5DgAAAACMgXwH
AAAAAMZAvgMAAAAAYyDfAQAAAIAxkO8AAAAAwBjIdwAAAABgDOQ7AAAAADAG
8h0AAAAAGAP5DgAAAACMgXwHAAAAAMZAvgMAAAAAYyDfAQAAAIAx9FO+uwQA
AAAAGHD9ke8AAAAAAJrow3wHAAAAANAz8h0AAAAAGAP5DgAAAACMQcp3jY2N
DQ0Nra2tWpcDAAAAAOgJEehErBPhzmQy1dXVtbS0aF0RAAAAAKAnRKATsU6E
uxs3btTW1oqgR8QDAAAAALcjopwIdCLW2Ww2ke/a29tF1uMqPAAAAABwOyLK
iUAnYp08Jbp0OE+0cyEeAAAAALgFkeOkcCfu3OhMapdO1CTlAQAAAIBuicgm
nZYpHae74Yx0oqbQ0NDQDAAAAADQJRHZpOymPC3TKZPJJGLgdQAAAACALklT
Idw+2QEAAAAAAAAAAADQ1v8P8Q0WSQ==
     "], {{0, 386.5}, {592., 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{144, 144}],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSizeRaw->{592., 386.5},
   PlotRange->{{0, 592.}, {0, 386.5}}]]], "Output",
 TaggingRules->{"Settings" :> {$CellContext`Mh = 100}},
 CellTags->"Snapshot",
 CellID->1234193228,ExpressionUUID->"5de388c0-a437-40cb-8fdc-1792d955ab36"]
}, Closed]],

Cell[CellGroupData[{

Cell["Source & Additional Information", "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Source & Additional Information"},
 CellTags->"SourceInformationGroup",
 CellID->62407265,ExpressionUUID->"92eaa833-77a2-4f01-a6e4-574b2a10fa19"],

Cell[CellGroupData[{

Cell[TextData[{
 "Contributed By",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"AuthorNames", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "'John Smith' for single authors; 'John Smith, Robert Ford, and \
Jane Doe' for multiple authors. To credit people other than Demonstrations \
authors, please see the 'Details & Citations' section."}], "MoreInfoText"], 
        Background -> GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> 
        GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoAuthorNames"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "19b07888-9e37-4fc7-8a6f-30f29e25a3da"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "AuthorNames"},
 DefaultNewCellStyle->"Item",
 CellTags->{"AuthorNames", "Contributed By", "TemplateCellGroup"},
 CellID->255368948,ExpressionUUID->"56bf5db5-b8c0-4e50-9a10-ec1ee88c7c59"],

Cell["Caique Ronqui", "Item",
 TaggingRules->{},
 CellID->67106448,ExpressionUUID->"a99a35e3-f598-4280-9bdb-74870b695b5c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Details & Citations",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"DetailCells", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "This optional section is for a more detailed description of the \
Demonstration than the caption, but it should still be as concise as \
possible. This section may also include numbered snapshot captions (e.g., \
Snapshot 1: phrase or sentence without an initial capital and without a \
period, unless more than one sentence is used) and explanations of the ", 
           StyleBox["Manipulate", "MRbig"], 
           " control labels. Define any symbols undefined so far. Include \
only text in this section \[LongDash] no code, graphics, etc. Do not change \
the cell style or copy cells from other sections. \n\nA book reference uses \
this format: \n   L. D. Schmidt, ", 
           StyleBox[
           "The Engineering of Chemical Reactions", FontSlant -> "Italic"], 
           ", New York: Oxford University Press, 1998. \n\nAn article \
reference uses this format: \n   D. Pearson, \"A Polynomial-Time Algorithm \
for the Change-Making Problem,\" ", 
           StyleBox["Operations Research Letters", FontSlant -> "Italic"], 
           ", ", 
           StyleBox["33", FontWeight -> "Bold"], 
           "(3), 2005 pp. 231\[Dash]234."}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoDetailCells"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "2ca124c8-bf0a-4879-8d7b-51416c56cad8"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "DetailCells"},
 DefaultNewCellStyle->"Text",
 CellTags->{
  "AuthorNotes", "DetailCells", "Details & Citations", "TemplateCellGroup"},
 CellID->441931514,ExpressionUUID->"7d4f3392-4fd1-4c6a-8bcc-3905ef434063"],

Cell["Details, references or citation information", "Text",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->111711384,ExpressionUUID->"fb976067-70a4-46b9-ba31-cb61e71fdd21"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "References",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"ReferenceCells", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "This optional section is for a more detailed description of the \
Demonstration than the caption, but it should still be as concise as \
possible. This section may also include numbered snapshot captions (e.g., \
Snapshot 1: phrase or sentence without an initial capital and without a \
period, unless more than one sentence is used) and explanations of the ", 
           StyleBox["Manipulate", "MRbig"], 
           " control labels. Define any symbols undefined so far. Include \
only text in this section \[LongDash] no code, graphics, etc. Do not change \
the cell style or copy cells from other sections. \n\nA book reference uses \
this format: \n   L. D. Schmidt, ", 
           StyleBox[
           "The Engineering of Chemical Reactions", FontSlant -> "Italic"], 
           ", New York: Oxford University Press, 1998. \n\nAn article \
reference uses this format: \n   D. Pearson, \"A Polynomial-Time Algorithm \
for the Change-Making Problem,\" ", 
           StyleBox["Operations Research Letters", FontSlant -> "Italic"], 
           ", ", 
           StyleBox["33", FontWeight -> "Bold"], 
           "(3), 2005 pp. 231\[Dash]234."}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoReferenceCells"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "305526c6-ffbf-4ae9-a708-e60dbc54ce2c"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "ReferenceCells"},
 DefaultNewCellStyle->"Text",
 CellTags->{"ReferenceCells", "References", "TemplateCellGroup"},
 CellID->592881655,ExpressionUUID->"ac3556f7-cc4b-4eb5-8b39-eb80ed19f14e"],

Cell["References for demonstration.", "Text",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->423796343,ExpressionUUID->"52883aa9-e14d-45c8-9d5e-248e3bf09f1d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Submission Notes",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"SubmissionNotes", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Enter any additional information that you would like to \
communicate to the reviewer here. This section will not be included in the \
published resource.", 
           StyleBox["\n", FontSize -> 4]}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoSubmissionNotes"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "05f1651e-a461-46d6-9847-3e58bbd43a5d"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "SubmissionNotes"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Submission Notes", "SubmissionNotes", "TemplateCellGroup"},
 CellID->797097429,ExpressionUUID->"8d0444a3-8342-4162-9e92-22f1b7221c18"],

Cell["Additional information for the reviewer.", "Text",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->820829112,ExpressionUUID->"b261e028-15f2-4441-bb92-a57ea8f53f8d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Keywords",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Keywords", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List relevant terms (e.g. functional areas, algorithm names, related \
concepts) that should be used to include the demonstration in search \
results.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20,
         FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoKeywords"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "c1e95884-72f2-4c96-bf66-2b6dbd5a1046"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Keywords"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Keywords", "TemplateCellGroup"},
 CellID->938146184,ExpressionUUID->"e3cce7ef-c4c5-4389-bd49-8a186662675e"],

Cell["keyword 1", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->12473014,ExpressionUUID->"8876a9af-babe-4aa2-a657-e937791a3571"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Categories",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Categories", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Choose categories that best represent your demonstration. These \
choices determine which pages your demonstration will appear on when \
published to the repository.", "MoreInfoText"], Background -> GrayLevel[0.95],
         FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 
        5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCategories"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "5f2aaa2f-2e52-43eb-bb2e-189afa11f045"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Categories"},
 CellTags->{"Categories", "DemoCategories", "TemplateCellGroup"},
 CellID->845692503,ExpressionUUID->"c60af39c-3370-41d9-b523-92a1dc0c8539"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Mathematics"}], "\" \"", 
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "School Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"School Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"School Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Elementary School K-2 Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Elementary School K-2 Mathematics\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Elementary School 3-5 Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Elementary School 3-5 Mathematics\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Middle School Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Middle School Mathematics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"High School Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"High School Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Algebra I"}], 
                    "\" \"", 
                    StyleBox["\"High School Algebra I\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Geometry"}], 
                    "\" \"", 
                    StyleBox["\"High School Geometry\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, 
                    "High School Algebra II and Trigonometry"}], "\" \"", 
                    StyleBox[
                    "\"High School Algebra II and Trigonometry\"", FontSize -> 
                    12, Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Precalculus"}], 
                    "\" \"", 
                    StyleBox["\"High School Precalculus\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, 
                    "High School Calculus and Analytic Geometry"}], "\" \"", 
                    StyleBox[
                    "\"High School Calculus and Analytic Geometry\"", 
                    FontSize -> 12, Editable -> False, StripOnInput -> 
                    False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, 
                    "High School Advanced Calculus and Linear Algebra"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Advanced Calculus and Linear Algebra\"", 
                    FontSize -> 12, Editable -> False, StripOnInput -> 
                    False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "High School Finite Mathematics"}], 
                    "\" \"", 
                    StyleBox["\"High School Finite Mathematics\"", FontSize -> 
                    12, Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Statistics"}], 
                    "\" \"", 
                    StyleBox["\"High School Statistics\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{
                    Left}}}, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Area"}], "\" \"", 
                    StyleBox[
                    "\"Area\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Equations"}], "\" \"", 
                    StyleBox[
                    "\"Equations\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Exponential Functions"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Exponential Functions\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Exponents and Logarithms"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Exponents and Logarithms\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Hyperbolic Functions"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Hyperbolic Functions\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Identities"}], "\" \"", 
                    StyleBox[
                    "\"Identities\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Inequalities"}], "\" \"", 
                    StyleBox[
                    "\"Inequalities\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Integers"}], "\" \"", 
                    StyleBox[
                    "\"Integers\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Irrational Numbers"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Irrational Numbers\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Number Bases"}], "\" \"", 
                    StyleBox[
                    "\"Number Bases\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Parametric Equations"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Parametric Equations\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Perimeter"}], "\" \"", 
                    StyleBox[
                    "\"Perimeter\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Pi"}], "\" \"", 
                    StyleBox[
                    "\"Pi\"", FontSize -> 12, Editable -> False, StripOnInput -> 
                    False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Polynomials"}], "\" \"", 
                    StyleBox[
                    "\"Polynomials\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Pre-Algebra"}], "\" \"", 
                    StyleBox[
                    "\"Pre-Algebra\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Prime Numbers"}], "\" \"", 
                    StyleBox[
                    "\"Prime Numbers\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Rational Numbers"}], "\" \"", 
                    
                    StyleBox[
                    "\"Rational Numbers\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Real Numbers"}], "\" \"", 
                    StyleBox[
                    "\"Real Numbers\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Trigonometric Functions"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Trigonometric Functions\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Volume"}], "\" \"", 
                    StyleBox[
                    "\"Volume\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Algebra"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Algebra\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Algebra\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Algebra I"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Algebra I\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, 
                    "High School Algebra II and Trigonometry"}], "\" \"", 
                    StyleBox[
                    "\"High School Algebra II and Trigonometry\"", FontSize -> 
                    12, Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Precalculus"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Precalculus\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Complex Numbers"}], "\" \"", 
                    StyleBox[
                    "\"Complex Numbers\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Linear Algebra"}], "\" \"", 
                    StyleBox[
                    "\"Linear Algebra\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Polynomials"}], "\" \"", 
                    StyleBox[
                    "\"Polynomials\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Quadratic Forms"}], "\" \"", 
                    StyleBox[
                    "\"Quadratic Forms\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Rational Functions"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Rational Functions\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Vector Algebra"}], "\" \"", 
                    StyleBox[
                    "\"Vector Algebra\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Applied Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Applied Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Applied Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Approximation Methods"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Approximation Methods\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Linear Algebra"}], "\" \"", 
                    StyleBox[
                    "\"Linear Algebra\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Numerical Analysis"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Numerical Analysis\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Operations Research"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Operations Research\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Optimization"}], "\" \"", 
                    StyleBox[
                    "\"Optimization\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Special Functions"}], "\" \"", 
                    StyleBox[
                    "\"Special Functions\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Wavelets"}], "\" \"", 
                    StyleBox[
                    "\"Wavelets\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Calculus & Analysis"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Calculus & Analysis\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Calculus & Analysis\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, 
                    "High School Calculus and Analytic Geometry"}], "\" \"", 
                    StyleBox[
                    "\"High School Calculus and Analytic Geometry\"", 
                    FontSize -> 12, Editable -> False, StripOnInput -> 
                    False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, 
                    "High School Advanced Calculus and Linear Algebra"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Advanced Calculus and Linear Algebra\"", 
                    FontSize -> 12, Editable -> False, StripOnInput -> 
                    False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Calculus"}], "\" \"", 
                    StyleBox[
                    "\"Calculus\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Complex Analysis"}], "\" \"", 
                    
                    StyleBox[
                    "\"Complex Analysis\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Derivatives"}], "\" \"", 
                    StyleBox[
                    "\"Derivatives\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Differential Equations"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Differential Equations\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Harmonic Analysis"}], "\" \"", 
                    StyleBox[
                    "\"Harmonic Analysis\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Integrals"}], "\" \"", 
                    StyleBox[
                    "\"Integrals\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Multivariable Calculus"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Multivariable Calculus\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Real Analysis"}], "\" \"", 
                    StyleBox[
                    "\"Real Analysis\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Related Rates"}], "\" \"", 
                    StyleBox[
                    "\"Related Rates\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Riemann Surfaces"}], "\" \"", 
                    
                    StyleBox[
                    "\"Riemann Surfaces\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Series"}], "\" \"", 
                    StyleBox[
                    "\"Series\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Special Functions"}], "\" \"", 
                    StyleBox[
                    "\"Special Functions\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Vector Fields"}], "\" \"", 
                    StyleBox[
                    "\"Vector Fields\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Discrete Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Discrete Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Discrete Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "High School Finite Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Finite Mathematics\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Coding Theory"}], "\" \"", 
                    StyleBox[
                    "\"Coding Theory\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Combinatorics"}], "\" \"", 
                    StyleBox[
                    "\"Combinatorics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Graph Theory"}], "\" \"", 
                    StyleBox[
                    "\"Graph Theory\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Networks"}], "\" \"", 
                    StyleBox[
                    "\"Networks\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Sequences"}], "\" \"", 
                    StyleBox[
                    "\"Sequences\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Tiling"}], "\" \"", 
                    StyleBox[
                    "\"Tiling\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Trees"}], "\" \"", 
                    StyleBox[
                    "\"Trees\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Experimental Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Experimental Mathematics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Geometry"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Geometry\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Geometry\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Geometry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Geometry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Algebraic Curves"}], "\" \"", 
                    
                    StyleBox[
                    "\"Algebraic Curves\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Algebraic Geometry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Algebraic Geometry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Algebraic Surfaces"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Algebraic Surfaces\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Analytic Geometry"}], "\" \"", 
                    StyleBox[
                    "\"Analytic Geometry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Conic Sections"}], "\" \"", 
                    StyleBox[
                    "\"Conic Sections\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Curves"}], "\" \"", 
                    StyleBox[
                    "\"Curves\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Differential Geometry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Differential Geometry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Ellipses"}], "\" \"", 
                    StyleBox[
                    "\"Ellipses\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Geometric Transformations"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Geometric Transformations\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Higher-Dimensional Geometry"}], "\" \"", 
                    StyleBox[
                    "\"Higher-Dimensional Geometry\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Hyperbolic Geometry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Hyperbolic Geometry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Nested Patterns"}], "\" \"", 
                    StyleBox[
                    "\"Nested Patterns\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Plane Geometry"}], "\" \"", 
                    StyleBox[
                    "\"Plane Geometry\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Polygons"}], "\" \"", 
                    StyleBox[
                    "\"Polygons\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Polyhedra"}], "\" \"", 
                    StyleBox[
                    "\"Polyhedra\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Projective Geometry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Projective Geometry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Reflections"}], "\" \"", 
                    StyleBox[
                    "\"Reflections\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Solid Geometry"}], "\" \"", 
                    StyleBox[
                    "\"Solid Geometry\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Surfaces"}], "\" \"", 
                    StyleBox[
                    "\"Surfaces\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Triangles"}], "\" \"", 
                    StyleBox[
                    "\"Triangles\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Historical Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Historical Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Historical Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Euclid's Elements"}], "\" \"", 
                    StyleBox[
                    "\"Euclid's Elements\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Foundations of Mathematics"}],
                     "\" \"", 
                    StyleBox[
                    "\"Foundations of Mathematics\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Greek Mathematics"}], "\" \"", 
                    StyleBox[
                    "\"Greek Mathematics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Unsolved Problems"}], "\" \"", 
                    StyleBox[
                    "\"Unsolved Problems\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Number Theory"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Number Theory\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Number Theory\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Number Bases"}], "\" \"", 
                    StyleBox[
                    "\"Number Bases\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Prime Numbers"}], "\" \"", 
                    StyleBox[
                    "\"Prime Numbers\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Representations of Numbers"}],
                     "\" \"", 
                    StyleBox[
                    "\"Representations of Numbers\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Pure Mathematics"}], "\" \"", 
                    
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Pure Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Pure Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Algebraic Geometry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Algebraic Geometry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Complex Analysis"}], "\" \"", 
                    
                    StyleBox[
                    "\"Complex Analysis\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Differential Geometry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Differential Geometry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Dynamical Systems Theory"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Dynamical Systems Theory\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Group Theory"}], "\" \"", 
                    StyleBox[
                    "\"Group Theory\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Knot Theory"}], "\" \"", 
                    StyleBox[
                    "\"Knot Theory\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Mathematical Logic"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Mathematical Logic\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Theorem Proving"}], "\" \"", 
                    StyleBox[
                    "\"Theorem Proving\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Topology"}], "\" \"", 
                    StyleBox[
                    "\"Topology\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Recreational Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Recreational Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Recreational Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Golden Ratio"}], "\" \"", 
                    StyleBox[
                    "\"Golden Ratio\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Mathematics Problems"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Mathematics Problems\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Unsolved Problems"}], "\" \"", 
                    StyleBox[
                    "\"Unsolved Problems\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Statistics"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Statistics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Statistics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Statistics"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Statistics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Data Analysis"}], "\" \"", 
                    StyleBox[
                    "\"Data Analysis\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Probability"}], "\" \"", 
                    StyleBox[
                    "\"Probability\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Random Processes"}], "\" \"", 
                    
                    StyleBox[
                    "\"Random Processes\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Life Sciences"}], "\" \"", 
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Life Sciences\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Life Sciences\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Biology"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Biology\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Biology\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Biology"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Biology\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Developmental Biology"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Developmental Biology\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Growth Processes"}], "\" \"", 
                    
                    StyleBox[
                    "\"Growth Processes\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Molecular Biology"}], "\" \"", 
                    StyleBox[
                    "\"Molecular Biology\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Natural Forms"}], "\" \"", 
                    StyleBox[
                    "\"Natural Forms\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Plant Biology"}], "\" \"", 
                    StyleBox[
                    "\"Plant Biology\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Zoology"}], "\" \"", 
                    StyleBox[
                    "\"Zoology\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Cognitive Science"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Cognitive Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Cognitive Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Perception"}], "\" \"", 
                    StyleBox[
                    "\"Perception\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Psychology"}], "\" \"", 
                    StyleBox[
                    "\"Psychology\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Psychophysics"}], "\" \"", 
                    StyleBox[
                    "\"Psychophysics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Ecology"}], "\" \"", 
                    StyleBox["\"Ecology\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Medicine"}], "\" \"", 
                    StyleBox[
                    "\"Medicine\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Engineering & Technology"}], "\" \"", 
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Engineering & Technology\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Engineering & Technology\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "School Applied Sciences"}], 
                    "\" \"", 
                    StyleBox[
                    "\"School Applied Sciences\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Chemical Engineering"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Chemical Engineering\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Civil Engineering"}], "\" \"", 
                    StyleBox[
                    "\"Civil Engineering\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Control Theory"}], "\" \"", 
                    StyleBox[
                    "\"Control Theory\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Electrical Engineering"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Electrical Engineering\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Electrical Engineering\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Circuit Design"}], "\" \"", 
                    StyleBox[
                    "\"Circuit Design\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Signal Processing"}], "\" \"", 
                    StyleBox[
                    "\"Signal Processing\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Fluid Mechanics"}], "\" \"", 
                    StyleBox[
                    "\"Fluid Mechanics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Image Processing"}], "\" \"", 
                    
                    StyleBox[
                    "\"Image Processing\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Machines"}], "\" \"", 
                    StyleBox[
                    "\"Machines\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Mechanical Engineering"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Mechanical Engineering\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Nanotechnology"}], "\" \"", 
                    StyleBox[
                    "\"Nanotechnology\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Robotics"}], "\" \"", 
                    StyleBox[
                    "\"Robotics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Signal Processing"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Signal Processing\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Signal Processing\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Audio"}], "\" \"", 
                    StyleBox[
                    "\"Audio\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Wavelets"}], "\" \"", 
                    StyleBox[
                    "\"Wavelets\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Kids & Fun"}], "\" \"", 
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Kids & Fun\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Kids & Fun\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "School Puzzles and Recreations"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"School Puzzles and Recreations\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"School Puzzles and Recreations\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Puzzles and Recreations: Elementary"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Puzzles and Recreations: Elementary\"", FontSize -> 12,
                     Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Puzzles and Recreations: Intermediate"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Puzzles and Recreations: Intermediate\"", FontSize -> 
                    12, Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Puzzles and Recreations: Advanced"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Puzzles and Recreations: Advanced\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Everyday Life"}], "\" \"", 
                    StyleBox[
                    "\"Everyday Life\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "For Kids"}], "\" \"", 
                    StyleBox[
                    "\"For Kids\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Optical Illusions"}], "\" \"", 
                    StyleBox[
                    "\"Optical Illusions\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Puzzles"}], "\" \"", 
                    StyleBox[
                    "\"Puzzles\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Recreation"}], "\" \"", 
                    StyleBox[
                    "\"Recreation\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Computation"}], "\" \"", 
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Computation\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Computation\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Algorithms"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Algorithms\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Algorithms\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Automatic Reasoning"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Automatic Reasoning\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Coding Theory"}], "\" \"", 
                    StyleBox[
                    "\"Coding Theory\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Computational Geometry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Computational Geometry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Computer Algebra"}], "\" \"", 
                    
                    StyleBox[
                    "\"Computer Algebra\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Computer Graphics"}], "\" \"", 
                    StyleBox[
                    "\"Computer Graphics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Cryptography"}], "\" \"", 
                    StyleBox[
                    "\"Cryptography\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Data Compression"}], "\" \"", 
                    
                    StyleBox[
                    "\"Data Compression\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Image Processing"}], "\" \"", 
                    
                    StyleBox[
                    "\"Image Processing\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Numerical Analysis"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Numerical Analysis\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Computer Science"}], "\" \"", 
                    
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Computer Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Computer Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "High School Computer Science"}], "\" \"", 
                    
                    StyleBox[
                    "\"High School Computer Science\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Computational Geometry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Computational Geometry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Computer Graphics"}], "\" \"", 
                    StyleBox[
                    "\"Computer Graphics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Data Structures"}], "\" \"", 
                    StyleBox[
                    "\"Data Structures\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Finite State Machines"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Finite State Machines\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Recursion"}], "\" \"", 
                    StyleBox[
                    "\"Recursion\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Theory of Computation"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Theory of Computation\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Computer Systems"}], "\" \"", 
                    
                    StyleBox[
                    "\"Computer Systems\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "NKS / Wolfram Science"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"NKS / Wolfram Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"NKS / Wolfram Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Cellular Automata"}], "\" \"", 
                    StyleBox[
                    "\"Cellular Automata\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Fractals"}], "\" \"", 
                    StyleBox[
                    "\"Fractals\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Nested Patterns"}], "\" \"", 
                    StyleBox[
                    "\"Nested Patterns\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Simple Computational Systems"}], "\" \"", 
                    
                    StyleBox[
                    "\"Simple Computational Systems\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Substitution Systems"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Substitution Systems\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Business & Social Systems"}], "\" \"", 
           
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Business & Social Systems\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Business & Social Systems\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Actuarial Science"}], "\" \"", 
                    StyleBox[
                    "\"Actuarial Science\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Business"}], "\" \"", 
                    StyleBox[
                    "\"Business\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Economics"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Economics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Economics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "High School Economics and Finance"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Economics and Finance\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Macroeconomics"}], "\" \"", 
                    StyleBox[
                    "\"Macroeconomics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Microeconomics"}], "\" \"", 
                    StyleBox["\"Microeconomics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Finance"}], "\" \"", 
                    StyleBox[
                    "\"Finance\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Law"}], "\" \"", 
                    StyleBox[
                    "\"Law\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Political Science"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Political Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Political Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "International Relations"}], 
                    "\" \"", 
                    StyleBox[
                    "\"International Relations\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Social Sciences"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Social Sciences\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Social Sciences\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "School Social Studies"}], 
                    "\" \"", 
                    StyleBox[
                    "\"School Social Studies\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Linguistics"}], "\" \"", 
                    StyleBox[
                    "\"Linguistics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Our World"}], "\" \"", 
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Our World\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Our World\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Elementary School K-2 Science"}], "\" \"", 
                    StyleBox[
                    "\"Elementary School K-2 Science\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Elementary School 3-5 Science"}], "\" \"", 
                    StyleBox["\"Elementary School 3-5 Science\"", FontSize -> 
                    12, Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Middle School Science"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Middle School Science\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Everyday Life"}], "\" \"", 
                    StyleBox[
                    "\"Everyday Life\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Geography"}], "\" \"", 
                    StyleBox[
                    "\"Geography\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Geometric Models"}], "\" \"", 
                    
                    StyleBox[
                    "\"Geometric Models\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "History"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"History\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"History\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Classic Science Experiments"}], "\" \"", 
                    StyleBox[
                    "\"Classic Science Experiments\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Euclid's Elements"}], "\" \"", 
                    StyleBox[
                    "\"Euclid's Elements\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Greek Mathematics"}], "\" \"", 
                    StyleBox[
                    "\"Greek Mathematics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "International Relations"}], 
                    "\" \"", 
                    StyleBox[
                    "\"International Relations\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Linguistics"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Linguistics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Linguistics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "School Language Arts"}], 
                    "\" \"", 
                    StyleBox[
                    "\"School Language Arts\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Textual Analysis"}], "\" \"", 
                    
                    StyleBox[
                    "\"Textual Analysis\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Machines"}], "\" \"", 
                    StyleBox[
                    "\"Machines\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Natural Forms"}], "\" \"", 
                    StyleBox[
                    "\"Natural Forms\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Navigation"}], "\" \"", 
                    StyleBox[
                    "\"Navigation\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Solar System"}], "\" \"", 
                    StyleBox[
                    "\"Solar System\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Programming Functionality"}], "\" \"", 
           
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Programming Functionality\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Programming Functionality\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "3D Graphics"}], "\" \"", 
                    StyleBox[
                    "\"3D Graphics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Version 7 Features"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Version 7 Features\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Short Programs"}], "\" \"", 
                    StyleBox[
                    "\"Short Programs\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Physical Sciences"}], "\" \"", 
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Physical Sciences\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Physical Sciences\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Astronomy"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Astronomy\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Astronomy\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Astronomy"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Astronomy\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Solar System"}], "\" \"", 
                    StyleBox[
                    "\"Solar System\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Chemistry"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Chemistry\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Chemistry\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Chemistry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Chemistry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Chemical Kinetics"}], "\" \"", 
                    StyleBox[
                    "\"Chemical Kinetics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "General Chemistry"}], "\" \"", 
                    StyleBox[
                    "\"General Chemistry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Inorganic Chemistry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Inorganic Chemistry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Organic Chemistry"}], "\" \"", 
                    StyleBox[
                    "\"Organic Chemistry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Physical Chemistry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Physical Chemistry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Earth Science"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Earth Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Earth Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, 
                    "High School Earth and Environmental Sciences"}], "\" \"", 
                    StyleBox[
                    "\"High School Earth and Environmental Sciences\"", 
                    FontSize -> 12, Editable -> False, StripOnInput -> 
                    False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Meteorology"}], "\" \"", 
                    StyleBox[
                    "\"Meteorology\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "History of Science"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"History of Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"History of Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Classic Science Experiments"}], "\" \"", 
                    StyleBox[
                    "\"Classic Science Experiments\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Classic Scientific Images"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Classic Scientific Images\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Materials Science"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Materials Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Materials Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Crystallography"}], "\" \"", 
                    StyleBox[
                    "\"Crystallography\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Physics"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Physics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Physics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Physics"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Physics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Acoustics"}], "\" \"", 
                    StyleBox[
                    "\"Acoustics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Astrophysics"}], "\" \"", 
                    StyleBox[
                    "\"Astrophysics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "College Physics"}], "\" \"", 
                    StyleBox[
                    "\"College Physics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Electromagnetism"}], "\" \"", 
                    
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Electromagnetism\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Electromagnetism\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Electrostatics"}], "\" \"", 
                    StyleBox[
                    "\"Electrostatics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Fluid Mechanics"}], "\" \"", 
                    StyleBox[
                    "\"Fluid Mechanics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Gravitation Theory"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Gravitation Theory\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Mechanics"}], "\" \"", 
                    StyleBox[
                    "\"Mechanics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Optics"}], "\" \"", 
                    StyleBox[
                    "\"Optics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    "Particle Physics", {False, "Particle Physics"}], "\" \"", 
                    StyleBox[
                    "\"Particle Physics\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Quantum Physics"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Quantum Physics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Quantum Physics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    "Quantum Mechanics", {False, "Quantum Mechanics"}], 
                    "\" \"", 
                    StyleBox["\"Quantum Mechanics\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{
                    Left}}}, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Statistical Mechanics"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Statistical Mechanics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Statistical Mechanics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Chemical Kinetics"}], "\" \"", 
                    StyleBox[
                    "\"Chemical Kinetics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Thermodynamics"}], "\" \"", 
                    StyleBox[
                    "\"Thermodynamics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Waves"}], "\" \"", 
                    StyleBox[
                    "\"Waves\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Systems, Models & Methods"}], "\" \"", 
           
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Systems, Models & Methods\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Systems, Models & Methods\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Cellular Automata"}], "\" \"", 
                    StyleBox[
                    "\"Cellular Automata\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Chaos Theory"}], "\" \"", 
                    StyleBox[
                    "\"Chaos Theory\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Discrete Models"}], "\" \"", 
                    StyleBox[
                    "\"Discrete Models\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Experimental Methods"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Experimental Methods\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Fractals"}], "\" \"", 
                    StyleBox[
                    "\"Fractals\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Game Theory"}], "\" \"", 
                    StyleBox[
                    "\"Game Theory\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Generation of Form"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Generation of Form\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Multi-agent Modeling"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Multi-agent Modeling\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Networks"}], "\" \"", 
                    StyleBox[
                    "\"Networks\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Random Processes"}], "\" \"", 
                    
                    StyleBox[
                    "\"Random Processes\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Substitution Systems"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Substitution Systems\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Trees"}], "\" \"", 
                    StyleBox[
                    "\"Trees\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Creative Arts"}], "\" \"", 
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Creative Arts\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Creative Arts\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "School Art and Design"}], 
                    "\" \"", 
                    StyleBox[
                    "\"School Art and Design\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Visual Patterns"}], "\" \"", 
                    StyleBox[
                    "\"Visual Patterns\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Architecture"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Architecture\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Architecture\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Geometric Models"}], "\" \"", 
                    
                    StyleBox[
                    "\"Geometric Models\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Art"}], "\" \"", 
                    StyleBox[
                    "\"Art\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Color"}], "\" \"", 
                    StyleBox[
                    "\"Color\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Generation of Form"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Generation of Form\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Graphic Design"}], "\" \"", 
                    StyleBox[
                    "\"Graphic Design\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Iconography & Typography"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Iconography & Typography\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Music"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Music\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Music\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "School Music"}], "\" \"", 
                    StyleBox[
                    "\"School Music\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Audio"}], "\" \"", 
                    StyleBox[
                    "\"Audio\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Music Theory"}], "\" \"", 
                    StyleBox[
                    "\"Music Theory\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Patterns"}], "\" \"", 
                    StyleBox["\"Patterns\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJy9Wetz27gRb5PYkh+S33ncXW+Y6fRupnOednrT6Uy/MbKdaOKHavpyM/\
0Gk7CEBiRYkFSi/PXdBUlxQVBy+qH9ZAsLLBaL3d/+\
FvR3ToONIF9IHmzeFHla5KdBbzTj4UcePTzJnl2KLA/\
2J0znIpTcm8wWmQiz4OAfBUvyIvaueDhjCQyBmnHO48wHhTtXLJ/\
xmMGazN89DQ6DcKaU9Ojwy9Pg9bnkMU9yphdeNeP96V/orIfflBZ0zv359K/\
dc19diSgCY91dmzkv3onprGOG3z8NTqjMl1N+r5k3btYeU/lbrmKe60Uj/rFz+\
dhjSeTdaTFVSXuFZcxE85DJsJAFMfePdMaoEhuNfsLkAizvMOTPliHRnCUhj+zVlyLhTNdWNku/\
p0svRCJy3u3H53RikIM0syc88zUnirfO/\
13AJJWQKSfnn1OVwOUKBpsVSdiSv6zllc1qyrTIZ3FGr2SRcn2vJDiiQ8P2OEL1ueBkcHeccDBGtob\
74yTnU67J0OFYa2M02HddxPeWcLcc8d6wjKo5hpxheCFgUceZtyZcCxBz3Yw9mYjmx85EyQVECvgko\
6Oanzq3NZigLte0/dvVVt/yruEXJEC7Xbn5Qcki5s1ArzLH33o8c/4XqbE3UnEq+\
Wf3MMNV0d3t2z3AtAjvGc6tNI2uw6UfOxwy/\
MDDXHXscuSnqRSQcRReeuAkGNfqs4iNUkDQfKairzH7EE4IUQMuKLM+\
E2TV0Q0kQBll3i3PQEE4I9d9k+YiFl/MhGb4IEh5uCLr+r+yOZc8p3ssseOHpQX+\
3v8fnfojJwr26yhwPbNzBk6bw8nnND+fn4mHB64r1OnI0IN3TMcKSluHyi2DEdoKn+\
dXhYQ9AJrYPRQf18SBSTlXGYxLlsPZIcq4lb0CoiZJvKDQDyykos0AjkQH1l3koArQC8EljbPjM5GF\
mtvIjvXvq8F/MFKRSKbe3YwrerUwHt+LhMGu1vzdt5qlM2d6/5rnn5T+\
SB0cADTzxD70nZCwWzOwcac5nYB1wqAq0IQVZb9fx6F/8mgd36/\
iDiJgVGgreA4bkbuOCN2bO1iTEcORCbeAO5jb3v/ECl5XU/9cSpFa9ehVNQs2uNMMtAPEtUP+\
W3QI16dn6MOsRDxX+RGpta5075pnGMwTlkNxs4ByIlnCu6xFOJ62yiMMzXhk4elEq3+hb+ZdSnZu+\
YN0PDcMwMyoa0/3aragArFkKi2UeAd/VIm5NEuewU2eFyHo/jHzKmpKln1zoYokqtBYPXTH4sFbCN+\
PK2S/JJmSc/SjVgAntBoNKsJRppH/dCUFWUULvrnlqYYSkeSNhS53mBTaRoatR+J+DQQ/\
Fq8vzxYJi42Xg0WGbYQDEoAdqkid4Z33icqd0cPGblAJhFGEJELNbB6ja+\
cWoPTvVKqkmlLLbjlgZF3+qTvQ72+VBGLpGXpAgJVM67i/dXe73VBojLFH2fXgjOWsq+\
ahanYPgJnTG7qFqqrMwSHyrVjZwcsryoDAnbfhplXJsvHij/wiV+ZEQC5YBjhF/baqDjwnSjvvfb+\
cwDtq/MFSZIqGXUdGepHmaooCqs04A9dBdGcW0dkfx2zK64Nbxq9lVY2BQSiwHiGB+86iO60J/\
8Xp1x1xz5wlyHUR5pCINJeqiozhgAkazoAlURiDiC20ffyT8mYw0YlRnccs048svX4feH/\
yflXyAfqZpRs20HwuZSGRoJXBQRnahWZhbtPrlYXhu0AgcHi2vxxLjoPiHsI/\
LwxtdsQH5dsErixtzPxN8Iaf5RrbioX/\
pN2f1BISWFAuWO0E4tIRpDP8B2i72VKylNBrxTE05D3cTBvzeQI0vXPd0ThReoqPKZ1ab1bLDpdH7x\
AOzpnOZ8uLAy/8RA9QSpFtnydzAQ6p6FPtRAIR0KlAFLUA8rCskCa2yB7fjiSDRAvrMa/\
hZpSUWLNy8QD/mkylLgM0hZUQS0v9v8WuT8MlMSkdFOhVb1T+\
AKkK7R7LcXKtfqiKFqDumqhI21OhyZSST7mrZP8cWYeG+J/\
iZWcxWjesBrO8Vdf3LmQBfGT5akb8CBgwF2X0O0C61bFgE1s6y5L2K53d2prnuto3YKP7hEeSfllrs\
OjVcrzXdcE9BLOhZYrKWk4EG9hK0qp1KR54k6ZQbnpvhIkrhFfr0qpxSiU4tKUqrcLUke8DT/\
gEEd1R4w6uFFyLQSxn2eCaAc5iA2W3/gMkrbk7v/dP1RoBNJ8CMCM7reMUKML2hOuQpzbcbk+\
yBRyvZUE56IRe7zxszexf8UiE4H6SSG+\
KDMsAduaBMp1gBZDo0QMfigg2ptKtUv16JYk22BFfR0qS89pCi1piEAMqEbOUDaEcacXrSVQgugU9R\
8fTS/aJorrCBzoC6xi7L7D/1kldKkwDbRP/vdoLdZAh+tdEqhLlRWQ10TuXQAyKNsV6VTnyJ+\
9KRVyih6snG3zaXlcEd0czplwmu9f03UYhqXB2A9t+GOooqjtvGTB8h/6WVcZACcAyhjRlp/\
hOcQogC3FtLLA5sNuMr6GNj9Rkt0NPphBscEZgiz94d4AsSZn34MoXdV2uns3cCnS8BB+\
ih2agmIsVMuytAZCly1FLqG5rxXgZjoQOC5F7ZzwTU+\
vZDH4y2UknVyP8Gg7ad2nc81rDqtMOrxm0PksPEmW36l61aIdjMJ5vw4cEIH1Lx4vf1k2hgftpGeEN\
/a77g42DKR3z8GONM+/E/lDjyAfnc64XEVt4WDCIVcClHfLfvG+006pXURQsNF/\
HS9b19uva9sdxiWIM3sFxdfZLBsMYHr6mm+3f8c8A3V2tSUfMrCpi29dALaYtzr+\
C6w5Gpt2dl5b42w1swm+D+\
u1s2PsgMjTRJfa7vgYTIUaxhUHcXnNJT0E9AQ7gW4p8GlmLaMOqfXIseznGglNGCsLNInXCZuMKyl9\
omvn6YyAOkAmtJNk1cvcN0z399nsRYbW4KBJsG76vaWjx5YvkZQFtHhdMqf39CtnfvSahGv1/\
WDnbRGEMJAGYczP/9cr59ev745nXB897eC7amKRlfR5DIczsaO9VWxKnNBuTEgu4BBcTx1gW6hds/\
DBnXrd2fj7raJAPP3DT5Hp/8y44a/XIw2CmIFortTRpYAjyPV8Em3cqNZ+tezeGnWXZ1vKNAz+\
B41eu1uDQ+DWF0m3sh/4hWWD945jXI+\
gkVDxOoIPNNi6gSPNmEIti9uxaJdx8eMtUAZwQopEHgzMew955GdrVxyxoxKNq/9HT/wCkwsTG"},
 CellTags->{"CheckboxCell", "Topics", "Topics-Checkboxes"},
 CellID->256892528,ExpressionUUID->"966f28d9-e35b-4704-9ab2-8df8cae8fa7d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Related Demonstrations",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"RelatedDemonstrations", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Enter any additional information that you would like to \
communicate to the reviewer here.", 
           StyleBox["\n", FontSize -> 4]}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoRelatedDemonstrations"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "27d31d18-440d-4284-bee1-8cf427a1da75"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "RelatedDemonstrations"},
 DefaultNewCellStyle->"Text",
 CellTags->{
  "Related Demonstrations", "RelatedDemonstrations", "TemplateCellGroup"},
 CellID->1132753,ExpressionUUID->"d279f5a6-e0a5-42be-95fc-b50ebbfaaa27"],

Cell["Link to a related demonstration", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->288851603,ExpressionUUID->"9141165a-5063-4cd0-b087-09e8b690a52e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "External Links",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"ExternalLinks", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Provide hyperlinks (not just bare URLs) to any relevant \
resources.wolfram.com pages, with the page title as the linked text. Links to \
", 
           ButtonBox[
           "NKS | Online", 
            BaseStyle -> {"Hyperlink", FontColor -> RGBColor[0.4, 0.45, 0.5]},
             ButtonData -> {
              URL["http://www.wolframscience.com/nks"], None}], 
           " should use the section title, not a page number. Links to \
non-Wolfram sites go in the Details section.", 
           StyleBox["\n", FontSize -> 4]}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoExternalLinks"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "ecd56bbc-5412-4877-bf7b-d6c8b7adbc29"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "ExternalLinks"},
 DefaultNewCellStyle->"Item",
 CellTags->{"External Links", "ExternalLinks", "TemplateCellGroup"},
 CellID->843468725,ExpressionUUID->"3326a0e4-445d-462d-bcc2-076fef1488fc"],

Cell["Link to external information", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->474339324,ExpressionUUID->"f5add3f6-a89e-494f-961c-873748ff622b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Related Symbols",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"RelatedSymbols", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "List the names of published resource objects from any Wolfram \
repository that are related to this function.", 
           StyleBox["\n", FontSize -> 4]}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoRelatedSymbols"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "c8984497-ae04-481d-bb36-48d815d57d03"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "RelatedSymbols"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Related Symbols", "RelatedSymbols", "TemplateCellGroup"},
 CellID->899564547,ExpressionUUID->"5b819928-34d1-42e7-8dd5-3defd3aacec3"],

Cell["SymbolName (documented Wolfram Language symbol)", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->107750934,ExpressionUUID->"89c3216d-9548-4f72-9b19-bca9e9f9b816"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Published Date",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"PublishedDate", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{"If known, the date Demonstration was published."}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoPublishedDate"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "a1aec34b-a941-4a73-873c-9a9186bb4f58"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "PublishedDate"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Published Date", "PublishedDate", "TemplateCellGroup"},
 CellID->364555554,ExpressionUUID->"cfa3d10a-a79f-4014-82a8-c55bb4fee2ff"],

Cell["2015-01-16", "Text",
 TaggingRules->{},
 CellID->485338474,ExpressionUUID->"8d0259b0-3f66-441a-b680-6cdd14dbef72"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Compatibility",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Compatibility", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Specify any known compatibilities for your demonstration to ensure \
it is discoverable on the correct platforms.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibility"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "a130fc61-90a2-4df9-b8db-e7093c7604bd"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Compatibility"},
 CellTags->{"Compatibility", "TemplateCellGroup"},
 CellID->618273920,ExpressionUUID->"ce5467a6-7f77-409a-a7a6-bfeca1f98708"],

Cell[CellGroupData[{

Cell[TextData[{
 "AR Support",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityARSupport", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Specify whether your demonstration is expected to be supported \
through AR (Augmented Reality).", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityARSupport"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "e0335115-01ca-4407-b730-512f248b917d"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityARSupport"},
 DefaultNewCellStyle->"Text",
 FontSize->16,
 CellID->939515199,ExpressionUUID->"009923e3-ba40-4015-b8a8-9aee6670df2b"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, False}], "\" \"", 
           StyleBox[
           "\"Supported in ARPublish (Augmented Reality)\"", FontSize -> 12, 
            Editable -> False, StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJw9j8tOwzAQRSlKKOW1ZJ0lVPJHmCCkSIhWGX7ATSfUwvZYnvEif4/\
NazlH9zFXXyloQRaHcLHLErMoWPcnnD7xOJ9x82q5kHYQ9Dyvfu75nJsxF8cWcoyUBI+dDZ0e9/\
ngLJ+6B50/PIbKRzTOyvLI7YtxjAou94kiJlngvicfjdiDrQo9/oaV/l0US4F5o7OQL5KpPkUu+\
8D9SsHdULJTTCimCmH9ROTQBAXXfeZiGUIZ8l/5B+\
sGbt4oFHYzIlNOE74vEeH2GX0plPSd9wX8smDe"},
 CellTags->{
  "CheckboxCell", "CompatibilityARSupport", 
   "CompatibilityARSupport-Checkboxes"},
 CellID->885916833,ExpressionUUID->"8c646c65-a739-4675-a89a-e1a703e08da5"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Wolfram Language Version",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityWolframLanguageVersionRequired", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Enter required Wolfram Language Version (e.g. 12.1+).", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {
       "SectionMoreInfoCompatibilityWolframLanguageVersionRequired"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "e85c1fe0-31a0-47b8-9259-85234a130bcf"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{
  "TemplateGroupName" -> "CompatibilityWolframLanguageVersionRequired"},
 DefaultNewCellStyle->"Text",
 FontSize->16,
 CellID->903878728,ExpressionUUID->"52c2a784-4882-484d-a0a2-f814f28de751"],

Cell["6", "Text",
 TaggingRules->{},
 CellTags->"ScrapeDefault",
 CellID->720902404,ExpressionUUID->"9d6cbda0-71b0-4ad0-9e31-3c6577b9c849"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Cloud Support",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityCloudSupport", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Specify whether your demonstration is expected to work in the public \
cloud.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityCloudSupport"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "788dee70-02bc-462f-8fd1-eff7d6d0f538"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityCloudSupport"},
 DefaultNewCellStyle->"Text",
 FontSize->16,
 CellID->576624648,ExpressionUUID->"056d52b7-01f1-4ade-83a2-5cd2300be228"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[True, {False, True}], "\" \"", 
           StyleBox[
           "\"Supported in cloud\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxFjkuOwjAQRAUKf4bF7NhxgRwCjJAioQHRXCAkjbCw3Za7e5Hb4yDQbEvvVdV2XsIIpH\
MI45NKVClhYh7YPLG9D7g4WhYurkkxc5Wg5296H3Jx0ez9gsZISbDd2LBpHGn7NabnRBGTdLA25GMt\
9madlc700EfLe6colgLzbKtCPlNNf4Kc+sBmUMKqCoIpJpS6B2GyI3JYhxIWRjkrVcjHeXSoHeN/\
2L/l4o9CzpYXZNLU4LWLCD979HlQ0rvvBXKCW6E="},
 CellTags->{
  "CheckboxCell", "CompatibilityCloudSupport", 
   "CompatibilityCloudSupport-Checkboxes"},
 CellID->874890799,ExpressionUUID->"7fb49c0d-e71c-4163-9a0e-be712d9e8d5c"]
}, Closed]]
}, Open  ]]
}, Closed]]
}, Open  ]]
},
TaggingRules->{
 "ResourceType" -> "Demonstration", "ResourceCreateNotebook" -> True, 
  "TemplateVersion" -> "2024.05.27", "CreationTimestamp" -> 
  3.928332832040415`16.3467832658805*^9, "UpdatedTimestamp" -> 
  3.928332832040466`16.346783265880504*^9, "CompatibilityTest" -> HoldComplete[
    BinaryDeserialize[
     BaseDecode[
     "OEM6eJzVWFtv2zYUri+\
5IPEyNECB9a0PeciCbR2GAduaXerJSeohSZPQ6XNo6UgRTJMqSaXxv98hJTm2I7mS7WCdHxJapL7z8\
dz40X5N7TpiGImYe0f3kQSlQsH9mlq7jEPQfj13uq7qXR//\
Ntrcw39rRx9jytTO3geQZv48HvZBSt9+9t+aFYQO4RIHLSeWErj+QFkM/\
jO1e3SHI6rNW0JDX4gBrmqehkqrVo8GQciDq5iBIq0rUCKWLvRGEZBmh2qKNJvvuQuFLNf+\
ZsIdmGUJ4J4juIZ7fUH1rd8o2vk5gKfIfmaPjJSGocNCpH3TAT/\
k4STdm4dXXhlS2Wt5S1XzPGYMif3weDI1cAUBUgWJTP0wiKV1zXi7f5UldQWRUKEWcpQAJjgqBWrY+\
NXU5jENWSwxMjX11QV1GeguV5oyRr4pYuivL+Lshdza6ompyGwRLTEf/hGhsdc4o5HdQ8xd86a/\
llgmLwuda8lRZdJ6O8EiEQu1eUyY0E6N1G5I/c0fEw/qh1uWPOavIt+WJX/\
gNwu81CBg7G11xCdui0Cp38qiZoP3scYwgmcKagsjzagLbcyrFcJum6LrAKMj8BB3+\
51gHgYSE5OrP8sCX8jwDgFv7pK2cCIBv0m1cc1V2g5yvNGpik6jCLh3zW8p9xh4DjCm5jpmVRbm+\
Ai/VvaSi7DY8VIE8rwHQ9yABmPuRIo4Wh4Ua7fVZmaE7eAOE/\
qFg4sCIUNQ3zu34A764h4f7zw8NtZJK5uz33bQHo2ZtvXNdQ5T8nX2iEBSm7mhLt3NxoFQg564jjwc\
p32/OMorAJ8KcAMfbGQlsHnCRJ+\
ym1tzpE16VP1S1uwJ6Heh5wFPGlH5cj2m3B05tyJ0oRNSJoJJYq2UmNR4SuL5ik2Z8kEedYqzz+\
2sOZMIfIwBd012Uw8wLzN4icfFeL/\
TBibAsiNlrSdjW9pLdokqh102yJIulSHqp6oUeL9KjaVSZtbqlIcyf57Dp7E/\
c32cFIg6q0p5L1ZwCgF1R92AC5l0pyzWqmmikV98h2Ut5eDOFN68MlzSzLweW1frp/\
imbYzHVf0WgM7a2LTFlZUSlsQ2Mgfsi1SBegq6hdWIEtqq5nWzutsxdWn5qY0u9uwAM3Wzy62x0Wec\
3BizLth4Cly672U7UuOT4RFs/8HbY/MTNmvqqPIxSLngoUvZhRQRoLesnluU8wTR/\
EtEPW2GrbZSwg2t9r5U7cq1HaVsyQjpj4YmhzbbVoz0xGrgbJqQHWKBzkBTz9wP0hsY2XRCnVxAXiY\
rXl+BD9Jk96ts6qG7rCYqE0ZnaCW3p/EdKrmCNk/R54+uns/s5+\
At3gmWuazMuUlU0PcHhSjVBH01nHkK/udCJLwEDmgAxMWAVNPt14WYyWmXlweJsYWF/JOZnK/\
sS3qvjJ5fCOoLU/EXy0ehgqx/CmuL6Pz9Qh6zwr64bP8nSn6hboEAP362X81KZ2fp4FoF/\
7oQ5ikkezHpKfcsLNS/K8RfTplXxS0rxX8v54//VoAvRfILkt2/\
Fu6DuJJG2H9mK2QZ3X1Y8rjKVdsLU11Qbnfn/Mae/TiO1RZHs2bny+6Vwq5Sfi8TnHKi+1+K4NOh"]\
]], "DefinitionNotebookFramework" -> "DefinitionNotebookClient", 
  "RuntimeConfiguration" -> {
   "Contexts" -> {
     "DemonstrationResource`", "DemonstrationResource`DefinitionNotebook`"}, 
    "DefaultContentMethod" -> "Tagged", "HintPods" -> True, "LoadingMethod" -> 
    "Paclet", "PacletName" -> "DemonstrationResource"}, "ToolsOpen" -> True, 
  "SubmissionReviewData" -> {"Review" -> False}},
CreateCellID->True,
FrontEndVersion->"14.1 for Mac OS X x86 (64-bit) (June 13, 2024)",
StyleDefinitions->Notebook[{
   Cell[
    CellGroupData[{
      Cell[
       StyleData[StyleDefinitions -> "Default.nb"]], 
      Cell[
       StyleData[All, "Working"], WindowToolbars -> {}, DockedCells -> {
         Cell[
          BoxData[
           TemplateBox[{}, "MainGridTemplate"]], "DockedCell", 
          CellMargins -> {{-10, -10}, {-8, -8}}, CellFrame -> 0, Background -> 
          RGBColor[0.7508, 0.17868, 0.085283], CellTags -> {"MainDockedCell"},
           CacheGraphics -> False], 
         Cell[
          BoxData[
           TemplateBox[{}, "ToolsGridTemplate"]], "DockedCell", 
          TaggingRules -> {"Tools" -> True}, 
          CellTags -> {"ToolbarDockedCell"}, 
          CellFrameMargins -> {{0, 0}, {2, 2}}, CellFrame -> {{0, 0}, {1, 0}},
           CacheGraphics -> False, CellOpen -> Dynamic[
            CurrentValue[
             EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]]]}, 
       PrivateNotebookOptions -> {
        "FileOutlineCache" -> False, "SafeFileOpen" -> "IgnoreCache"}, 
       CellLabelAutoDelete -> False, 
       CodeAssistOptions -> {"AutoDetectHyperlinks" -> False}, 
       AutoQuoteCharacters -> {}, PasteAutoQuoteCharacters -> {}]}, Open]], 
   Cell["Hint Styles", "Section"], 
   Cell[
    StyleData["MoreInfoText", StyleDefinitions -> StyleData["Text"]], 
    FontColor -> GrayLevel[0.25]], 
   Cell[
    StyleData["ErrorText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, Inherited}, {10, 10}}, 
    CellElementSpacings -> {"CellMinHeight" -> 0, "ClosedCellHeight" -> 0}, 
    FontWeight -> Bold, FontColor -> RGBColor[1, 0, 0]], 
   Cell[
    StyleData["WarningText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, 35}, {0, 0}}, FontSize -> 
    14, GridBoxOptions -> {BaseStyle -> {}}], 
   Cell["Template Boxes", "Section"], 
   Cell[
    StyleData["MoreInfoOpenerIconTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> GraphicsBox[{
            Thickness[0.090909], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 3.25}], 
              Thickness[0.045818], 
              RGBColor[0.62744, 0.62744, 0.62744, 1.]}, StripOnInput -> 
             False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQ3b48/JRRi4jD3qBpin2m8g5n6j32194VhvNZnvdo
vPUVdoh2sntxM0feQfiT4/m0q0IOQNnSwtvyDmxCIvbHYoQcMhnyG1lUFRyk
eR/oTlAAym/iKVyTjeAf2aiXt/gggt+odqhtubgiXP+k00CLYxXh5mdrf5t+
d7Ii3P5LDPeYOE8pwt33vfTBHMGnig4w98P4j5fOPqJgIArn539oPRlyUBSu
/9OGgOxZ5mJw88sKgS5aKwa3XzOm/9DXF2Jw98H4MPfD+DD/wfTD/A8zHxY+
MPth4QdzHyx80cMfAIsMpwk=
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQXTFnkfJOGwmHsNp125Lq+R1g/G8aMf2HvvI4KP39
VvrgjgAGH6b+c19wicp0IQeBKrPVduICcL6EWjDr4ksCqPLTBeH8211/U7+n
CMH5S+7v45tjLAznX773gHvySwS/qdhtyrc2ETj/04aA7FnfReH8RxHi2y8e
EIPzNUHOzRCH8x8vnX1E4QOCP+/98mPe5RJw/o9goAoWSTj/6vMs7W/TJR0O
X9ZOlVwk4PB2no3OlVsI/jKgcRs+STlonhY4vstCzCFoh1zr64syDkBXssXP
EHO4WvFSzbADwa9JNAo1yJKA82H+gfFh/oXxA29JA7Ug+GY2e4OmJQrB+f83
VX/aMEEQzrerjFhhelYAzofFB3r8AgApYdcE
                "]}]}, {
              FaceForm[
               RGBColor[0.62744, 0.62744, 0.62744, 1.]]}, StripOnInput -> 
             False]}, ImageSize -> {11., 11.}, 
           PlotRange -> {{0., 11.}, {0., 11.}}, AspectRatio -> Automatic], 
         True -> GraphicsBox[{
            Thickness[0.090909], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 3.25}], 
              Thickness[0.045818], 
              RGBColor[0.5, 0.5, 0.5, 1.]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "]]}, {
              FaceForm[
               RGBColor[0.5, 0.5, 0.5, 1.]]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQ3b48/JRRi4jD3qBpin2m8g5n6j32194VhvNZnvdo
vPUVdoh2sntxM0feQfiT4/m0q0IOQNnSwtvyDmxCIvbHYoQcMhnyG1lUFRyk
eR/oTlAAym/iKVyTjeAf2aiXt/gggt+odqhtubgiXP+k00CLYxXh5mdrf5t+
d7Ii3P5LDPeYOE8pwt33vfTBHMGnig4w98P4j5fOPqJgIArn539oPRlyUBSu
/9OGgOxZ5mJw88sKgS5aKwa3XzOm/9DXF2Jw98H4MPfD+DD/wfTD/A8zHxY+
MPth4QdzHyx80cMfAIsMpwk=
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQXTFnkfJOGwmHsNp125Lq+R1g/G8aMf2HvvI4KP39
VvrgjgAGH6b+c19wicp0IQeBKrPVduICcL6EWjDr4ksCqPLTBeH8211/U7+n
CMH5S+7v45tjLAznX773gHvySwS/qdhtyrc2ETj/04aA7FnfReH8RxHi2y8e
EIPzNUHOzRCH8x8vnX1E4QOCP+/98mPe5RJw/o9goAoWSTj/6vMs7W/TJR0O
X9ZOlVwk4PB2no3OlVsI/jKgcRs+STlonhY4vstCzCFoh1zr64syDkBXssXP
EHO4WvFSzbADwa9JNAo1yJKA82H+gfFh/oXxA29JA7Ug+GY2e4OmJQrB+f83
VX/aMEEQzrerjFhhelYAzofFB3r8AgApYdcE
                "]}]}, {
              FaceForm[
               RGBColor[0.99998, 0.99998, 0.99998, 1.]]}, StripOnInput -> 
             False]}, ImageSize -> {11., 11.}, 
           PlotRange -> {{0., 11.}, {0., 11.}}, AspectRatio -> Automatic]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["MoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        DynamicModuleBox[{
         RSNB`mPosRegion$$, RSNB`attachPos$$, RSNB`offsetPos$$, 
          RSNB`horizontalRegion$$, RSNB`verticalRegion$$, 
          RSNB`chooseAttachLocation$$}, 
         TagBox[
          TemplateBox[{
            TemplateBox[{}, "MoreInfoOpenerIconTemplate"], 
            "\"Click for more information\""}, "PrettyTooltipTemplate"], 
          EventHandlerTag[{"MouseDown" :> AttachCell[
              ParentBox[
               EvaluationBox[]], #2, 
              RSNB`chooseAttachLocation$$[], 
              RemovalConditions -> {"EvaluatorQuit", "MouseClickOutside"}], 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         DynamicModuleValues :> {{DownValues[RSNB`mPosRegion$$] = {HoldPattern[
                RSNB`mPosRegion$$[]] :> RSNB`mPosRegion$$[
                Ceiling[MousePosition["WindowScaled"] 3]], HoldPattern[
                RSNB`mPosRegion$$[
                 Pattern[RSNB`reg, {
                   Blank[Integer], 
                   Blank[Integer]}]]] :> RSNB`reg, HoldPattern[
                RSNB`mPosRegion$$[
                 BlankNullSequence[]]] :> None}}, {
           DownValues[RSNB`attachPos$$] = {HoldPattern[
                RSNB`attachPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[RSNB`h$], 
                RSNB`verticalRegion$$[RSNB`v$]}}}, {
           DownValues[RSNB`offsetPos$$] = {HoldPattern[
                RSNB`offsetPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[4 - RSNB`h$], 
                RSNB`verticalRegion$$[4 - RSNB`v$]}}}, {
           DownValues[RSNB`horizontalRegion$$] = {HoldPattern[
                RSNB`horizontalRegion$$[1]] :> Left, HoldPattern[
                RSNB`horizontalRegion$$[2]] :> Center, HoldPattern[
                RSNB`horizontalRegion$$[3]] :> Right}}, {
           DownValues[RSNB`verticalRegion$$] = {HoldPattern[
                RSNB`verticalRegion$$[1]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[2]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[3]] :> Top}}, {
           DownValues[RSNB`chooseAttachLocation$$] = {HoldPattern[
                RSNB`chooseAttachLocation$$[]] :> 
              With[{RSNB`p$ = RSNB`mPosRegion$$[]}, 
                Apply[Sequence, {
                  RSNB`offsetPos$$[RSNB`p$], {-30, 30}, 
                  RSNB`attachPos$$[RSNB`p$]}]]}}}], BoxBaselineShift -> -0.5, 
        BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["InlineMoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        DynamicModuleBox[{
         RSNB`mPosRegion$$, RSNB`attachPos$$, RSNB`offsetPos$$, 
          RSNB`horizontalRegion$$, RSNB`verticalRegion$$, 
          RSNB`chooseAttachLocation$$}, 
         TagBox[
          TemplateBox[{
            TemplateBox[{}, "MoreInfoOpenerIconTemplate"], #4}, 
           "PrettyTooltipTemplate"], 
          EventHandlerTag[{"MouseDown" :> AttachCell[
              ParentBox[
               EvaluationBox[]], #2, 
              RSNB`chooseAttachLocation$$[], 
              RemovalConditions -> {"EvaluatorQuit", "MouseClickOutside"}], 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         DynamicModuleValues :> {{DownValues[RSNB`mPosRegion$$] = {HoldPattern[
                RSNB`mPosRegion$$[]] :> RSNB`mPosRegion$$[
                Ceiling[MousePosition["WindowScaled"] 3]], HoldPattern[
                RSNB`mPosRegion$$[
                 Pattern[RSNB`reg, {
                   Blank[Integer], 
                   Blank[Integer]}]]] :> RSNB`reg, HoldPattern[
                RSNB`mPosRegion$$[
                 BlankNullSequence[]]] :> None}}, {
           DownValues[RSNB`attachPos$$] = {HoldPattern[
                RSNB`attachPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[RSNB`h$], 
                RSNB`verticalRegion$$[RSNB`v$]}}}, {
           DownValues[RSNB`offsetPos$$] = {HoldPattern[
                RSNB`offsetPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[4 - RSNB`h$], 
                RSNB`verticalRegion$$[4 - RSNB`v$]}}}, {
           DownValues[RSNB`horizontalRegion$$] = {HoldPattern[
                RSNB`horizontalRegion$$[1]] :> Left, HoldPattern[
                RSNB`horizontalRegion$$[2]] :> Center, HoldPattern[
                RSNB`horizontalRegion$$[3]] :> Right}}, {
           DownValues[RSNB`verticalRegion$$] = {HoldPattern[
                RSNB`verticalRegion$$[1]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[2]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[3]] :> Top}}, {
           DownValues[RSNB`chooseAttachLocation$$] = {HoldPattern[
                RSNB`chooseAttachLocation$$[]] :> 
              With[{RSNB`p$ = RSNB`mPosRegion$$[]}, 
                Apply[Sequence, {
                  RSNB`offsetPos$$[RSNB`p$], {-30, 30}, 
                  RSNB`attachPos$$[RSNB`p$]}]]}}}], BoxBaselineShift -> -0.5, 
        BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["ClickToCopyTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> TagBox[
           GridBox[{{#, 
              ButtonBox[
               GraphicsBox[{
                 GrayLevel[0.85], 
                 Thickness[
                  NCache[2/45, 0.044444]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 18.}, {
                   9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 18.}, {12., 
                   18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {16.5, 4.5}, {
                   16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {15.75, 17.25}, {
                   15.75, 5.25}, {6.75, 5.25}, {6.75, 17.25}, {8.25, 17.25}, {
                   8.25, 18.}}, {{9.75, 17.25}, {12.75, 17.25}, {12.75, 
                   16.5}, {9.75, 16.5}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 14.25}, {
                  14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{8.25, 12.}, {
                  14.25, 12.}, {14.25, 11.25}, {8.25, 11.25}}, {{8.25, 
                  9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25, 9.}}, {{8.25, 
                  7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 6.75}}}]}, 
                ImageSize -> 12], ButtonFunction :> Null, 
               Appearance -> {
                "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
               Evaluator -> Automatic, Method -> "Preemptive"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}},
             AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], True -> 
         DynamicModuleBox[{RSNB`clickTime$$ = 0., RSNB`timeout$$ = 3.}, 
           TagBox[
            GridBox[{{#, 
               TagBox[
                ButtonBox[
                 DynamicBox[
                  ToBoxes[
                   Refresh[
                    If[AbsoluteTime[] - RSNB`clickTime$$ > RSNB`timeout$$, 
                    RawBoxes[
                    TemplateBox[{
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[0.65], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], True -> GraphicsBox[{
                    RGBColor[0.98824, 0.41961, 0.20392], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "\"Click to copy to the clipboard\""},
                     "PrettyTooltipTemplate"]], 
                    RawBoxes[
                    TemplateBox[{
                    GraphicsBox[{
                    RGBColor[0, 
                    NCache[2/3, 0.66667], 0], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], "\"Copied\""}, 
                    "PrettyTooltipTemplate"]]], UpdateInterval -> 1, 
                    TrackedSymbols :> {RSNB`clickTime$$}], StandardForm], 
                  Evaluator -> "System"], 
                 ButtonFunction :> (RSNB`clickTime$$ = AbsoluteTime[]; 
                  CopyToClipboard[
                    BinaryDeserialize[
                    BaseDecode[#2], Defer]]), 
                 Appearance -> {
                  "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
                 Method -> "Queued", Evaluator -> "System"], 
                MouseAppearanceTag["LinkHand"]]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
           DynamicModuleValues :> {}]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["PrettyTooltipTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        TooltipBox[#, 
         FrameBox[
          
          StyleBox[#2, "Text", FontColor -> 
           RGBColor[0.53725, 0.53725, 0.53725], FontSize -> 12, FontWeight -> 
           "Plain", FontTracking -> "Plain", StripOnInput -> False], 
          Background -> RGBColor[0.96078, 0.96078, 0.96078], FrameStyle -> 
          RGBColor[0.89804, 0.89804, 0.89804], FrameMargins -> 8, 
          StripOnInput -> False], TooltipDelay -> 0.1, 
         TooltipStyle -> {Background -> None, CellFrame -> 0}], 
        Annotation[#, 
         Framed[
          Style[
          RSNB`$$tooltip, "Text", FontColor -> 
           RGBColor[0.53725, 0.53725, 0.53725], FontSize -> 12, FontWeight -> 
           "Plain", FontTracking -> "Plain"], Background -> 
          RGBColor[0.96078, 0.96078, 0.96078], FrameStyle -> 
          RGBColor[0.89804, 0.89804, 0.89804], FrameMargins -> 8], 
         "Tooltip"]& ]& )}], 
   Cell[
    StyleData["ToolsGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            FrameBox[
             ButtonBox[
              StyleBox[
              "\"Add Snapshot\"", "Text", FontFamily -> "Source Sans Pro", 
               FontSize -> 11, StripOnInput -> False], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1953907064413444837; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "AddSnapshot"; (
                    Needs["DemonstrationResource`DefinitionNotebook`" -> 
                    None]; DemonstrationResource`DefinitionNotebook`\
AddManipulateSnapshot[
                    ButtonNotebook[]])]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1953907064413444837]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> GrayLevel[1], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.5489, 0.092317, 0.067842], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.88722, 0.77308, 0.76696], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3Ixe3bNuZmzrI0hiAgGyhCvCF3L11cERnS
IyGIiYDiQFmChtw4dnSaoRZQ/URl2UOtjS8unIcgIBsoAhQHygLV4DHkwc0b
M0z0gCqX+Xp8efkCLfyBIkBxoCxQDVAlLkPWpSUB1Sz2cPr9/TvWeASKA2WB
aoAqsRpy48TxXinhPlmx9w/u40kPQFmgGqBKoHpMQ3bWVwOt2FGYSzBdAdUA
VQLVYxqywM0BKHVv726ChgDVAFUC1UM0QpI0hD1FWxUohRmemACoBqgSqB5u
CBBQbghVXELdMKFK7FAlnVAlxVIr7zyjRi6GAMrLEzigsGQjFVDREPyAmHoH
APEDg3E=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I9T2bD1Ykb/TUgiAgGyhCvCEPrlzYnea7
XJsNEwHFgbIEDblz8vA6R0Wg+tV6HOc9pV/HaUEQkA0UAYoDZYFq8Bjy6Nb1
9S4qQJW7LAW+pOj/yTZBRkARoDhQFqgGqBKXIfuKooFqdljw/8wwQjMBgoDi
QFmgGqBKrIbcOXV0uS7HCh32D0m6WE2AIKAsUA1QJVA9piHHOsqAVpxwFsdj
AgQB1QBVAtVjGrI1xAIo9SRCnaAhQDVAlUD1EI2QJA1hr7GRBkphhicmAqoB
qgSqhxsCBJQbQhWXUDdMqBI7VEknVEmx1Mo7z6iRiyGA8vIEDigs2UgFVDQE
PyCm3gEAQ+/Dcg==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I69evv3z58gsGgGygCPGGvHjx4vv371g9
DhQHyhI05OXLl79//wYK/vz8+cTEvsVuDhAEZANFgOJAWaAaPIY8f/4cYsKT
k8en6ar3SAgiI6AIUBxiDlAlLkO+fv0K5D4/d7ZfXgLNBAgCigNlgWqAKrEa
AnTkv3///vz8OdvMAKsJEASUBaoBqoR7CtmQT58+AdmXli7CYwIEAdUAVQLV
Yxry8+dPIHtNZAhBQ4BqQCH/8ydEIyRJQ9h//vwBsjHDExMB1QBVAtXDDQEC
yg2hikuoGyZUiR2qpBOqpFhq5Z1n1MjFEEB5eQIHFJZspAIqGoIfEFPvAACe
kBKf
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> GrayLevel[0.9], 
              Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
              Automatic], FrameStyle -> Directive[
               GrayLevel[0.9], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Template Input\"", "Text", FontFamily -> "Source Sans Pro",
                  FontSize -> 11, StripOnInput -> False], 
                "\"Format selection automatically using appropriate \
documentation styles\""}, "PrettyTooltipTemplate"], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    7071186616034202283; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "Template Input"; 
                    DefinitionNotebookClient`TemplateInput[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    7071186616034202283]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> GrayLevel[1], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.5489, 0.092317, 0.067842], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.88722, 0.77308, 0.76696], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3Ixe3bNuZmzrI0hiAgGyhCvCF3L11cERnS
IyGIiYDiQFmChtw4dnSaoRZQ/URl2UOtjS8unIcgIBsoAhQHygLV4DHkwc0b
M0z0gCqX+Xp8efkCLfyBIkBxoCxQDVAlLkPWpSUB1Sz2cPr9/TvWeASKA2WB
aoAqsRpy48TxXinhPlmx9w/u40kPQFmgGqBKoHpMQ3bWVwOt2FGYSzBdAdUA
VQLVYxqywM0BKHVv726ChgDVAFUC1UM0QpI0hD1FWxUohRmemACoBqgSqB5u
CBBQbghVXELdMKFK7FAlnVAlxVIr7zyjRi6GAMrLEzigsGQjFVDREPyAmHoH
APEDg3E=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I9T2bD1Ykb/TUgiAgGyhCvCEPrlzYnea7
XJsNEwHFgbIEDblz8vA6R0Wg+tV6HOc9pV/HaUEQkA0UAYoDZYFq8Bjy6Nb1
9S4qQJW7LAW+pOj/yTZBRkARoDhQFqgGqBKXIfuKooFqdljw/8wwQjMBgoDi
QFmgGqBKrIbcOXV0uS7HCh32D0m6WE2AIKAsUA1QJVA9piHHOsqAVpxwFsdj
AgQB1QBVAtVjGrI1xAIo9SRCnaAhQDVAlUD1EI2QJA1hr7GRBkphhicmAqoB
qgSqhxsCBJQbQhWXUDdMqBI7VEknVEmx1Mo7z6iRiyGA8vIEDigs2UgFVDQE
PyCm3gEAQ+/Dcg==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I69evv3z58gsGgGygCPGGvHjx4vv371g9
DhQHyhI05OXLl79//wYK/vz8+cTEvsVuDhAEZANFgOJAWaAaPIY8f/4cYsKT
k8en6ar3SAgiI6AIUBxiDlAlLkO+fv0K5D4/d7ZfXgLNBAgCigNlgWqAKrEa
AnTkv3///vz8OdvMAKsJEASUBaoBqoR7CtmQT58+AdmXli7CYwIEAdUAVQLV
Yxry8+dPIHtNZAhBQ4BqQCH/8ydEIyRJQ9h//vwBsjHDExMB1QBVAtXDDQEC
yg2hikuoGyZUiR2qpBOqpFhq5Z1n1MjFEEB5eQIHFJZspAIqGoIfEFPvAACe
kBKf
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> GrayLevel[0.9], 
              Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
              Automatic], FrameStyle -> Directive[
               GrayLevel[0.9], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Literal Input\"", "Text", FontFamily -> "Source Sans Pro", 
                 FontSize -> 11, StripOnInput -> False], 
                "\"Format selection as literal Wolfram Language code\""}, 
               "PrettyTooltipTemplate"], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4937992391498864149; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Literal Input"; 
                    DefinitionNotebookClient`LiteralInput[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4937992391498864149]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> GrayLevel[1], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.5489, 0.092317, 0.067842], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.88722, 0.77308, 0.76696], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3Ixe3bNuZmzrI0hiAgGyhCvCF3L11cERnS
IyGIiYDiQFmChtw4dnSaoRZQ/URl2UOtjS8unIcgIBsoAhQHygLV4DHkwc0b
M0z0gCqX+Xp8efkCLfyBIkBxoCxQDVAlLkPWpSUB1Sz2cPr9/TvWeASKA2WB
aoAqsRpy48TxXinhPlmx9w/u40kPQFmgGqBKoHpMQ3bWVwOt2FGYSzBdAdUA
VQLVYxqywM0BKHVv726ChgDVAFUC1UM0QpI0hD1FWxUohRmemACoBqgSqB5u
CBBQbghVXELdMKFK7FAlnVAlxVIr7zyjRi6GAMrLEzigsGQjFVDREPyAmHoH
APEDg3E=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I9T2bD1Ykb/TUgiAgGyhCvCEPrlzYnea7
XJsNEwHFgbIEDblz8vA6R0Wg+tV6HOc9pV/HaUEQkA0UAYoDZYFq8Bjy6Nb1
9S4qQJW7LAW+pOj/yTZBRkARoDhQFqgGqBKXIfuKooFqdljw/8wwQjMBgoDi
QFmgGqBKrIbcOXV0uS7HCh32D0m6WE2AIKAsUA1QJVA9piHHOsqAVpxwFsdj
AgQB1QBVAtVjGrI1xAIo9SRCnaAhQDVAlUD1EI2QJA1hr7GRBkphhicmAqoB
qgSqhxsCBJQbQhWXUDdMqBI7VEknVEmx1Mo7z6iRiyGA8vIEDigs2UgFVDQE
PyCm3gEAQ+/Dcg==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I69evv3z58gsGgGygCPGGvHjx4vv371g9
DhQHyhI05OXLl79//wYK/vz8+cTEvsVuDhAEZANFgOJAWaAaPIY8f/4cYsKT
k8en6ar3SAgiI6AIUBxiDlAlLkO+fv0K5D4/d7ZfXgLNBAgCigNlgWqAKrEa
AnTkv3///vz8OdvMAKsJEASUBaoBqoR7CtmQT58+AdmXli7CYwIEAdUAVQLV
Yxry8+dPIHtNZAhBQ4BqQCH/8ydEIyRJQ9h//vwBsjHDExMB1QBVAtXDDQEC
yg2hikuoGyZUiR2qpBOqpFhq5Z1n1MjFEEB5eQIHFJZspAIqGoIfEFPvAACe
kBKf
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> GrayLevel[0.9], 
              Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
              Automatic], FrameStyle -> Directive[
               GrayLevel[0.9], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Subscripted Variable\"", "Text", FontFamily -> 
                 "Source Sans Pro", FontSize -> 11, StripOnInput -> False], 
                "\"Insert subscripted variable placeholder\""}, 
               "PrettyTooltipTemplate"], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    168721804526114855; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "Subscripted Variable"; 
                    DefinitionNotebookClient`SubscriptInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    168721804526114855]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> GrayLevel[1], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.5489, 0.092317, 0.067842], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.88722, 0.77308, 0.76696], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3Ixe3bNuZmzrI0hiAgGyhCvCF3L11cERnS
IyGIiYDiQFmChtw4dnSaoRZQ/URl2UOtjS8unIcgIBsoAhQHygLV4DHkwc0b
M0z0gCqX+Xp8efkCLfyBIkBxoCxQDVAlLkPWpSUB1Sz2cPr9/TvWeASKA2WB
aoAqsRpy48TxXinhPlmx9w/u40kPQFmgGqBKoHpMQ3bWVwOt2FGYSzBdAdUA
VQLVYxqywM0BKHVv726ChgDVAFUC1UM0QpI0hD1FWxUohRmemACoBqgSqB5u
CBBQbghVXELdMKFK7FAlnVAlxVIr7zyjRi6GAMrLEzigsGQjFVDREPyAmHoH
APEDg3E=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I9T2bD1Ykb/TUgiAgGyhCvCEPrlzYnea7
XJsNEwHFgbIEDblz8vA6R0Wg+tV6HOc9pV/HaUEQkA0UAYoDZYFq8Bjy6Nb1
9S4qQJW7LAW+pOj/yTZBRkARoDhQFqgGqBKXIfuKooFqdljw/8wwQjMBgoDi
QFmgGqBKrIbcOXV0uS7HCh32D0m6WE2AIKAsUA1QJVA9piHHOsqAVpxwFsdj
AgQB1QBVAtVjGrI1xAIo9SRCnaAhQDVAlUD1EI2QJA1hr7GRBkphhicmAqoB
qgSqhxsCBJQbQhWXUDdMqBI7VEknVEmx1Mo7z6iRiyGA8vIEDigs2UgFVDQE
PyCm3gEAQ+/Dcg==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I69evv3z58gsGgGygCPGGvHjx4vv371g9
DhQHyhI05OXLl79//wYK/vz8+cTEvsVuDhAEZANFgOJAWaAaPIY8f/4cYsKT
k8en6ar3SAgiI6AIUBxiDlAlLkO+fv0K5D4/d7ZfXgLNBAgCigNlgWqAKrEa
AnTkv3///vz8OdvMAKsJEASUBaoBqoR7CtmQT58+AdmXli7CYwIEAdUAVQLV
Yxry8+dPIHtNZAhBQ4BqQCH/8ydEIyRJQ9h//vwBsjHDExMB1QBVAtXDDQEC
yg2hikuoGyZUiR2qpBOqpFhq5Z1n1MjFEEB5eQIHFJZspAIqGoIfEFPvAACe
kBKf
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> GrayLevel[0.9], 
              Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
              Automatic], FrameStyle -> Directive[
               GrayLevel[0.9], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            ActionMenuBox[
             FrameBox[
              ButtonBox[
               StyleBox[
                
                TemplateBox[{
                 "\"Cells\"", 
                  "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\
\""}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
                StripOnInput -> False], ButtonFunction :> 
               With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                 Quiet[
                  
                  Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                   Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4246462567992284997; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[Null]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4246462567992284997]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                   Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
               Dynamic[
                 FEPrivate`If[
                  CurrentValue[Enabled], 
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   FontColor -> GrayLevel[1], 
                    TaggingRules -> {"ButtonHovering" -> True}}, {
                   FontColor -> RGBColor[0.5489, 0.092317, 0.067842], 
                    TaggingRules -> {"ButtonHovering" -> False}}], {
                  FontColor -> RGBColor[0.88722, 0.77308, 0.76696], 
                   TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                 "System"], Appearance -> {"Default" -> Image[CompressedData["

1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3Ixe3bNuZmzrI0hiAgGyhCvCF3L11cERnS
IyGIiYDiQFmChtw4dnSaoRZQ/URl2UOtjS8unIcgIBsoAhQHygLV4DHkwc0b
M0z0gCqX+Xp8efkCLfyBIkBxoCxQDVAlLkPWpSUB1Sz2cPr9/TvWeASKA2WB
aoAqsRpy48TxXinhPlmx9w/u40kPQFmgGqBKoHpMQ3bWVwOt2FGYSzBdAdUA
VQLVYxqywM0BKHVv726ChgDVAFUC1UM0QpI0hD1FWxUohRmemACoBqgSqB5u
CBBQbghVXELdMKFK7FAlnVAlxVIr7zyjRi6GAMrLEzigsGQjFVDREPyAmHoH
APEDg3E=
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I9T2bD1Ykb/TUgiAgGyhCvCEPrlzYnea7
XJsNEwHFgbIEDblz8vA6R0Wg+tV6HOc9pV/HaUEQkA0UAYoDZYFq8Bjy6Nb1
9S4qQJW7LAW+pOj/yTZBRkARoDhQFqgGqBKXIfuKooFqdljw/8wwQjMBgoDi
QFmgGqBKrIbcOXV0uS7HCh32D0m6WE2AIKAsUA1QJVA9piHHOsqAVpxwFsdj
AgQB1QBVAtVjGrI1xAIo9SRCnaAhQDVAlUD1EI2QJA1hr7GRBkphhicmAqoB
qgSqhxsCBJQbQhWXUDdMqBI7VEknVEmx1Mo7z6iRiyGA8vIEDigs2UgFVDQE
PyCm3gEAQ+/Dcg==
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I69evv3z58gsGgGygCPGGvHjx4vv371g9
DhQHyhI05OXLl79//wYK/vz8+cTEvsVuDhAEZANFgOJAWaAaPIY8f/4cYsKT
k8en6ar3SAgiI6AIUBxiDlAlLkO+fv0K5D4/d7ZfXgLNBAgCigNlgWqAKrEa
AnTkv3///vz8OdvMAKsJEASUBaoBqoR7CtmQT58+AdmXli7CYwIEAdUAVQLV
Yxry8+dPIHtNZAhBQ4BqQCH/8ydEIyRJQ9h//vwBsjHDExMB1QBVAtXDDQEC
yg2hikuoGyZUiR2qpBOqpFhq5Z1n1MjFEEB5eQIHFJZspAIqGoIfEFPvAACe
kBKf
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True]}, Background -> GrayLevel[0.9], 
               Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
               Automatic], FrameStyle -> Directive[
                GrayLevel[0.9], 
                AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
              False, StripOnInput -> False], {
             "\"Insert comment for reviewer\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    7544339529118446740; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Insert comment for reviewer"; 
                    DefinitionNotebookClient`CommentInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    7544339529118446740]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Mark/unmark selected cells as comments\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1923617830619908649; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Mark/unmark selected cells as comments"; 
                    DefinitionNotebookClient`CommentToggle[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1923617830619908649]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Mark/unmark selected cells as excluded\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1439263868824766472; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Mark/unmark selected cells as excluded"; 
                    DefinitionNotebookClient`ExclusionToggle[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1439263868824766472]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]]}, Appearance -> None, Method -> "Queued"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}}, 
          AutoDelete -> False, 
          GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
              GrayLevel[0.9]}}, 
          GridBoxFrame -> {
           "Columns" -> False, "RowsIndexed" -> {1 -> GrayLevel[0.9]}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {
           "Columns" -> {5, {0.5}, 5}, "Rows" -> {{Automatic}}}, FrameStyle -> 
          GrayLevel[0.75]], "Grid"], ButtonBoxOptions -> {Enabled -> Dynamic[
            Not[
             TrueQ[DefinitionNotebookClient`$ButtonsDisabled]], 
            TrackedSymbols :> {DefinitionNotebookClient`$ButtonsDisabled}]}, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["MainGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            TagBox[
             GridBox[{{
                GraphicsBox[
                 RasterBox[CompressedData["
1:eJztnXvQFlUdx0ktEbIsMsnKUWqaLkOYKWNNiHSbQUrtRdLUerm8L+AlbJBE
ur7gIFlmzeQ4iOIlanTGCyT4RzPZWDKKt1E0TSP6OcZomhI5mpFmnc/s7rTv
tufsue3zHHj44+Mg7HMu39095/wu5+xhs8/pm7vXiBEjzh2p/tM3a/GUhQtn
LZl+gPqfGQvOPWPegsGBqQsWDc4bXHj07L3VXw4oZir2Ucj7dmlOyel2O3qR
0YptOaMTaE+vsULxn5wLE2hPL/Fexc6S/jvzv+t2u3qFW0vaF2xIoF29wLQa
7QumJdC+3Zl9FVsM+m/Jr+l2O3dXlhi0Lzg/gXbujrxT8ZKF/i/l13a7vZ1m
kuKNLZZ/vYX2Bde12I79FZMT0LvKKsUOxQ8Vh0Yue7KD9gXHRG7DOMWPFC8o
Lk9A7yrLSn3/t+JmifOc7KPY7KH/5vy3ofVPUaxTvFYqeygBvavM1+jwgGKm
+K9LzvbQvuAszzpHKmYb7vu8BPSucnyDFs8qlirGOpR5oOJvAfpvV7zNob6D
FRco/tpQ7ucS0LvKREtN/qVYo/ioRZmrArQvsBmrafvP87bZlHlEAnpXeYeH
NhsVM6R+nD5Sho+5vrym0Ys6v6i406NMl3e4U+wt2bzro9GTivMUb83Lep3i
rgjaF9yVlzkirwMb7c+eZb2q2CsBvet4OlAnbKeVim9F1L6AMhmL/hFYzlMJ
6KzjvhZ0S417EtBZx4YE9GmbWxLQWcflCejTNisT0FnHUAL6tM13EtBZx9wu
acIak3nxMcWjir/I8PhkTAYS0FnHcR3S+znFz3Itxku9b4P15nsUp0tm7/09
Ut1TE9BZxxEtar4z1/yzktkarm0bpRhU/DGwHYcnoLOOsS3o/rxkfqO3R2oj
du85kvmRfdpzUAI668AufDWS7ujzbWkvpsPYdI9jm16R/9nRqfJUJP1/L1kc
63uKryg+rHh95La+QbIxzbZN2xLQt4m7I+lfx4uS5f4wfsSK8fI8f9+y/rsT
0LeJdS3qX4Y1568VJ4nffFzlEos61yWgb5U3KT6t+KZivcRb57nwJ8WXJcwv
yW9vaqiHvuFjwZfHOuzNHdaa52yCZPG31ZLZOjF89LHA/xeyPmSuf8yhPvrO
PHW1ZPHXj0icmHMB8bg+xUWK28Uu/6bbsEbBv++7TpmQl+FbPxrdofiBZGPj
uyzrxT4hh+frihslm+u7rWUIN+Z98rkHyyO3hTUh+SCLFcfK8DU1efTkKMRa
t8fiGcUmyfy9NyjWijn3sw7mZ5+9GfwmNJZkgjghuRWsrXnmX05Ab3xm+HbJ
oyjbuqzR50gWn/y84gDJ7GzyUh61KPdXeRmu9+CslvtLHO4TeV194h+7DeUh
yfZw1WlE+74rWWy/TiPWLP3SnC+y2kN/xq7nWuozWn+hUp8uf6otyFWcLfo1
I+vJGZZacX/uaKjvdI97cHFLfZ+rqW9ZS/VVuVfxbkO/eaY/6agV788thjrJ
43L1nR3eQt+HDPWxZlvdsvZotJ+hDeRbnuCoUwFxgI2Guq/yKPOJiH1fZVEf
Ntb6lrS/TcxzIbb0Ek/tC7BZdPMBazzXfXpXROr7WrH3kzD3+OSFmdgq2drF
VO+i/B6E6A/9hnZc5ljWnAh93yjutsgYyWzrGNoz3x/dUB+5tnV5xYwpX1Jc
I5lv4MW8THJreUbIl/1A5TeMow9o2vKCoxZHBfb9EcVbHLUvOETi2ME2ORus
t8u2EjngrPlt1oDMrdiRh5V+f5rh+j4HDcYE9BvtbP0POohvh/g0se1s1h2L
S3/mmXO1dZk3iO+enJcxSvR2pas94OMP4pn4UKD2Bezl+aen/jbjLXt7Tsr/
3G/oL/PnhlzrMyQ7d+B3+b8xLmE3f1yxIC9L509+3LH/Oxz7XLZtYzFd/Gxk
m1z5WZLNzfMM5RCrfX/pN325juVriv0uvLO8C18zlGdaA4foX2fbxuJMR+23
WpZb+HZ09xc/XHnO1I3t15auIT7yY0PbXMYGF//Y/Ja0L3CxkS+1LBNf+fOa
MtiTMq50LTEn3fNYjQ+eZ2jbpyzbNtqhv0tb1h5cbORTLcu831DGmsq1A4Zr
q/PqDMO1J1q2bbxlX6/sgPYFV1q2abxleQ8byqj64K4yXFvNzVwTQf9TLfvK
ve9EbtBSy/aAbezjQUMZiyvX6vIrGJPK8XDGLN1+OuaZKZZtu9Shv8ta1t7F
R/2yQ7mbDOUwh36mdO21mutOK10zylAmMXPWxOW1lImtDn2GM1vS3jVGs8Oh
7BsM5ZBrxVqyGMuqcanHZbg9i66mvELshq+KXS6dTz4xGk2PrL1PjNJF/xWG
cm7Kr+E+YFthYxU+IHwr2GC8l9hk2Ga6ODZjUX9e1iLLdl3moT9gq8Y6f4J1
ss8e9Fcc6phuKIf7XthK+BYGxe4coDL47SbmZeADrs4pdYyVsLg4Phvb9YcO
fEch/rcxlvVwRoApj6u8jsXHxvti80zguyMXaGTp98TVmnyxsDKg3wVod4in
9vhMHwms/yiH+kzxBnzJ1bUdPucL8t9tz68j94n54KeSvSsja+pZXlNWlY9J
vHwEfPi2z2EB6wdTHM+WOQ51mnw/0O/Yhzo+KMPXSXXgh3Jd8zRxp9jHHBgf
10aq9woHbYh7mfxcxBQPDtCeZ548SlOOLrHR2yJrX7Be7OKPMc4cKXjCUaOh
hvJ4J33PEWJdbvK5Mceb8idi0GQjN/XfB5d8ZOzlpnMx0Mg1nw3fqmlNTi7M
vS1rX6Czkdvau3uxo1ZN5zjBb8X+DBj2Lp2s+TfGIuYo1/hKKFUfNfGCtvIP
WQO6xDrgJxblMh/0i348Z38Sz1rdWpP3h5zHhzqsewFaFzY7cbLQM1macD2H
DX1+aVk2Objk4vI+sHZhrMHvPyjDxynsZvK6OKPimS7pXgbbDr8COdCbpd38
W3K5XfPAWQ/9xqOuP0i2fsOnxJpjUyJ6l8FHgk2zotRf9gQcK5ltzl6BWPtI
C5Y76g+smdtek3QC7GD2g7C3ZZLY2wL4H8hLID5IfnHI/iP8QRM87gHrNfZh
p7Y/RAca3S6ZrcEYH2KzVGFvGXvMmL+vlsy2dtl/hx/Mdz875/Hpctq6BX3H
R8O6Hvud5yvGXlgXiDmRa8CeTPy/Tbla+JN994nyu5mS7Tftht70jTnlG5Lt
uY2Rqxqbmy36cUlgHbyHvNv4Cjq5byfF/ddVbM8fYM9/jHg168r5+X1v2ocU
yq5w/oBLvICzL3z2xpkgv5/cBvz+rPV/If+fJ+dLymdPAs+za64qsdpxkeqv
wlzP2sn3rJ8qKZ+9Cgd59gt9yJmNtXefMYk8GV1OXQgpnj1cELpfjbPB8Bv4
7Ftn3cc6jDGtrbP3IMWztwumRuoj6zxy19gzSry3bp4mDkB8eyDXvK29ulWO
S0BnHabczBB4ntkfj68NG455sFvnruj27qZAG+dmp8ZQAjrriJGzkTopfnun
YHfwVTaR8ncmXc9z3BW5LwGddYTGDIjD8X639f0FxsfQM7yeTkDnOkLOXiXn
AX9B+fsjMfffV78/QnzySc+y8Pd12sdsg8/Zw2jMN3Dq7F7snFjf3zmypnzq
ZG+NT56f7jyibmKbK08eON96sskNjfE9B5szR/gW1hqx//7URIsyO03T2fP4
hsmXdYnHkRe9vaFcE+RIH+hQH+8wfqNnG8o9PgG9q+jyt8it4JyrulxkG0LO
YTvbs058GzNFH+9se4+vD0Ol9jHm4ne33eNmotvf35wsWWynHGdre5+dD4zV
+JH5Rmtsf/4xHvpPjtyGQyX7ti65ijZzSqehv/u3WP51Dtpf32I7iOlMSkDv
TkM+Z7HvzkSvfn+8E5xvoX/o+XF70MO6xHQu0xbx35+xBzumGfSflkD7eoG6
70zemkC7egVyfMox9p3ifq7nHsK4sKT/ii7U3+uwn2Nbjs8Z/3sI55ScbrfD
m/8Cm+a3ew==
                  "], {{0, 0}, {96, 100}}, {0, 255}, ColorFunction -> 
                  RGBColor], {
                 ImageSize -> {Automatic, 32}, 
                  ImagePadding -> {{5, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.25], PlotRange -> {{0, 96}, {0, 100}}, 
                  ImageSizeRaw -> {96., 100.}}], 
                StyleBox[
                 TagBox[
                  GridBox[{{
                    StyleBox[
                    "\"Demonstration Resource\"", FontFamily -> 
                    "Source Sans Pro", FontWeight -> "SemiBold", StripOnInput -> 
                    False], 
                    StyleBox[
                    "\"DEFINITION NOTEBOOK\"", FontFamily -> 
                    "Source Sans Pro", FontTracking -> "SemiCondensed", 
                    FontVariations -> {"CapsType" -> "AllSmallCaps"}, 
                    StripOnInput -> False]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "ColumnsIndexed" -> {2 -> GrayLevel[1]}, 
                    "Rows" -> {{None}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Grid"], FontSize -> 24, FontColor -> GrayLevel[1], 
                 StripOnInput -> False]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],
             "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
            "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
            TemplateBox[{
              StyleBox[
               
               TemplateBox[{
                "\"Demonstration Repository\"", "\" \[RightGuillemet]  \""}, 
                "RowDefault"], "Text", FontColor -> GrayLevel[1], 
               StripOnInput -> False], 
              "https://resources.wolframcloud.com/DemonstrationRepository"}, 
             "HyperlinkURL"]}, {
            TemplateBox[{
              
              TemplateBox[{
               "\"Open Sample\"", 
                "\"View a completed sample definition notebook\""}, 
               "PrettyTooltipTemplate"], Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 1953775238739395670; (
                DefinitionNotebookClient`$ClickedButton = "Open Sample"; 
                DefinitionNotebookClient`ViewExampleNotebook[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[1953775238739395670]]& , 
              "\"View a completed sample definition notebook\"", False}, 
             "OrangeButtonTemplate"], 
            TemplateBox[{
              
              TemplateBox[{
               "\"Style Guidelines\"", 
                "\"View general guidelines for authoring resources\""}, 
               "PrettyTooltipTemplate"], Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 6116318327813659236; (
                DefinitionNotebookClient`$ClickedButton = "Style Guidelines"; 
                SystemOpen[
                 "https://demonstrations.wolfram.com/guidelines.php"]), 
               DefinitionNotebookClient`ButtonCodeID[6116318327813659236]]& , 
              "\"View general guidelines for authoring resources\"", False}, 
             "OrangeButtonTemplate"], 
            TemplateBox[{
              TemplateBox[{
                TagBox[
                 GridBox[{{"\"Tools\"", 
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[1], 
                    AbsoluteThickness[1.], 
                    LineBox[{{0, 0}, {0, 10}, {10, 10}, {10, 0}, {0, 0}}], 
                    LineBox[{{5, 2.5}, {5, 7.5}}], 
                    LineBox[{{2.5, 5}, {7.5, 5}}]}, ImageSize -> 12, 
                    PlotRangePadding -> 1.5], True -> GraphicsBox[{
                    GrayLevel[1], 
                    AbsoluteThickness[1.], 
                    LineBox[{{0, 0}, {0, 10}, {10, 10}, {10, 0}, {0, 0}}], 
                    LineBox[{{2.5, 5}, {7.5, 5}}]}, ImageSize -> 12, 
                    PlotRangePadding -> 1.5]}, 
                    Dynamic[
                    CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]],
                     BaselinePosition -> Scaled[0.05]]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.35}}}], "Grid"], 
                "\"Toggle documentation toolbar\""}, "PrettyTooltipTemplate"],
               Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 1908941340027841465; (
                DefinitionNotebookClient`$ClickedButton = "Tools"; 
                DefinitionNotebookClient`ToggleToolbar[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[1908941340027841465]]& , 
              "\"Toggle documentation toolbar\"", False}, 
             "OrangeButtonTemplate"], 
            TagBox[
             
             GridBox[{{"\"\"", "\"\""}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxDividers -> {
               "ColumnsIndexed" -> {2 -> True}, "Rows" -> {{False}}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{2}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.5}}}, FrameStyle -> 
              RGBColor[0.57555, 0.57556, 0.57554]], "Grid"], 
            TemplateBox[{
              
              TemplateBox[{
               "\"Check\"", "\"Check notebook for potential errors\""}, 
               "PrettyTooltipTemplate"], Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 3941141659801008137; (
                DefinitionNotebookClient`$ClickedButton = "Check"; 
                DefinitionNotebookClient`CheckDefinitionNotebook[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[3941141659801008137]]& , 
              "\"Check notebook for potential errors\"", False}, 
             "OrangeButtonTemplate"], 
            ActionMenuBox[
             TemplateBox[{
               TemplateBox[{"\"Deploy\"", 
                 TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                "RowDefault"], Annotation[
               DefinitionNotebookClient`$ButtonCodeID = 6058522267645278627; 
                Null, 
                DefinitionNotebookClient`ButtonCodeID[6058522267645278627]]& ,
                "\"\"", True}, "OrangeButtonTemplate"], {
             "\"To my cloud account\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    8267267753343341396; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "DeployCustom"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "To my cloud account"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource["Demonstration", 
                    ButtonNotebook[], "CloudPrivate"], "ShowProgress" -> 
                    True]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    8267267753343341396]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"Publicly in the cloud\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1628664177886538591; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "DeployCustom"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Publicly in the cloud"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource["Demonstration", 
                    ButtonNotebook[], "CloudPublic"], "ShowProgress" -> 
                    True]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1628664177886538591]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]]}, Appearance -> None, Method -> "Queued"], 
            
            ItemBox[
             StyleBox[
              DynamicBox[
               ToBoxes[
                CurrentValue[
                 EvaluationNotebook[], {TaggingRules, "StatusMessage"}, ""], 
                StandardForm], Initialization :> (CurrentValue[
                  EvaluationNotebook[], {TaggingRules, "StatusMessage"}] = 
                "")], "Text", 
              GrayLevel[1], StripOnInput -> False], ItemSize -> Fit, 
             Alignment -> Right, StripOnInput -> False], 
            DynamicBox[
             ToBoxes[
              If[
               CurrentValue[
                EvaluationNotebook[], {
                TaggingRules, "SubmissionReviewData", "Review"}, False], 
               RawBoxes[
                TemplateBox[{
                  TemplateBox[{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.06349], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBWIWIGZigIEX9mCqQd8Bwv+Bnc/A54CiHs5HV6/ngJUP
p2HmwdTp4FCHTvOhqYfZrw2lhdDk0fno6tHcD1PPwOSAnY+uns8BAE8cGz4=

                    "]]}, {
                    FaceForm[
                    GrayLevel[1]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgB2IWIGZigAEJBwjNB6EblHHwX9ijqofxoeoYhKC0Bg4+
Hw4apk4Uap8aDr4QDhqqDu4uVRx8URw0TJ001D5lHHwJHDRUHYMclFbCwZfG
QUPVNSjgp+HmIWgAG/wcEg==
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10EEKgCAQhWGpFtEyEAYGggQj6RKeoSMErbuCR0/IWfTgCcPwy7fR9XrO
u3fOTXWGOp2zM+ZvH2170nv+e2sFH0ijt45/XxJp9NgRPHYAb63kHhu9tf2H
eU8aPfbS9kxawAvxnrSCx3c3XzbS6JX4RFrAS34B53ckaw==
                    "]]}, {
                    FaceForm[
                    GrayLevel[1]]}, StripOnInput -> False]}, ImageSize -> 15, 
                    PlotRange -> {{0., 15.75}, {0., 16.5}}, AspectRatio -> 
                    1.15], "\"Submit Update\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "ColumnsIndexed" -> {2 -> 0.5}, 
                    "Rows" -> {{0}}}], "Grid"], 
                    "\"Submit changes to update your demonstration submission\
\""}, "PrettyTooltipTemplate"], Annotation[
                  DefinitionNotebookClient`$ButtonCodeID = 
                    2169377100431483360; (
                    DefinitionNotebookClient`$ClickedButton = "SubmitUpdate"; 
                    With[{RSNB`nb = ButtonNotebook[]}, 
                    DefinitionNotebookClient`DisplayStripe[RSNB`nb, 
                    DefinitionNotebookClient`SubmitRepositoryUpdate[RSNB`nb], 
                    "ShowProgress" -> True]]), 
                   DefinitionNotebookClient`ButtonCodeID[
                   2169377100431483360]]& , 
                  "\"Submit changes to update your demonstration \
submission\"", True}, "OrangeButtonTemplate"]], 
               RawBoxes[
                TemplateBox[{
                  TemplateBox[{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.06349], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBWIWIGZigIEX9mCqQd8Bwv+Bnc/A54CiHs5HV6/ngJUP
p2HmwdTp4FCHTvOhqYfZrw2lhdDk0fno6tHcD1PPwOSAnY+uns8BAE8cGz4=

                    "]]}, {
                    FaceForm[
                    GrayLevel[1]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgB2IWIGZigAEJBwjNB6EblHHwX9ijqofxoeoYhKC0Bg4+
Hw4apk4Uap8aDr4QDhqqDu4uVRx8URw0TJ001D5lHHwJHDRUHYMclFbCwZfG
QUPVNSjgp+HmIWgAG/wcEg==
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10EEKgCAQhWGpFtEyEAYGggQj6RKeoSMErbuCR0/IWfTgCcPwy7fR9XrO
u3fOTXWGOp2zM+ZvH2170nv+e2sFH0ijt45/XxJp9NgRPHYAb63kHhu9tf2H
eU8aPfbS9kxawAvxnrSCx3c3XzbS6JX4RFrAS34B53ckaw==
                    "]]}, {
                    FaceForm[
                    GrayLevel[1]]}, StripOnInput -> False]}, ImageSize -> 15, 
                    PlotRange -> {{0., 15.75}, {0., 16.5}}, AspectRatio -> 
                    1.15], "\"Submit to Repository\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "ColumnsIndexed" -> {2 -> 0.5}, 
                    "Rows" -> {{0}}}], "Grid"], 
                    "\"Submit your demonstration to the Wolfram Demonstration \
Repository\""}, "PrettyTooltipTemplate"], Annotation[
                  DefinitionNotebookClient`$ButtonCodeID = 
                    850153740503147579; (
                    DefinitionNotebookClient`$ClickedButton = "Submit"; 
                    With[{RSNB`nb = ButtonNotebook[]}, 
                    DefinitionNotebookClient`DisplayStripe[RSNB`nb, 
                    DefinitionNotebookClient`SubmitRepository[RSNB`nb], 
                    "ShowProgress" -> True]]), 
                   DefinitionNotebookClient`ButtonCodeID[
                   850153740503147579]]& , 
                  "\"Submit your demonstration to the Wolfram Demonstration \
Repository\"", True}, "OrangeButtonTemplate"]]], StandardForm], Evaluator -> 
             "System", SingleEvaluation -> True]}}, 
          GridBoxAlignment -> {
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {-1 -> Right}, 
            "Rows" -> {{Center}}}, AutoDelete -> False, 
          GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
              RGBColor[0.1511, 0.15112, 0.15108], 
              RGBColor[0.7508, 0.17868, 0.085283]}}, 
          GridBoxFrame -> {
           "Columns" -> False, 
            "RowsIndexed" -> {
             1 -> RGBColor[0.1511, 0.15112, 0.15108], 2 -> 
              RGBColor[0.7508, 0.17868, 0.085283]}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {
           "Columns" -> {5, {0.9}, 5}, 
            "RowsIndexed" -> {1 -> 1.1, 2 -> 1.3, 3 -> 0.25}}, FrameStyle -> 
          RGBColor[0.1511, 0.15112, 0.15108]], "Grid"], 
        ButtonBoxOptions -> {Enabled -> Dynamic[
            Not[
             TrueQ[DefinitionNotebookClient`$ButtonsDisabled]], 
            TrackedSymbols :> {DefinitionNotebookClient`$ButtonsDisabled}]}, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["ReviewerCommentLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{#, 
           TemplateBox[{
             GraphicsBox[
              RasterBox[CompressedData["
1:eJztnXvQFlUdx0ktEbIsMsnKUWqaLkOYKWNNiHSbQUrtRdLUerm8L+AlbJBE
ur7gIFlmzeQ4iOIlanTGCyT4RzPZWDKKt1E0TSP6OcZomhI5mpFmnc/s7rTv
tufsue3zHHj44+Mg7HMu39095/wu5+xhs8/pm7vXiBEjzh2p/tM3a/GUhQtn
LZl+gPqfGQvOPWPegsGBqQsWDc4bXHj07L3VXw4oZir2Ucj7dmlOyel2O3qR
0YptOaMTaE+vsULxn5wLE2hPL/Fexc6S/jvzv+t2u3qFW0vaF2xIoF29wLQa
7QumJdC+3Zl9FVsM+m/Jr+l2O3dXlhi0Lzg/gXbujrxT8ZKF/i/l13a7vZ1m
kuKNLZZ/vYX2Bde12I79FZMT0LvKKsUOxQ8Vh0Yue7KD9gXHRG7DOMWPFC8o
Lk9A7yrLSn3/t+JmifOc7KPY7KH/5vy3ofVPUaxTvFYqeygBvavM1+jwgGKm
+K9LzvbQvuAszzpHKmYb7vu8BPSucnyDFs8qlirGOpR5oOJvAfpvV7zNob6D
FRco/tpQ7ucS0LvKREtN/qVYo/ioRZmrArQvsBmrafvP87bZlHlEAnpXeYeH
NhsVM6R+nD5Sho+5vrym0Ys6v6i406NMl3e4U+wt2bzro9GTivMUb83Lep3i
rgjaF9yVlzkirwMb7c+eZb2q2CsBvet4OlAnbKeVim9F1L6AMhmL/hFYzlMJ
6KzjvhZ0S417EtBZx4YE9GmbWxLQWcflCejTNisT0FnHUAL6tM13EtBZx9wu
acIak3nxMcWjir/I8PhkTAYS0FnHcR3S+znFz3Itxku9b4P15nsUp0tm7/09
Ut1TE9BZxxEtar4z1/yzktkarm0bpRhU/DGwHYcnoLOOsS3o/rxkfqO3R2oj
du85kvmRfdpzUAI668AufDWS7ujzbWkvpsPYdI9jm16R/9nRqfJUJP1/L1kc
63uKryg+rHh95La+QbIxzbZN2xLQt4m7I+lfx4uS5f4wfsSK8fI8f9+y/rsT
0LeJdS3qX4Y1568VJ4nffFzlEos61yWgb5U3KT6t+KZivcRb57nwJ8WXJcwv
yW9vaqiHvuFjwZfHOuzNHdaa52yCZPG31ZLZOjF89LHA/xeyPmSuf8yhPvrO
PHW1ZPHXj0icmHMB8bg+xUWK28Uu/6bbsEbBv++7TpmQl+FbPxrdofiBZGPj
uyzrxT4hh+frihslm+u7rWUIN+Z98rkHyyO3hTUh+SCLFcfK8DU1efTkKMRa
t8fiGcUmyfy9NyjWijn3sw7mZ5+9GfwmNJZkgjghuRWsrXnmX05Ab3xm+HbJ
oyjbuqzR50gWn/y84gDJ7GzyUh61KPdXeRmu9+CslvtLHO4TeV194h+7DeUh
yfZw1WlE+74rWWy/TiPWLP3SnC+y2kN/xq7nWuozWn+hUp8uf6otyFWcLfo1
I+vJGZZacX/uaKjvdI97cHFLfZ+rqW9ZS/VVuVfxbkO/eaY/6agV788thjrJ
43L1nR3eQt+HDPWxZlvdsvZotJ+hDeRbnuCoUwFxgI2Guq/yKPOJiH1fZVEf
Ntb6lrS/TcxzIbb0Ek/tC7BZdPMBazzXfXpXROr7WrH3kzD3+OSFmdgq2drF
VO+i/B6E6A/9hnZc5ljWnAh93yjutsgYyWzrGNoz3x/dUB+5tnV5xYwpX1Jc
I5lv4MW8THJreUbIl/1A5TeMow9o2vKCoxZHBfb9EcVbHLUvOETi2ME2ORus
t8u2EjngrPlt1oDMrdiRh5V+f5rh+j4HDcYE9BvtbP0POohvh/g0se1s1h2L
S3/mmXO1dZk3iO+enJcxSvR2pas94OMP4pn4UKD2Bezl+aen/jbjLXt7Tsr/
3G/oL/PnhlzrMyQ7d+B3+b8xLmE3f1yxIC9L509+3LH/Oxz7XLZtYzFd/Gxk
m1z5WZLNzfMM5RCrfX/pN325juVriv0uvLO8C18zlGdaA4foX2fbxuJMR+23
WpZb+HZ09xc/XHnO1I3t15auIT7yY0PbXMYGF//Y/Ja0L3CxkS+1LBNf+fOa
MtiTMq50LTEn3fNYjQ+eZ2jbpyzbNtqhv0tb1h5cbORTLcu831DGmsq1A4Zr
q/PqDMO1J1q2bbxlX6/sgPYFV1q2abxleQ8byqj64K4yXFvNzVwTQf9TLfvK
ve9EbtBSy/aAbezjQUMZiyvX6vIrGJPK8XDGLN1+OuaZKZZtu9Shv8ta1t7F
R/2yQ7mbDOUwh36mdO21mutOK10zylAmMXPWxOW1lImtDn2GM1vS3jVGs8Oh
7BsM5ZBrxVqyGMuqcanHZbg9i66mvELshq+KXS6dTz4xGk2PrL1PjNJF/xWG
cm7Kr+E+YFthYxU+IHwr2GC8l9hk2Ga6ODZjUX9e1iLLdl3moT9gq8Y6f4J1
ss8e9Fcc6phuKIf7XthK+BYGxe4coDL47SbmZeADrs4pdYyVsLg4Phvb9YcO
fEch/rcxlvVwRoApj6u8jsXHxvti80zguyMXaGTp98TVmnyxsDKg3wVod4in
9vhMHwms/yiH+kzxBnzJ1bUdPucL8t9tz68j94n54KeSvSsja+pZXlNWlY9J
vHwEfPi2z2EB6wdTHM+WOQ51mnw/0O/Yhzo+KMPXSXXgh3Jd8zRxp9jHHBgf
10aq9woHbYh7mfxcxBQPDtCeZ548SlOOLrHR2yJrX7Be7OKPMc4cKXjCUaOh
hvJ4J33PEWJdbvK5Mceb8idi0GQjN/XfB5d8ZOzlpnMx0Mg1nw3fqmlNTi7M
vS1rX6Czkdvau3uxo1ZN5zjBb8X+DBj2Lp2s+TfGIuYo1/hKKFUfNfGCtvIP
WQO6xDrgJxblMh/0i348Z38Sz1rdWpP3h5zHhzqsewFaFzY7cbLQM1macD2H
DX1+aVk2Objk4vI+sHZhrMHvPyjDxynsZvK6OKPimS7pXgbbDr8COdCbpd38
W3K5XfPAWQ/9xqOuP0i2fsOnxJpjUyJ6l8FHgk2zotRf9gQcK5ltzl6BWPtI
C5Y76g+smdtek3QC7GD2g7C3ZZLY2wL4H8hLID5IfnHI/iP8QRM87gHrNfZh
p7Y/RAca3S6ZrcEYH2KzVGFvGXvMmL+vlsy2dtl/hx/Mdz875/Hpctq6BX3H
R8O6Hvud5yvGXlgXiDmRa8CeTPy/Tbla+JN994nyu5mS7Tftht70jTnlG5Lt
uY2Rqxqbmy36cUlgHbyHvNv4Cjq5byfF/ddVbM8fYM9/jHg168r5+X1v2ocU
yq5w/oBLvICzL3z2xpkgv5/cBvz+rPV/If+fJ+dLymdPAs+za64qsdpxkeqv
wlzP2sn3rJ8qKZ+9Cgd59gt9yJmNtXefMYk8GV1OXQgpnj1cELpfjbPB8Bv4
7Ftn3cc6jDGtrbP3IMWztwumRuoj6zxy19gzSry3bp4mDkB8eyDXvK29ulWO
S0BnHabczBB4ntkfj68NG455sFvnruj27qZAG+dmp8ZQAjrriJGzkTopfnun
YHfwVTaR8ncmXc9z3BW5LwGddYTGDIjD8X639f0FxsfQM7yeTkDnOkLOXiXn
AX9B+fsjMfffV78/QnzySc+y8Pd12sdsg8/Zw2jMN3Dq7F7snFjf3zmypnzq
ZG+NT56f7jyibmKbK08eON96sskNjfE9B5szR/gW1hqx//7URIsyO03T2fP4
hsmXdYnHkRe9vaFcE+RIH+hQH+8wfqNnG8o9PgG9q+jyt8it4JyrulxkG0LO
YTvbs058GzNFH+9se4+vD0Ol9jHm4ne33eNmotvf35wsWWynHGdre5+dD4zV
+JH5Rmtsf/4xHvpPjtyGQyX7ti65ijZzSqehv/u3WP51Dtpf32I7iOlMSkDv
TkM+Z7HvzkSvfn+8E5xvoX/o+XF70MO6xHQu0xbx35+xBzumGfSflkD7eoG6
70zemkC7egVyfMox9p3ifq7nHsK4sKT/ii7U3+uwn2Nbjs8Z/3sI55ScbrfD
m/8Cm+a3ew==
               "], {{0, 0}, {96, 100}}, {0, 255}, ColorFunction -> 
               RGBColor], {
              ImageSize -> {Automatic, 12}, ImagePadding -> {{5, 0}, {0, 0}}, 
               BaselinePosition -> Scaled[0.25], 
               PlotRange -> {{0, 96}, {0, 100}}, 
               ImageSizeRaw -> {96., 100.}}], 
             "Wolfram Demonstration Repository Reviewer"}, 
            "PrettyTooltipTemplate"]}}, 
         GridBoxAlignment -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, AutoDelete -> 
         False, GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"]& )}], 
   Cell[
    StyleData["CommentReplyIcon"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.076923], 
         FaceForm[{#, 
           Opacity[1.]}], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{1.5, 7.5}, {6.5, 11.5}, {
          6.5, 3.5}}}], 
         FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJw9U2tIVEEUvq5iVkttZmdfuo/ZbQukJGKVqPBLUTGJ0h9hVLIJRYhUVJj2
AjGRWCKiF0llZWRCSEnZExEJ06CotaiQyH7EIrthT3u6NXPn3jswnDlzzzlz
vu8711u9vWJzsqIoSXwv5tuk6IsgrQvOnLf+1CRC5ZKbg3WJAIJV90rNJoJF
XOR6sebI6W3pyXq8DxccIoGwa+uxj/v/McxNbTxZOJ3w4Rkb+ZVgWGk2ZbcQ
Yfm0V+07Jhm6St7vzVhI2JfBT78ZCkI8cj2hqe/xxaIJJm0PoWEssCgtzvCc
lzlYYwXP5iUYHpXlHV4xasXLeh4wyKCWX2fDqcJwbfQ+w4F83vGQDT1fJ1/U
dzJ842bsih1XB3hiI0NzrPyOq9mBPb1tjpyNDBXci5U7MVQnLhji4nMsE+9W
c6ARL3i3XSWbXNiiLi8EzPxbbqydsaD73LgHJ2wp/OiFoKVJ8Ui+Chha6M3T
H8NZUMPm+XB9p8h0QtATjvtxqUh0SBgV76QHZN+lszReA5pNQ66o1+8HV6O3
rdWCBIcTuKHxHJ4NQdO1sx4Nxxy4VYBug2dVt4lMnB/vGCi7TSgWz/504Etk
VbXlNSGkCmWHqFYbJXziYXlT7VKXEdLq2DDMwyvvksTZZ5W4OgiCjmCVFTUP
dh+3HSKJ8y9hqUogIfqn83PkCUndQoTLQsZ2gpperL3fQJLXIMEn5F5GaD3D
l50g2O3OIkhiCUf7v8/fMJOMuRPTmT2FjLlU+0ghY471+dV93epzr/sPPaJz
u3Ev65sNX/8//gP5Ei2u
          "]]}, AspectRatio -> Automatic, ImageSize -> {13., 13.}, 
        PlotRange -> {{0., 13.}, {0., 13.}}]& )}], 
   Cell[
    StyleData["CommentCellLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            StyleBox[#, FontSize -> 11], "\[SpanFromLeft]"}, {
            StyleBox[
             DynamicBox[
              ToBoxes[
               DateString[
                TimeZoneConvert[
                 DateObject[#2, TimeZone -> 0]], {
                "Month", "/", "Day", "/", "Year", " ", "Hour24", ":", 
                 "Minute"}], StandardForm], SingleEvaluation -> True], 
             FontSize -> 9], 
            ItemBox[
             ButtonBox[
              TagBox[
               StyleBox[
                TemplateBox[{"\"Reply \[RightGuillemet]\"", 
                  StyleBox["\"Reply \[RightGuillemet]\"", "HyperlinkActive"], 
                  BaseStyle -> "Hyperlink"}, "MouseoverTemplate"], FontSize -> 
                9], 
               MouseAppearanceTag["LinkHand"]], BaseStyle -> "Hyperlink", 
              ButtonFunction :> (SelectionMove[
                 ParentCell[
                  EvaluationCell[]], After, Cell]; 
               DefinitionNotebookClient`CommentInsert[]), Evaluator -> 
              Automatic, Method -> "Queued"], Alignment -> Right]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Grid"], "CommentLabel", ShowStringCharacters -> False]& )}], 
   Cell[
    StyleData["OrangeButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
        ButtonBox[
         StyleBox[#, "Text", FontFamily -> "Source Sans Pro", FontWeight -> 
          "SemiBold", FontTracking -> "Condensed", FontSize -> 13, FontColor -> 
          Dynamic[
            FEPrivate`If[
             CurrentValue[Enabled], 
             GrayLevel[1], 
             RGBColor[0.88722, 0.77308, 0.76696]], Evaluator -> "System"], 
          StripOnInput -> False], ButtonFunction :> 
         With[{RSNB`nb$ = ButtonNotebook[]}, 
           If[#4, CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
             ProgressIndicator[Appearance -> "Necklace"]]; 
           With[{RSNB`$cp$ = $ContextPath}, 
             Quiet[
              
              Block[{$ContextPath = RSNB`$cp$, 
                ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                False, DefinitionNotebookClient`$ButtonCodeID = None}, 
               Internal`WithLocalSettings[
                DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                   ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                   "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                 Annotation[
                 DefinitionNotebookClient`$ButtonCodeID = 2045406886999866622; 
                  DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    #2[]]]], 
                  DefinitionNotebookClient`ButtonCodeID[2045406886999866622]],
                  DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
               Null]]]; 
           CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = ""; 
           Null], FrameMargins -> {{5, 5}, {0, 0}}, 
         Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYI9uuJUYJobchmTZGFisJTpAUhCMgGihBvyC5t0Tly
Qj0SgpgIKA6UJWjIdi3RSVJYtMMRUBaoBo8hu3VEJ0vjMwGCgGqAKnEZMl8B
uy8wEVAlVkOAjiTSBAiCewrZkKXKwiQZAlSPach0GWL9AkFA9RCNkCQNYU/A
GymYCKgebggQUG4IVVxC3TChSuxQJZ1QJcVSK+9QJRdTqzyhVslGKqKiIfgB
MfUOAGAkpIY=
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYI9uuJUYJobchOXaENOjyrtDkgCMgGihBvyB5dkXXa
3Mu12TARUBwoS9CQ3brCK7XZsZoAQUBZoBo8huzVFQW6HI8JEARUA1SJyxCg
xwmaAEFAlVgNATqSSBMgCO4pZEM26/CRZAhQPaYha7Q5STIEqB6iEZKkIWz8
kYI1muCGAAHlhlDFJdQNE6rEDlXSCVVSLLXyDlVyMbXKE2qVbKQiKhqCHxBT
7wAAuk3GZQ==
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYI9uuJUYJobcjZGK8nK+Z9uXsTgoBsoAjxhhx11H61
ZwtWjwPFgbIEDTnha/n96SOg4K8vn67O6tgRag5BQDZQBCgOlAWqwWPIYWuV
b4/ug2w8e3S9nexybTZkBBQBigNlgWqAKnEZ8mz9MiD3zaXTKw150UyAIKA4
UBaoBqgSqyEnfMz//fnz59fPTe7qWE2AIKAsUA1QJVA9piH3pnUB2XfWzMNj
AgQB1QBVAtVjGvLhwikQO82HoCFANUCVQPUQjZAkDWH/eP0SyMYMT0wEVANU
CVQPNwQIKDeEKi6hbphQJXaokk6okmKplXeokoupVZ5Qq2QjFVHREPyAmHoH
AG0Lmsg=
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True]}, Background -> 
         RGBColor[0.7508, 0.17868, 0.085283], Method -> "Queued", 
         ImageSize -> {All, 23}, Evaluator -> Automatic], FrameStyle -> 
        Directive[
          RGBColor[0.7508, 0.17868, 0.085283], 
          AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> False, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["SuggestionGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        FrameBox[
         AdjustmentBox[
          TagBox[
           GridBox[{{
              
              TemplateBox[{#2, #3, {16., 16.}, {{1., 17.}, {1., 17.}}}, 
               "SuggestionIconTemplate"], 
              
              PaneBox[#, ImageSizeAction -> "ShrinkToFit", BaselinePosition -> 
               Baseline, ImageSize -> Full], 
              RowBox[{
                AdjustmentBox[
                 TemplateBox[{
                   ActionMenuBox[
                    TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    EdgeForm[
                    Directive[
                    GrayLevel[1, 0], 
                    Thickness[0.025]]], 
                    FaceForm[#4], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], #5, 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0], True -> 
                    GraphicsBox[{
                    EdgeForm[
                    Directive[#5, 
                    Thickness[0.025]]], 
                    FaceForm[#2], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], 
                    GrayLevel[1], 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], #6, Appearance -> None, 
                    Method -> "Queued"], "\"View suggestions\""}, 
                  "PrettyTooltipTemplate"], BoxBaselineShift -> -0.5], 
                " "}]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
            False, GridBoxItemSize -> {
             "Columns" -> {Automatic, Automatic, Fit}, 
              "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
          BoxMargins -> {{0.25, -0.5}, {0.15, -0.15}}], 
         RoundingRadius -> {13, 75}, Background -> #4, FrameStyle -> None, 
         FrameMargins -> {{0, 8}, {0, 0}}, ImageMargins -> {{0, 0}, {5, 5}}, 
         StripOnInput -> False], "Text", FontColor -> #5, FontSize -> 14, 
        FontFamily -> "Source Sans Pro", FontWeight -> "SemiBold", 
        FontTracking -> "Plain", 
        PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
        LineBreakWithin -> False]& )}], 
   Cell[
    StyleData["SuggestionIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.055556], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO
m+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD
jI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh
MRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d
            "]]}, 
          FaceForm[#]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{8.1753, 7.4169}, {
             7.7969, 11.308}, {7.7969, 13.38}, {10.12, 13.38}, {10.12, 
             11.308}, {9.7415, 7.4169}, {8.1753, 7.4169}}, CompressedData["
1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA
qBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed
HTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2
qB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa
m8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5
N5G6
             "]}]}, 
          FaceForm[#2]]}, ImageSize -> #3, PlotRange -> #4, AspectRatio -> 
        Automatic, BaselinePosition -> Scaled[0.1]]& )}], 
   Cell[
    StyleData["FormEditValuesButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TemplateBox[{
         TagBox[
          PaneBox[
           PaneSelectorBox[{False -> GraphicsBox[{
                Thickness[0.066667], 
                FaceForm[{
                  GrayLevel[0.75], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
                   3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
                   3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
                   0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
                   3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
                   0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
                   3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, {{{7.5, 
                  5.6426}, {6.475, 5.6426}, {5.643, 6.4746}, {5.643, 
                  7.4996}, {5.643, 8.5256}, {6.475, 9.3576}, {7.5, 9.3576}, {
                  8.525, 9.3576}, {9.357, 8.5256}, {9.357, 7.4996}, {9.357, 
                  6.4746}, {8.525, 5.6426}, {7.5, 5.6426}}, {{7.5, 10.287}, {
                  5.962, 10.287}, {4.714, 9.0386}, {4.714, 7.4996}, {4.714, 
                  5.9616}, {5.962, 4.7136}, {7.5, 4.7136}, {9.038, 4.7136}, {
                  10.286, 5.9616}, {10.286, 7.4996}, {10.284, 9.0386}, {9.038,
                   10.285}, {7.5, 10.287}}, CompressedData["
1:eJxTTMoPSmViYGAwBGIQHdN/6KvGHQ2Hu1tbai4YCzn4mHc6JqSqOZhLHYhW
cBR2sNxyomxfvIrD+5OHndZm8jncPPc9+PFTFYfHx2fsnjaBxSENBNSUHRKN
Qg20VjI62JvG7fLsUXZYuveguFowk8PZMyCg6LCZp3BN9+1/9tb3/Xun5yk4
mDRsd2h6xO4AtO3pBSVpOB9sXpoEXH3jVOfunOcicPOMQWCzKNw+vySBCEsT
Ibh7gIYLNTsIw917Uen2z7osPrh/QN6N6WeB+9cFaPpvoDmH2paHn9ok6tAu
BvIhk4PAy+3rmYH2lu+bL6V/95/91523uv6mSjg8rBJZ5/6Q3cH4yEa9PGVp
OJ+Zs0s+GegvmHqlvtJC6bOKcPOmfGOLnwEMF5h9u9X5ubcCww3mHrC3n6nA
3QsLd5h/wOEOjBeYf2HxBgsP/bsqbI1TNR1g4QWMBR6mbE14eIKdpaIFD28P
kMPZNRxg8QHjw+ILph4WnyjmAd0Nsw+WHmDugbkb5l5YeoKJw9TB/AszBxYe
MHtg4WXIsUYmCugOWHjC3AkLbxgfFh8w9bD4gpkHi0+YfbD4Rk//AAQ8Rd0=

                  "], CompressedData["
1:eJxdVA1IU1EYHStG2VxrxByaa073dFtRkiYheW9/EmhkGaWW/WjaEs1ICxEJ
zX6sCCuzX7USSiLRKHEWESWSaVFWhpkWlaiZWk5Lnab19p7nCj0Yb/fx3e/n
nPMdj5jk9XFSiUSyg/853r/GGtO6ODO1z+yylme70ePLtrc3fDXSwkyu+qi3
Oztn8ceSJi1FvC72R9TyIB3Nyl9xMrHTTJcHfWsufaCjT+qvr6pcNI+evjbs
21HmQbfkVv/2aTVTF+tryadDevp2TYwy4r6ZDsm2XQx9p6fH1M0vh96aqER4
DDSpc/SW7axJvFdgoNNK50TtDDTRthtXanR7OSqXmo+pI40TdTlapT3SvS7N
hxb9LHkaYuVoe4O+xT7OiX3Gc9SzxX4w4Q9HjY6EFo7GC89knDJiScWzSo4G
Vw7wN3zEex2TdVD3vKNc4GRfIwcTHqbmmeiroXA+xIs+58ceGDPRsFMX9qiy
9eL3FjOtO/Doqmu5B8PlRwbx38rjpJh/t/Anj5twb+kEjt5m2v+GB+i9lrrw
sIS3GcU4ngecHVU1h91YvEHm+OfK8iWrsh/XX9ewetuFQdWsnxhhYBXrd/WX
9NlltUo2T4rlTG8GUbB5fQUC5AwPfpoFH72cGV4ingqG5/48zdSNCjnDW+h3
qpzxMZenq0orY3yJ+EkZn2L+cQLcC2p0d/ZZRglwrw0J4CVpJ9CL0K5/P4Ge
xPw2Ar0NO9LX9BDoUTz3EehVxGOQQM8OuTxMlTC944x9QDz2BfkqIn/f/3DC
ldXT5DdOtxRrWD9OFn1i2oia9et7yaTJ36Bm8+SGp3pd+DuLzWuLfREd8kzJ
8Hia5JdppQqG19ryc3E5sXKGZ2vwlLQZPC/A+7CzI0LB+EhffDto02YF4ysn
Npq/Imd8Lp3XeLnDXcb41o8N7v9cIGV6GOntfrzEc5xAL02q/mWv4kcJ9BT2
R5PSpBom0NvC0JtOwQYbgR5X7k7uO1LXQ6BXv+KKgOHqPgI9F201PlfWDhLo
3X5t173vKRK2DzhjXxCPfUI+7BvqYR/RD/YV/UJXmAe6w7zwA+ABvwBe8BPg
Cb8B3tgL8AG/Al/YK/AJvwPf8EPoAX4JvcBPoSf4LfQGH4Ae4dfQ6//+/w8B
rcVF
                  "]}]}, AspectRatio -> Automatic, ImageSize -> {15., 15.}, 
               PlotRange -> {{0., 15.}, {0., 15.}}], True -> GraphicsBox[{
                Thickness[0.066667], 
                FaceForm[{
                  GrayLevel[0.25], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
                   3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
                   3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
                   0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
                   3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
                   0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
                   3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, {{{7.5, 
                  5.6426}, {6.475, 5.6426}, {5.643, 6.4746}, {5.643, 
                  7.4996}, {5.643, 8.5256}, {6.475, 9.3576}, {7.5, 9.3576}, {
                  8.525, 9.3576}, {9.357, 8.5256}, {9.357, 7.4996}, {9.357, 
                  6.4746}, {8.525, 5.6426}, {7.5, 5.6426}}, {{7.5, 10.287}, {
                  5.962, 10.287}, {4.714, 9.0386}, {4.714, 7.4996}, {4.714, 
                  5.9616}, {5.962, 4.7136}, {7.5, 4.7136}, {9.038, 4.7136}, {
                  10.286, 5.9616}, {10.286, 7.4996}, {10.284, 9.0386}, {9.038,
                   10.285}, {7.5, 10.287}}, CompressedData["
1:eJxTTMoPSmViYGAwBGIQHdN/6KvGHQ2Hu1tbai4YCzn4mHc6JqSqOZhLHYhW
cBR2sNxyomxfvIrD+5OHndZm8jncPPc9+PFTFYfHx2fsnjaBxSENBNSUHRKN
Qg20VjI62JvG7fLsUXZYuveguFowk8PZMyCg6LCZp3BN9+1/9tb3/Xun5yk4
mDRsd2h6xO4AtO3pBSVpOB9sXpoEXH3jVOfunOcicPOMQWCzKNw+vySBCEsT
Ibh7gIYLNTsIw917Uen2z7osPrh/QN6N6WeB+9cFaPpvoDmH2paHn9ok6tAu
BvIhk4PAy+3rmYH2lu+bL6V/95/91523uv6mSjg8rBJZ5/6Q3cH4yEa9PGVp
OJ+Zs0s+GegvmHqlvtJC6bOKcPOmfGOLnwEMF5h9u9X5ubcCww3mHrC3n6nA
3QsLd5h/wOEOjBeYf2HxBgsP/bsqbI1TNR1g4QWMBR6mbE14eIKdpaIFD28P
kMPZNRxg8QHjw+ILph4WnyjmAd0Nsw+WHmDugbkb5l5YeoKJw9TB/AszBxYe
MHtg4WXIsUYmCugOWHjC3AkLbxgfFh8w9bD4gpkHi0+YfbD4Rk//AAQ8Rd0=

                  "], CompressedData["
1:eJxdVA1IU1EYHStG2VxrxByaa073dFtRkiYheW9/EmhkGaWW/WjaEs1ICxEJ
zX6sCCuzX7USSiLRKHEWESWSaVFWhpkWlaiZWk5Lnab19p7nCj0Yb/fx3e/n
nPMdj5jk9XFSiUSyg/853r/GGtO6ODO1z+yylme70ePLtrc3fDXSwkyu+qi3
Oztn8ceSJi1FvC72R9TyIB3Nyl9xMrHTTJcHfWsufaCjT+qvr6pcNI+evjbs
21HmQbfkVv/2aTVTF+tryadDevp2TYwy4r6ZDsm2XQx9p6fH1M0vh96aqER4
DDSpc/SW7axJvFdgoNNK50TtDDTRthtXanR7OSqXmo+pI40TdTlapT3SvS7N
hxb9LHkaYuVoe4O+xT7OiX3Gc9SzxX4w4Q9HjY6EFo7GC89knDJiScWzSo4G
Vw7wN3zEex2TdVD3vKNc4GRfIwcTHqbmmeiroXA+xIs+58ceGDPRsFMX9qiy
9eL3FjOtO/Doqmu5B8PlRwbx38rjpJh/t/Anj5twb+kEjt5m2v+GB+i9lrrw
sIS3GcU4ngecHVU1h91YvEHm+OfK8iWrsh/XX9ewetuFQdWsnxhhYBXrd/WX
9NlltUo2T4rlTG8GUbB5fQUC5AwPfpoFH72cGV4ingqG5/48zdSNCjnDW+h3
qpzxMZenq0orY3yJ+EkZn2L+cQLcC2p0d/ZZRglwrw0J4CVpJ9CL0K5/P4Ge
xPw2Ar0NO9LX9BDoUTz3EehVxGOQQM8OuTxMlTC944x9QDz2BfkqIn/f/3DC
ldXT5DdOtxRrWD9OFn1i2oia9et7yaTJ36Bm8+SGp3pd+DuLzWuLfREd8kzJ
8Hia5JdppQqG19ryc3E5sXKGZ2vwlLQZPC/A+7CzI0LB+EhffDto02YF4ysn
Npq/Imd8Lp3XeLnDXcb41o8N7v9cIGV6GOntfrzEc5xAL02q/mWv4kcJ9BT2
R5PSpBom0NvC0JtOwQYbgR5X7k7uO1LXQ6BXv+KKgOHqPgI9F201PlfWDhLo
3X5t173vKRK2DzhjXxCPfUI+7BvqYR/RD/YV/UJXmAe6w7zwA+ABvwBe8BPg
Cb8B3tgL8AG/Al/YK/AJvwPf8EPoAX4JvcBPoSf4LfQGH4Ae4dfQ6//+/w8B
rcVF
                  "]}]}, AspectRatio -> Automatic, ImageSize -> {15., 15.}, 
               PlotRange -> {{0., 15.}, {0., 15.}}]}, 
            Dynamic[
             CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
            0], ImageSize -> {Automatic, 15}, ImageSizeAction -> 
           "ResizeToFit"], 
          MouseAppearanceTag["LinkHand"]], "\"Edit values\""}, 
        "PrettyTooltipTemplate"]& )}], 
   Cell[
    StyleData["HintPodTitleBar"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.97], 
         FilledCurveBox[
          BezierCurve[{
            Offset[{0, -3}, {1, 1}], 
            Offset[{0, -1.3443}, {1, 1}], 
            Offset[{-1.3443, 0}, {1, 1}], 
            Offset[{-3, 0}, {1, 1}], 
            Offset[{-3, 0}, {1, 1}], 
            Offset[{3, 0}, {-1, 1}], 
            Offset[{3, 0}, {-1, 1}], 
            Offset[{1.3443, 0}, {-1, 1}], 
            Offset[{0, -1.3443}, {-1, 1}], 
            Offset[{0, -3}, {-1, 1}], 
            Offset[{0, -3}, {-1, 1}], {-1, -1}, {-1, -1}, {-1, -1}, {1, -1}, {
            1, -1}}]], 
         InsetBox[
          FormBox[
           StyleBox[
           "\"Notebook Analysis\"", FontColor -> GrayLevel[0.4], FontColor -> 
            GrayLevel[0.4], FontFamily -> "Source Sans Pro", FontWeight -> 
            Plain, FontSize -> 13, StripOnInput -> False], TraditionalForm], 
          Offset[{8, 0}, {-1, 0}], 
          NCache[
           ImageScaled[{0, 1/2}], 
           ImageScaled[{0, 0.5}]]], 
         TagBox[
          TagBox[
           TooltipBox[{
             GrayLevel[0.6], 
             DiskBox[
              Offset[{-13, -10}, {1, 1}], 
              Offset[6]], 
             GrayLevel[0.97], 
             AbsoluteThickness[1.5], 
             CapForm["Round"], 
             LineBox[{{
                Offset[{-15, -8}, {1, 1}], 
                Offset[{-11, -12}, {1, 1}]}, {
                Offset[{-15, -12}, {1, 1}], 
                Offset[{-11, -8}, {1, 1}]}}]}, 
            FrameBox[
             StyleBox[
             "\"Close analysis pod\"", "Text", FontColor -> 
              RGBColor[0.53725, 0.53725, 0.53725], FontSize -> 12, FontWeight -> 
              "Plain", FontTracking -> "Plain", StripOnInput -> False], 
             Background -> RGBColor[0.96078, 0.96078, 0.96078], FrameStyle -> 
             RGBColor[0.89804, 0.89804, 0.89804], FrameMargins -> 8, 
             StripOnInput -> False], TooltipDelay -> 0.1, 
            TooltipStyle -> {Background -> None, CellFrame -> 0}], 
           Annotation[#, "Close analysis pod", "Tooltip"]& ], 
          EventHandlerTag[{"MouseClicked" :> NotebookDelete[
              EvaluationCell[]], Method -> "Preemptive", PassEventsDown -> 
            Automatic, PassEventsUp -> True}]]}, AspectRatio -> Full, 
        ImageSize -> {Full, 20}, PlotRange -> {{-1, 1}, {-1, 1}}, 
        ImageMargins -> {{0, 0}, {0, 0}}, 
        ImagePadding -> {{0, 0}, {0, 0}}]& )}], 
   Cell[
    StyleData["HintPodDelimiterTop"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         AbsoluteThickness[1], 
         GrayLevel[0.85], 
         CapForm["Round"], 
         LineBox[{{-1, 0}, {1, 0}}]}, AspectRatio -> Full, 
        PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> {{0, 0}, {0, 0}}, 
        ImageSize -> {Full, 2}, BaselinePosition -> Scaled[0.1], 
        ImageMargins -> {{0, 0}, {4, 0}}]& )}], 
   Cell[
    StyleData["HintPodDelimiterBottom"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         AbsoluteThickness[1], 
         GrayLevel[0.85], 
         CapForm["Round"], 
         LineBox[{{-1, 0}, {1, 0}}]}, AspectRatio -> Full, 
        PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> {{0, 0}, {0, 0}}, 
        ImageSize -> {Full, 2}, BaselinePosition -> Scaled[0.1], 
        ImageMargins -> {{0, 0}, {0, 4}}]& )}], 
   Cell[
    StyleData["HintPodFooter"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.97], 
         FilledCurveBox[
          BezierCurve[{{-1, 1}, {-1, 1}, 
            Offset[{0, 3}, {-1, -1}], 
            Offset[{0, 3}, {-1, -1}], 
            Offset[{0, 1.3443}, {-1, -1}], 
            Offset[{1.3443, 0}, {-1, -1}], 
            Offset[{3, 0}, {-1, -1}], 
            Offset[{3, 0}, {-1, -1}], 
            Offset[{-3, 0}, {1, -1}], 
            Offset[{-3, 0}, {1, -1}], 
            Offset[{-1.3443, 0}, {1, -1}], 
            Offset[{0, 1.3443}, {1, -1}], 
            Offset[{0, 3}, {1, -1}], 
            Offset[{0, 3}, {1, -1}], {1, 1}, {1, 1}}]], 
         InsetBox[
          BoxData[
           FormBox[
            TemplateBox[{
              StyleBox[
               TemplateBox[{3}, "Spacer1"], FontColor -> GrayLevel[0.4], 
               FontFamily -> "Source Sans Pro", FontWeight -> Plain, FontSize -> 
               12, StripOnInput -> False], 
              
              StyleBox[#, FontColor -> GrayLevel[0.4], FontFamily -> 
               "Source Sans Pro", FontWeight -> Plain, FontSize -> 12, 
               StripOnInput -> False], 
              StyleBox[
               TemplateBox[{5}, "Spacer1"], FontColor -> GrayLevel[0.4], 
               FontFamily -> "Source Sans Pro", FontWeight -> Plain, FontSize -> 
               12, StripOnInput -> False]}, "RowDefault"], TraditionalForm]], 
          
          Offset[{5, 2.5}, {-1, 0}], {-1, 0}]}, AspectRatio -> Full, 
        ImageSize -> {Full, 21}, PlotRange -> {{-1, 1}, {-1, 1}}, 
        ImageMargins -> {{0, 0}, {0, 3}}, 
        ImagePadding -> {{0, 0}, {0, 0}}]& )}], 
   Cell[
    StyleData["HintPodMenuItems"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (
       TemplateBox[{#, FrameMargins -> 3, Background -> GrayLevel[1], 
         RoundingRadius -> 0, FrameStyle -> Directive[
           AbsoluteThickness[1], 
           RGBColor[0.75686, 0.82745, 0.88235]], ImageMargins -> #2}, 
        "Highlighted"]& )}], 
   Cell[
    StyleData["HintPodActionMenuItem"], 
    TemplateBoxOptions -> {DisplayFunction -> (ButtonBox[
        TemplateBox[{
          TagBox[
           GridBox[{{#, 
              TemplateBox[{7}, "Spacer1"], #2}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], FrameStyle -> 
          None, RoundingRadius -> 0, FrameMargins -> {{5, 2}, {2, 2}}, 
          ImageSize -> Full, ImageMargins -> {{0, 0}, {0, 0}}, Background -> 
          Dynamic[
            If[
             CurrentValue["MouseOver"], 
             GrayLevel[0.96], 
             GrayLevel[1.]]]}, "Highlighted"], ButtonFunction :> 
        ReleaseHold[#3], 
        Appearance -> {
         "Default" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True]}, Method -> 
        "Queued", Evaluator -> Automatic]& )}], 
   Cell[
    StyleData["HintPodDisabledMenuItem"], 
    TemplateBoxOptions -> {DisplayFunction -> (ButtonBox[
        TemplateBox[{
          TagBox[
           GridBox[{{#, 
              TemplateBox[{7}, "Spacer1"], 
              StyleBox[#2, FontOpacity -> 0.4]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], FrameStyle -> 
          None, RoundingRadius -> 0, FrameMargins -> {{5, 2}, {2, 2}}, 
          ImageSize -> Full, ImageMargins -> {{0, 0}, {0, 0}}, Background -> 
          GrayLevel[1.]}, "Highlighted"], ButtonFunction :> Null, 
        Appearance -> {
         "Default" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True]}, Method -> 
        "Queued", Evaluator -> Automatic, Enabled -> False]& )}], 
   Cell[
    StyleData["HintPodActionLabel"], 
    TemplateBoxOptions -> {DisplayFunction -> (PaneBox[
        StyleBox[#, FontColor -> GrayLevel[0.2], FontFamily -> 
         "Source Sans Pro", FontWeight -> Plain, FontSize -> 13, LineIndent -> 
         0, StripOnInput -> False], FrameMargins -> 0, ImageMargins -> 0, 
        BaselinePosition -> Baseline, ImageSize -> Full]& )}], 
   Cell[
    StyleData["HintPodMenuDelimiter"], 
    TemplateBoxOptions -> {DisplayFunction -> (PaneBox[
        StyleBox[
         GraphicsBox[{
           CapForm["Round"], 
           GrayLevel[0.9], 
           AbsoluteThickness[1], 
           LineBox[{{-1, 0}, {1, 0}}]}, AspectRatio -> Full, 
          PlotRange -> {{-1, 1}, {-1, 1}}, ImageMargins -> {{0, 0}, {2, 2}}, 
          ImagePadding -> {{5, 5}, {0, 0}}, ImageSize -> {Full, 2}], 
         LineIndent -> 0, StripOnInput -> False], FrameMargins -> 0, 
        ImageMargins -> 0, BaselinePosition -> Baseline, ImageSize -> 
        Full]& )}], 
   Cell[
    StyleData["HintPodIconChevron"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.2], 
         AbsoluteThickness[1.8], 
         CapForm["Round"], 
         JoinForm["Miter"], 
         LineBox[{{-0.5, 1}, {0.5, 0}, {-0.5, -1}}]}, AspectRatio -> Full, 
        BaselinePosition -> Bottom, ImageMargins -> {{0, 4}, {0, 0}}, 
        ImageSize -> {5.6, 7.7}]& )}], 
   Cell[
    StyleData["HintPodIconPopOut"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
          0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIlIGYC4h1yra8Dd6g4rHN/WCWip+KwRiYqxXq+isNk
CZYwvlwEDROHqYPpKwUrUHFgAIEDKg5nzwDBG2VU/hlluPogMEMCzm9kOdpv
aC6OJi/mINR84NRCVwQfIq8M519wufHhi5Yymn4lNPOVHNLAQBHO/6YR03/o
K5eDB9Ab69wFHJoeHZ+xexqng8r0/xPqfvM5cG9dVnl8JacD0FO6m+byOPxL
/f4kUZHbQZr3ge4EBW6HD2IeAX9m8Dhkzyqfs2gxp8ONxmK3Kd/4HOYsUt75
p50Tbi6YesgF9b8ShJ+oCOfD3Anjw/zx9JP8pXx7hD9h4QfjqxtyAKNCBU0e
EY4wPqr5iHh4/nvlx0tnVRyYObvkk98pOwA9+X75MRUHWWD03udHxCssngGf
XO7X
          "]]}, AspectRatio -> Automatic, ImageSize -> {14., 14.}, 
        PlotRange -> {{0., 13.62}, {0., 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconWrench"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.4], 
         AbsoluteThickness[1], 
         Opacity[1.], 
         JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGYCYmWv6mZ9n3/2cmJZvp/5BBzci37yv9wu6/Au
ysnuhaQynG8at8uT55AGXJwBDHQdPl3yTRKIUIfzo1Ks7/vzajiosjVOdfbW
ccjaUzJZokUFrv8ySLmlqoPbts9/r1iowsVh6mD6zp4BAh4NnPbA3AHTr+ss
8/rRNoS7YXyYv2D+7H/ySf5SPrdD7D/nX29ff7H/6hXZZnGNGc6HqYPRMPED
b+bZ6FxBqAPpOprL7YAefgCtVISU
          "], CurveClosed -> {1}]}, AspectRatio -> Automatic, 
        BaselinePosition -> Scaled[0.2], ImagePadding -> 0.5, 
        ImageSize -> {16., 16.}, PlotRange -> {{0., 16.}, {0., 16.}}]& )}], 
   Cell[
    StyleData["HintPodIconInfo"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4,
            3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
           3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3,
            3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{6.81, 13.}, {
           3.3914, 13.}, {0.62, 10.229}, {0.62, 6.81}, {0.62, 3.3914}, {
           3.3914, 0.62}, {6.81, 0.62}, {10.229, 0.62}, {13., 3.3914}, {13., 
           6.81}, {13., 10.229}, {10.229, 13.}, {6.81, 13.}}, CompressedData["

1:eJxTTMoPSmViYGCQB2IQbct1fXGBrbRD6+vAHXKtvA7r3B9WiayTdoCI8zgc
/qoR039IHkoLOjCAgYKDB0iZu4CDPFijgsOsmSDAC1UnCzWPE0rLQMXZHV6x
mAia1Ug56E1Y8MMwjdXh685bXX9VJRx4Jq9sCvRkcTh7BgREHfoPgTSwOAQB
db8OFHYAO4eLFeo+IQcRMIMLzoe4h9dBW2LqFc4MYYd4zdMCx38JOviYdzom
pIo4PJgjuHSvo6jDkgKQz0QdCsEelHDQjAHZJAa1VxIqLwH3Jzofok8S4i9W
RQews67LQsJhnoKDMRjIQ9Q3wMJJwQFMJULDSRJmrhzUPKh6Blmof+QcwM6K
kXb4Bgq2rzJQcXFovMhA5UUdciqqluo0SztsKMqY+NZG2OHV1E08hTrSDquA
oTmXQdABPX4BaWq/EA==
           "], {{8.81, 9.79}, {8.8101, 9.5122}, {8.5878, 9.2854}, {8.31, 
           9.28}, {7.51, 9.28}, {7.2283, 9.28}, {7., 9.5083}, {7., 9.79}, {7.,
            10.62}, {7.0054, 10.898}, {7.2322, 11.12}, {7.51, 11.12}, {8.35, 
           11.12}, {8.6239, 11.115}, {8.8447, 10.894}, {8.85, 10.62}}}]}, 
        AspectRatio -> Automatic, ImagePadding -> 0.5, 
        ImageSize -> {14., 14.}, 
        PlotRange -> {{0., 13.62}, {0., 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconNone"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (
       GraphicsBox[{}, AspectRatio -> Automatic, ImageSize -> {16., 16.}, 
        PlotRange -> {{0., 16.}, {0., 16.}}, BaselinePosition -> Scaled[0.2], 
        ImagePadding -> 0.5]& )}], 
   Cell[
    StyleData["HintPodIconIgnoreAlways"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         EdgeForm[None], 
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJTIGYCYpF17g+rROQcbLmuLy6wlXaoBguoOvQf+qoR
w6/i8CZwh1zralWH4oyJb2vsVRx0N819v/yYqoO0/l0VtkYEv/U1UOFRBP/D
8mPe5pyqcP0z8oSaD3ipws2H0famcbs8fVQd2BqnOnevUXUAa+dWdUgSiLDc
ckLVwQPounXHVeB8kK1TmxH8gN7peULOKnD9EP+owM2H+QvmzyUFIBEeuHxC
mb+c2CtuuP75NjpXZj3jgpsP0s11nRPO5+feuqzyOAec73dxYsy/w+xw/WDr
uNjh5n9MPhPr7cEG93+V2Wq78Nus8PCB8WHhB+PDwhemHxb+MPNh8ZMGBhJw
f8Lkv2nEAJXwOGyu/rQh4DWrwwrTs9Z+F7kdvHiYtNunsTrYgrwpy+XQteHh
y6lGbA6HxNWCWRdzOJwKObhiyTk2B3fmCm4VDXaouRwOEaeMjmzUY4OHhybI
eA02eHgt/GH4bJ0qm4PT+bSrz4Hh+Z0tfobPVDZ4eIOVx7DD3QlzNwMYIPx1
smzffCl9FUg4u7M5hPEBU1S+isPs0Pmr195gdTAGgc0qUHewOswDJhfv7yoO
/g7CiYcvszoAU9vrQAtVh6V+QAFnNqg9iHj5dMk3SWAGIt78wBGJiFcYH+ZP
GB/mT5h+WLqBmQ/zJwC4F0s3
          "]]}, AspectRatio -> Automatic, ImageMargins -> {{0, 0}, {0, 2}}, 
        ImageSize -> {14., 14.}, 
        PlotRange -> {{-0.5, 13.62}, {-0.5, 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconIgnoreInCell"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         EdgeForm[None], 
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
           0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
            0}}}, {{{11.69, 13.37}, {7.57, 13.37}, {7.57, 12.37}, {7.76, 
           12.37}, {11.19, 8.93}, {11.19, 1.25}, {7.57, 1.25}, {7.57, 0.25}, {
           12.19, 0.25}, {12.19, 13.37}}, {{9.17, 12.37}, {11.17, 12.37}, {
           11.17, 10.37}}}], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIjIGYCYo+HVSLr3EUdbLmuLy6wlXZYUgBiyTlAxJUc
kt9FOdllyDuU6yrKf1mD4LM879F466sMV28MApuVHX7yv9y+3lkOQj9WdngU
Ib794gFZh/Dojfvf/FN22CHX+jrQAsHvf/JJ/tJ6GTgfbI+ODFz/2TMgIA03
vxroqodVQg5gSkQO6m4mVPubGR1E7I/d2fpE2cHy2tFckwYGB2n9uypsjCoO
YG89/GcP4wd5zm1QO/QHzr9wNeyN/u5f9jD9kHD4aQ8zX+z36XcnD3+3v8fE
2SXfrOygvqBzw8OX3+yDQAxHBB/srr9KcL7mW959BjuV4PrnCi7de7BcCW4+
LLwhND88PmDyEHcLOjg2PTo+Y/d3+/21shbpLYIOTglPLyjd/mZ//wH35JVM
CD4knATgfL0JC34YPuOH688Nq1237REf3HzNmP5DXzX4HLhVNOp6dv6yP3xZ
O1UyiRcePrlH/22q/sQDD79vGiANPA5yy1946NUzOOy61fU39TuPw5GNenmL
GxkdwPal8cLjB2Y+LP7SwEDCgQEMZODyf7+VPpgTKOOw9ldM7tE6XgfmCqCL
9sk43PfvnZ4nxAuJZ2NZB5j9UV933uraK+swf/XaG/HfeCDudZJzuA1yTgov
PH3CzBcAJg/mdHmHVElQyuSH851lXj8ykxKEq4eFNwCKHGBr
          "]]}, AspectRatio -> Automatic, ImageMargins -> {{0, 0}, {0, 2}}, 
        ImageSize -> {14., 14.}, 
        PlotRange -> {{-0.5, 13.62}, {-0.5, 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconIgnoreInNotebook"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJTIGYC4qAdcq2vAwUcbLmuLy6wFXdYUgBiSTp4PKwS
Weeu4GCgtVL4AouUw1zBpXsPlis4vDlgqexlLeWg+ZZ3n8FOBB+s/y+CH6S+
oHODoyJc/z0mzi75ZkW4+cYgsFnRoanYbco3N0kHEftjd7Y+UXRYeM3kvcVR
CYeQx0tnH2FQgroLwb9pWxmxYqs4nP9zQfrmV8bicP0g1VzXxeDmf9OI6T/0
lcsB6Bmgj6QcGMDggz1MvoTnRNz7f2/sf/K/3L7+saLDzmCriP/PX9iHR2/c
/+YfzL1P4Pz+Xoc96+IfwPkrVqZm1068AdcPtAxo4yW4+ccenln/jOGkPcz/
MjWJRqEGh+xh4QPjw8IPxoeFL0w/LPxh5sPiB0KzwuNPHhibO+Su2h8GKTvE
7aAYeYAl7+5Z+/rfVgXnOLgdPu6qO5h345j9voPiasGsXHA+JJw44Hy9CQt+
GD5jh+vPDatdt+0RG9x8TZByDTYH/uky5V7st+21JaZe4cxgdZgp5PnFqOuh
vQY/99ZlP1kcIO54CjWfxeFeX0HUh0Uv7bdEft15i4vVoa2/Q3Oiy1t77Xax
m+fKWeHxAzMfFn9pYCACj1+YfMeX29cbgfF/+LJ2qmQSKzx95B79t6n6Ews8
/cDsB3O5JB1Upv+fUPebxeHIRr28xQeB6e+Cy40PX1gdnjTPO7uKX8qh/8kn
+Uv57A4sYXy6m2KlHDjBCY3DwV9OLMvXGJjeda7MejaXC56eYeENAPSkchE=

          "]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
          0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
          3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJdIGYC4qAdcq2vL6o52HJdX1ywVwtC24rB+YdTViWE
XBKE86tF1rk/rOJxMAaBzxpwPkReDY2vCDVPCMpXhvPB+jerwfnPf6/8eOms
ukPDdoemR+wiUHkNuHtgfJh7YXy2xqnO3W/U0eQ14ObB+DD7YHzNmP5DXzWY
4PzY3KP/NlX/toeZBxYP/GIPsw/GBzuHSxrOX7TF/MchFSkH9g9iHgF/Ptmb
vrdwdTeSdNjZywYU+WQPcb8E1B+f7H8EP146m0XcYeE1E6DKT/Z9IGUXRB02
V3/aEJD92R5s7A4Rh1kzQeCr/YQFPwyfvRN2+Put9MEcwe/2894vP+ZtLuxw
3793ep7QT3uIOiEHkC651t/2YH8a80LtY3NA5TPB+RPrflsVnPtkL/8lJ6xW
T8jhTSDYo1DzxOB8BjBQh/O/aQADzlQTTV4bbh6MD7MPxoeFfwDI2czaDmfP
gAA0nCdqOTglPL2gdFvDweNhlci645oO8iAPzdOEmPNXw+EPMDp9k7Qc4nZ5
8jC9VncAG39KywE9/QIAH6UuJw==
          "]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{
          5.63, 11.05}, {5.63, 10.44}, {6.0569, 10.539}, {6.5048, 10.49}, {
          6.9, 10.3}, {9.53, 10.3}, {9.53, 11.05}}}], 
         FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{7.92, 3.73}, {
          8.0396, 3.4994}, {8.0784, 3.2353}, {8.03, 2.98}, {9.41, 2.98}, {
          9.41, 3.73}}}], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}}}, {{{6.73, 6.21}, {6.2, 5.82}, {6.67, 5.46}, {11.22, 5.46}, {
          11.22, 6.21}, {6.73, 6.21}}}], 
         FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{8., 8.7}, {
          8.0514, 8.4458}, {8.0162, 8.1818}, {7.9, 7.95}, {10.25, 7.95}, {
          10.25, 8.7}}}]}, AspectRatio -> Automatic, ImagePadding -> 0.75, 
        ImageSize -> {15., 15.}, 
        PlotRange -> {{0., 13.62}, {0., 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconHint"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         EdgeForm[None], 
         FaceForm[#], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4,
            3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
           3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
            3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
           3}, {1, 3, 3}}}, {{{9.015, 17.37}, {4.4559, 17.37}, {0.76, 
           13.645}, {0.76, 9.05}, {0.76, 4.455}, {4.4559, 0.73}, {9.015, 
           0.73}, {13.574, 0.73}, {17.27, 4.455}, {17.27, 9.05}, {17.27, 
           13.645}, {13.574, 17.37}, {9.015, 17.37}}, CompressedData["
1:eJxTTMoPSmViYGCQBGIQbcixRiYqRcVh3bak+pu23A5rf8XkHt2n7OC/fkpq
x2MOB8+5DWqHnik5nP8e/HjpbHYHj4dVIuvYlRyAiisjVrA78Bau6b6toegQ
ApQ9soDdQepAtIJjoILDJ8fzaVefczgs6Nzw8GWoPNx84yMb9fIeyzr831T9
acMFXod1N+LL/OVkHV5uX8/8/IyAw7Fck4btDrIOZQ/mCC7dK+TAXMGtomEn
6/DP+dfb1w0iDkIi9sfufJV1ePRy6iYeQzGHac7dOc+t5R3SwEDcwe7FzTW/
bBQc9kybwF+1TcLh7TwbnStSig7Hd+3oZSuQdDjab1iuy6jk0MIL8qGkg8f+
WlmL50oO9uHRG/fnSDr4fu4LLjmi7HDw1ELXbZslHGDhAzO//9BXjRh+VQeG
iXW/rQzEHKzv+/dOz1N1uFfY1fekSMRhzhGFDUUZqhB/LhaCmFOs6sC0h1VI
ZL+Ag8g6d2AIqjqYCJrZ7L3E64Ae/gDrrapT
           "], CompressedData["
1:eJxTTMoPSmViYGBQBGIQ/emSb5KAhJoDAwg0aDhYbjlRtu++isNudX7urWpK
DrX2pnG7Tqo4TFPsKy2sVnRQvv2zLqtGBULfUXAI6J2eJ8Ss4mDSsN2hKUnB
Ia0jOfZOmrKD/l0Vtsar8g5Gz9apPlms5GDgs4zLLVXeweLHoZRVDxQdnNdm
3ivskneQW/7CQ09e0aHEbco3tnh5h+jLex6LxCo4FErzPtC9IO+wVfT36Xed
8nDzH5tJHYheIOeQBxJ4pOCgu2nu++Vscg75Qs0HTjUqOjDkN7IcPS/rcObd
ycNOukoObqqlTLM4ZOD+O7JRL2/xQWkHHibtdrFITYeb8WX+ctOkHQ6eWui6
zVjLQfD4rh29bdIO/Ye+asTwazuAnJswRdohaIdc6+uL2g6qbI1TnbtlHGy5
ri8uqNVxEIgAhtg3WYj5B3QcgKEkzcsAdOfS2UcUDHQdEp5eULotqehw89z3
4Mepug63pGsSjUyVHMr3zZfSj9V1uKKdKvkoQtmhOGPi25p6XQeQ8p91KhB9
lroOIGH7UlWH+qw9JZNn6EDs54bGF4OOA9AVtlzhag6KG4oyJupqO4CCYaGr
mgM4XiO0HK5WvFQz9FBzuAzi7tR0cNv2+e8VCzUHJ5AF0poO6PEPAFdvzZk=

           "]}]}, AspectRatio -> Automatic, BaselinePosition -> Scaled[0.1], 
        ImagePadding -> 0.5, ImageSize -> {14., 14.778}, 
        PlotRange -> {{0.76, 17.27}, {0.73, 17.37}}]& )}], 
   Cell["Documentation", "Section"], 
   Cell["Usage", "Subsection"], 
   Cell[
    StyleData["UsageInputs", StyleDefinitions -> StyleData["Input"]], 
    CellMargins -> {{66, 10}, {0, 8}}, 
    StyleKeyMapping -> {"Tab" -> "UsageDescription"}, Evaluatable -> False, 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb$ = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb$, 
          Cell["", "UsageDescription"], All]; 
        SelectionMove[RSNB`nb$, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoStyles -> False, ShowCodeAssist -> False, 
    CodeAssistOptions -> {"DynamicHighlighting" -> False}, 
    LineSpacing -> {1, 3}, TabSpacings -> {2.5}, CounterIncrements -> "Text", 
    FontFamily -> "Source Sans Pro", FontSize -> 15, FontWeight -> "Plain"], 
   Cell[
    StyleData["UsageDescription", StyleDefinitions -> StyleData["Text"]], 
    CellMargins -> {{86, 10}, {7, 0}}, 
    StyleKeyMapping -> {"Backspace" -> "UsageInputs"}, CellGroupingRules -> 
    "OutputGrouping", 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb$ = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb$, 
          Cell[
           BoxData[""], "UsageInputs", FontFamily -> "Source Sans Pro"], All]; 
        SelectionMove[RSNB`nb$, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoSpellCheck -> False], 
   Cell["Details & Options", "Subsection"], 
   Cell[
    StyleData["Notes", StyleDefinitions -> StyleData["Item"]], CellDingbat -> 
    StyleBox["\[FilledVerySmallSquare]", FontColor -> GrayLevel[0.6]], 
    CellMargins -> {{66, 24}, {9, 7}}, ReturnCreatesNewCell -> False, 
    StyleKeyMapping -> {}, DefaultNewCellStyle -> "Notes", ShowAutoSpellCheck -> 
    False, GridBoxOptions -> {BaseStyle -> "TableNotes"}], 
   Cell[
    StyleData["TableNotes", StyleDefinitions -> StyleData["Notes"]], 
    CellDingbat -> None, CellFrameColor -> RGBColor[0.749, 0.694, 0.553], 
    StyleMenuListing -> None, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    GridBoxOptions -> {
     FrameStyle -> GrayLevel[0.906], 
      GridBoxAlignment -> {
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}}, 
      GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{True}}}, 
      GridDefaultElement -> Cell["\[Placeholder]", "TableText"]}], 
   Cell[
    StyleData["TableText"], DefaultInlineFormatType -> 
    "DefaultInputInlineFormatType", AutoQuoteCharacters -> {}, 
    PasteAutoQuoteCharacters -> {}, StyleMenuListing -> None], 
   Cell["Examples", "Subsection"], 
   Cell[
    StyleData["ExampleDelimiter"], Selectable -> False, ShowCellBracket -> 
    Automatic, CellMargins -> {{66, 14}, {5, 10}}, Evaluatable -> True, 
    CellGroupingRules -> {"SectionGrouping", 58}, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False, 
    CellLabelAutoDelete -> True, TabFilling -> 
    "\[LongDash]\[NegativeThickSpace]", TabSpacings -> {100}, 
    StyleMenuListing -> None, FontFamily -> "Verdana", FontWeight -> Bold, 
    FontSlant -> "Plain", FontColor -> GrayLevel[0.906]], 
   Cell[
    StyleData["ExampleText", StyleDefinitions -> StyleData["Text"]]], 
   Cell[
    StyleData["PageBreak", StyleDefinitions -> StyleData["ExampleDelimiter"]],
     Selectable -> False, CellFrame -> {{0, 0}, {1, 0}}, 
    CellMargins -> {{66, 14}, {15, -5}}, 
    CellElementSpacings -> {"CellMinHeight" -> 1}, Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), CellFrameColor -> 
    GrayLevel[
      Rational[77, 85]]], 
   Cell[
    StyleData["Subsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   
   Cell[
    StyleData["Subsubsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   
   Cell[
    StyleData["ExampleImage"], PageWidth :> 650, 
    CellMargins -> {{66, 66}, {16, 5}}, Evaluatable -> False, ShowCellLabel -> 
    False, MenuSortingValue -> 10000, 
    RasterBoxOptions -> {ImageEditMode -> False}], 
   Cell["Links", "Section"], 
   Cell[
    StyleData["Link"], FontFamily -> "Source Sans Pro", FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.855, 0.396, 0.145], 
       RGBColor[0.02, 0.286, 0.651]]]], 
   Cell[
    StyleData["StringTypeLink", StyleDefinitions -> StyleData["Link"]], 
    FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.969, 0.467, 0.], 
       GrayLevel[0.467]]]], 
   Cell[
    StyleData["CharactersRefLink"], ShowSpecialCharacters -> False], 
   Cell["Annotation", "Section"], 
   Cell[
    StyleData["Excluded"], 
    CellBracketOptions -> {
     "Color" -> RGBColor[0.9, 0.4, 0.4], "Thickness" -> 2}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Excluded"}, 
      "Message" -> {"Message", "MSG", "Excluded"}, 
      "Output" -> {"Output", "Excluded"}, "Print" -> {"Print", "Excluded"}, 
      "PrintTemporary" -> {"PrintTemporary", "Excluded"}}, CellFrameMargins -> 
    4, CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         TemplateBox[{
           StyleBox[
           "\"excluded\"", "ExcludedCellLabel", StripOnInput -> False], 
           "\"Excluded cells will not appear anywhere in the published \
resource except for the definition notebook\""}, "PrettyTooltipTemplate"]], 
        "ExcludedCellLabel"]}, {None, None}}, StyleMenuListing -> None, 
    Background -> RGBColor[1, 0.95, 0.95]], 
   Cell[
    StyleData["ExcludedCellLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontFamily -> "Source Sans Pro", FontSize -> 
    9, FontWeight -> Plain, FontSlant -> Italic, FontColor -> 
    RGBColor[0.9, 0.4, 0.4, 0.5], Background -> None], 
   Cell[
    StyleData["HiddenMaterial"], 
    CellBracketOptions -> {
     "Color" -> RGBColor[0.3, 0.7, 0.6], "Thickness" -> 2}, CellFrameMargins -> 
    4, CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         TemplateBox[{
           StyleBox[
           "\"hidden\"", "HiddenMaterialCellLabel", StripOnInput -> False], 
           "\"Hidden input cells will be closed on the published web page but \
will remain open in the downloadable example notebook\""}, 
          "PrettyTooltipTemplate"]], "HiddenMaterialCellLabel"]}, {
      None, None}}, StyleMenuListing -> None, Background -> 
    RGBColor[0.8, 1., 0.9]], 
   Cell[
    StyleData[
    "HiddenMaterialCellLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontFamily -> "Source Sans Pro", FontSize -> 
    9, FontWeight -> Plain, FontSlant -> Italic, FontColor -> 
    RGBColor[0.3, 0.7, 0.6, 0.5], Background -> None], 
   Cell[
    StyleData["Comment", StyleDefinitions -> StyleData["Text"]], 
    CellFrame -> {{3, 0}, {0, 0}}, CellMargins -> {{66, 0}, {1, 0}}, 
    CellElementSpacings -> {"ClosedCellHeight" -> 0}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Comment"}, 
      "Message" -> {"Message", "MSG", "Comment"}, 
      "Output" -> {"Output", "Comment"}, "Print" -> {"Print", "Comment"}, 
      "PrintTemporary" -> {"PrintTemporary", "Comment"}}, CellFrameColor -> 
    RGBColor[0.88072, 0.61104, 0.14205], 
    CellFrameLabelMargins -> {{0, 10}, {0, 0}}, FontColor -> GrayLevel[0.25], 
    Background -> RGBColor[0.982, 0.942, 0.871]], 
   Cell[
    StyleData["AuthorComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "AuthorComment"}, 
      "Message" -> {"Message", "MSG", "AuthorComment"}, 
      "Output" -> {"Output", "AuthorComment"}, 
      "Print" -> {"Print", "AuthorComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "AuthorComment"}}, 
    CellFrameColor -> RGBColor[0.36842, 0.50678, 0.7098], Background -> 
    RGBColor[0.905, 0.926, 0.956]], 
   Cell[
    StyleData["ReviewerComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "ReviewerComment"}, 
      "Message" -> {"Message", "MSG", "ReviewerComment"}, 
      "Output" -> {"Output", "ReviewerComment"}, 
      "Print" -> {"Print", "ReviewerComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "ReviewerComment"}}, 
    CellFrameColor -> RGBColor[0.56018, 0.69157, 0.19488], Background -> 
    RGBColor[0.934, 0.954, 0.879]], 
   Cell[
    StyleData["CommentLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontSlant -> "Italic", 
    PrivateFontOptions -> {"OperatorSubstitution" -> False}, FontColor -> 
    GrayLevel[0.5]], 
   Cell["Special Input", "Section"], 
   Cell[
    StyleData["FormObjectCell"], CellMargins -> {{66, 66}, {16, 5}}], 
   Cell[
    StyleData["LocalFileInput", StyleDefinitions -> StyleData["Input"]], 
    CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         ButtonBox[
         "\"Choose\"", FrameMargins -> {{5, 5}, {0, 0}}, 
          BaseStyle -> {"Panel", FontSize -> 12}, Evaluator -> Automatic, 
          Method -> "Queued", ButtonFunction :> 
          With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
            Quiet[
             
             Block[{$ContextPath = RSNB`$cp$, 
               ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
               False, DefinitionNotebookClient`$ButtonCodeID = None}, 
              Internal`WithLocalSettings[
               DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                  ReleaseHold[
                   CurrentValue[
                   RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                  "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                Annotation[
                DefinitionNotebookClient`$ButtonCodeID = 8263526385974082686; 
                 DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                   ReleaseHold[DefinitionNotebookClient`$ButtonCode = HoldForm[
                    If[$VersionNumber >= 13., 
                    DefinitionNotebookClient`LocalFileInputDialog[
                    "Demonstration", 
                    ParentCell[
                    EvaluationCell[]], "Type" -> "FileOpen"], 
                    MessageDialog[
                    "This feature requires Wolfram Language version 13 or \
later."]]]]], 
                 DefinitionNotebookClient`ButtonCodeID[8263526385974082686]], 
                DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
              Null]]], Appearance :> 
          FEPrivate`FrontEndResource[
           "FEExpressions", "GrayButtonNinePatchAppearance"]]]]}, {
      None, None}}], 
   Cell[
    StyleData["LocalDirectoryInput", StyleDefinitions -> StyleData["Input"]], 
    CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         ButtonBox[
         "\"Choose\"", FrameMargins -> {{5, 5}, {0, 0}}, 
          BaseStyle -> {"Panel", FontSize -> 12}, Evaluator -> Automatic, 
          Method -> "Queued", ButtonFunction :> 
          With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
            Quiet[
             
             Block[{$ContextPath = RSNB`$cp$, 
               ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
               False, DefinitionNotebookClient`$ButtonCodeID = None}, 
              Internal`WithLocalSettings[
               DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                  ReleaseHold[
                   CurrentValue[
                   RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                  "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                Annotation[
                DefinitionNotebookClient`$ButtonCodeID = 5263076252613204070; 
                 DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                   ReleaseHold[DefinitionNotebookClient`$ButtonCode = HoldForm[
                    If[$VersionNumber >= 13., 
                    DefinitionNotebookClient`LocalFileInputDialog[
                    "Demonstration", 
                    ParentCell[
                    EvaluationCell[]], "Type" -> "Directory"], 
                    MessageDialog[
                    "This feature requires Wolfram Language version 13 or \
later."]]]]], 
                 DefinitionNotebookClient`ButtonCodeID[5263076252613204070]], 
                DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
              Null]]], Appearance :> 
          FEPrivate`FrontEndResource[
           "FEExpressions", "GrayButtonNinePatchAppearance"]]]]}, {
      None, None}}], 
   Cell["Misc", "Section"], 
   Cell[
    StyleData["Item"], DefaultNewCellStyle -> "Item"], 
   Cell[
    StyleData["RelatedSymbol", StyleDefinitions -> StyleData["Item"]], 
    DefaultNewCellStyle -> {"RelatedSymbol", FontFamily -> "Source Sans Pro"},
     DefaultFormatType -> DefaultInputFormatType, FormatType -> InputForm], 
   Cell[
    StyleData["ButtonText"], FontFamily -> "Sans Serif", FontSize -> 11, 
    FontWeight -> Bold, FontColor -> RGBColor[0.459, 0.459, 0.459]], 
   Cell[
    StyleData["InlineFormula"], 
    HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"}, 
    LanguageCategory -> "Formula", AutoSpacing -> True, ScriptLevel -> 1, 
    SingleLetterItalics -> False, SpanMaxSize -> 1, StyleMenuListing -> None, 
    FontFamily -> "Source Sans Pro", FontSize -> 1. Inherited, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    FractionBoxOptions -> {BaseStyle -> {SpanMaxSize -> Automatic}}, 
    GridBoxOptions -> {
     GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}}], 
   Cell[
    StyleData["DockedCell"], CellFrameColor -> GrayLevel[0.75], Background -> 
    GrayLevel[0.9]]}, Visible -> False, FrontEndVersion -> 
  "14.1 for Mac OS X x86 (64-bit) (June 13, 2024)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"4669198b-11c8-4f25-8642-7a0dcb90acca"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Name"->{
  Cell[580, 22, 359, 6, 70, "Title",ExpressionUUID->"5b117da6-40c7-4534-b65c-13505717c553",
   CellTags->{"Name", "Title"},
   CellID->118417941]},
 "Title"->{
  Cell[580, 22, 359, 6, 70, "Title",ExpressionUUID->"5b117da6-40c7-4534-b65c-13505717c553",
   CellTags->{"Name", "Title"},
   CellID->118417941]},
 "Caption"->{
  Cell[964, 32, 1495, 33, 70, "Section",ExpressionUUID->"e1358b63-00d2-43fc-96cd-4b61e4f4f797",
   CellTags->{"Caption", "CaptionCells", "TemplateCellGroup"},
   CellID->138150581]},
 "CaptionCells"->{
  Cell[964, 32, 1495, 33, 70, "Section",ExpressionUUID->"e1358b63-00d2-43fc-96cd-4b61e4f4f797",
   CellTags->{"Caption", "CaptionCells", "TemplateCellGroup"},
   CellID->138150581]},
 "TemplateCellGroup"->{
  Cell[964, 32, 1495, 33, 70, "Section",ExpressionUUID->"e1358b63-00d2-43fc-96cd-4b61e4f4f797",
   CellTags->{"Caption", "CaptionCells", "TemplateCellGroup"},
   CellID->138150581],
  Cell[6124, 130, 2246, 48, 70, "Section",ExpressionUUID->"a964dcce-d970-4eee-8637-eadd12c47b0b",
   CellTags->{"Initialization Code", "InitializationCode", "TemplateCellGroup"},
   CellID->447669593],
  Cell[9161, 201, 1944, 40, 70, "Section",ExpressionUUID->"ea06d89a-ceac-4dbe-98ed-a1d0d79c1569",
   CellTags->{"Manipulate", "ManipulateGroup", "TemplateCellGroup"},
   CellID->791025314],
  Cell[48198, 1108, 1302, 31, 70, "Section",ExpressionUUID->"f5ec9e5e-ae8a-4fb5-96ab-b6b665528ed0",
   CellTags->{"SnapshotGroup", "Snapshots", "TemplateCellGroup"},
   CellID->98938448],
  Cell[242278, 4336, 1221, 29, 70, "Subsection",ExpressionUUID->"56bf5db5-b8c0-4e50-9a10-ec1ee88c7c59",
   CellTags->{"AuthorNames", "Contributed By", "TemplateCellGroup"},
   CellID->255368948],
  Cell[243661, 4374, 2197, 46, 70, "Subsection",ExpressionUUID->"7d4f3392-4fd1-4c6a-8bcc-3905ef434063",
   CellTags->{"AuthorNotes", "DetailCells", "Details & Citations", "TemplateCellGroup"},
   CellID->441931514],
  Cell[246490, 4436, 2173, 45, 70, "Subsection",ExpressionUUID->"ac3556f7-cc4b-4eb5-8b39-eb80ed19f14e",
   CellTags->{"ReferenceCells", "References", "TemplateCellGroup"},
   CellID->592881655],
  Cell[249281, 4497, 1242, 30, 70, "Subsection",ExpressionUUID->"8d0444a3-8342-4162-9e92-22f1b7221c18",
   CellTags->{"Submission Notes", "SubmissionNotes", "TemplateCellGroup"},
   CellID->797097429],
  Cell[251152, 4543, 1106, 27, 70, "Subsection",ExpressionUUID->"e3cce7ef-c4c5-4389-bd49-8a186662675e",
   CellTags->{"Keywords", "TemplateCellGroup"},
   CellID->938146184],
  Cell[252855, 4586, 1128, 27, 70, "Subsection",ExpressionUUID->"c60af39c-3370-41d9-b523-92a1dc0c8539",
   CellTags->{"Categories", "DemoCategories", "TemplateCellGroup"},
   CellID->845692503],
  Cell[439658, 8050, 1216, 30, 70, "Subsection",ExpressionUUID->"d279f5a6-e0a5-42be-95fc-b50ebbfaaa27",
   CellTags->{"Related Demonstrations", "RelatedDemonstrations", "TemplateCellGroup"},
   CellID->1132753],
  Cell[441494, 8096, 1558, 37, 70, "Subsection",ExpressionUUID->"3326a0e4-445d-462d-bcc2-076fef1488fc",
   CellTags->{"External Links", "ExternalLinks", "TemplateCellGroup"},
   CellID->843468725],
  Cell[443669, 8149, 1191, 29, 70, "Subsection",ExpressionUUID->"5b819928-34d1-42e7-8dd5-3defd3aacec3",
   CellTags->{"Related Symbols", "RelatedSymbols", "TemplateCellGroup"},
   CellID->899564547],
  Cell[445496, 8194, 1070, 26, 70, "Subsection",ExpressionUUID->"cfa3d10a-a79f-4014-82a8-c55bb4fee2ff",
   CellTags->{"Published Date", "PublishedDate", "TemplateCellGroup"},
   CellID->364555554],
  Cell[446726, 8229, 1073, 26, 70, "Subsection",ExpressionUUID->"ce5467a6-7f77-409a-a7a6-bfeca1f98708",
   CellTags->{"Compatibility", "TemplateCellGroup"},
   CellID->618273920]},
 "Initialization Code"->{
  Cell[6124, 130, 2246, 48, 70, "Section",ExpressionUUID->"a964dcce-d970-4eee-8637-eadd12c47b0b",
   CellTags->{"Initialization Code", "InitializationCode", "TemplateCellGroup"},
   CellID->447669593]},
 "InitializationCode"->{
  Cell[6124, 130, 2246, 48, 70, "Section",ExpressionUUID->"a964dcce-d970-4eee-8637-eadd12c47b0b",
   CellTags->{"Initialization Code", "InitializationCode", "TemplateCellGroup"},
   CellID->447669593]},
 "DefaultContent"->{
  Cell[8373, 180, 751, 16, 70, "CodeText",ExpressionUUID->"cca18a78-0dfe-4937-8ec9-4b17dded0004",
   CellTags->{"DefaultContent", "samplecell", "TabNext"},
   CellID->687519280],
  Cell[245861, 4422, 592, 9, 70, "Text",ExpressionUUID->"fb976067-70a4-46b9-ba31-cb61e71fdd21",
   CellTags->{"DefaultContent", "TabNext"},
   CellID->111711384],
  Cell[248666, 4483, 578, 9, 70, "Text",ExpressionUUID->"52883aa9-e14d-45c8-9d5e-248e3bf09f1d",
   CellTags->{"DefaultContent", "TabNext"},
   CellID->423796343],
  Cell[250526, 4529, 589, 9, 70, "Text",ExpressionUUID->"b261e028-15f2-4441-bb92-a57ea8f53f8d",
   CellTags->{"DefaultContent", "TabNext"},
   CellID->820829112],
  Cell[252261, 4572, 557, 9, 70, "Item",ExpressionUUID->"8876a9af-babe-4aa2-a657-e937791a3571",
   CellTags->{"DefaultContent", "TabNext"},
   CellID->12473014],
  Cell[440877, 8082, 580, 9, 70, "Item",ExpressionUUID->"9141165a-5063-4cd0-b087-09e8b690a52e",
   CellTags->{"DefaultContent", "TabNext"},
   CellID->288851603],
  Cell[443055, 8135, 577, 9, 70, "Item",ExpressionUUID->"f5add3f6-a89e-494f-961c-873748ff622b",
   CellTags->{"DefaultContent", "TabNext"},
   CellID->474339324],
  Cell[444863, 8180, 596, 9, 70, "Item",ExpressionUUID->"89c3216d-9548-4f72-9b19-bca9e9f9b816",
   CellTags->{"DefaultContent", "TabNext"},
   CellID->107750934]},
 "samplecell"->{
  Cell[8373, 180, 751, 16, 70, "CodeText",ExpressionUUID->"cca18a78-0dfe-4937-8ec9-4b17dded0004",
   CellTags->{"DefaultContent", "samplecell", "TabNext"},
   CellID->687519280]},
 "TabNext"->{
  Cell[8373, 180, 751, 16, 70, "CodeText",ExpressionUUID->"cca18a78-0dfe-4937-8ec9-4b17dded0004",
   CellTags->{"DefaultContent", "samplecell", "TabNext"},
   CellID->687519280],
  Cell[245861, 4422, 592, 9, 70, "Text",ExpressionUUID->"fb976067-70a4-46b9-ba31-cb61e71fdd21",
   CellTags->{"DefaultContent", "TabNext"},
   CellID->111711384],
  Cell[248666, 4483, 578, 9, 70, "Text",ExpressionUUID->"52883aa9-e14d-45c8-9d5e-248e3bf09f1d",
   CellTags->{"DefaultContent", "TabNext"},
   CellID->423796343],
  Cell[250526, 4529, 589, 9, 70, "Text",ExpressionUUID->"b261e028-15f2-4441-bb92-a57ea8f53f8d",
   CellTags->{"DefaultContent", "TabNext"},
   CellID->820829112],
  Cell[252261, 4572, 557, 9, 70, "Item",ExpressionUUID->"8876a9af-babe-4aa2-a657-e937791a3571",
   CellTags->{"DefaultContent", "TabNext"},
   CellID->12473014],
  Cell[440877, 8082, 580, 9, 70, "Item",ExpressionUUID->"9141165a-5063-4cd0-b087-09e8b690a52e",
   CellTags->{"DefaultContent", "TabNext"},
   CellID->288851603],
  Cell[443055, 8135, 577, 9, 70, "Item",ExpressionUUID->"f5add3f6-a89e-494f-961c-873748ff622b",
   CellTags->{"DefaultContent", "TabNext"},
   CellID->474339324],
  Cell[444863, 8180, 596, 9, 70, "Item",ExpressionUUID->"89c3216d-9548-4f72-9b19-bca9e9f9b816",
   CellTags->{"DefaultContent", "TabNext"},
   CellID->107750934]},
 "Manipulate"->{
  Cell[9161, 201, 1944, 40, 70, "Section",ExpressionUUID->"ea06d89a-ceac-4dbe-98ed-a1d0d79c1569",
   CellTags->{"Manipulate", "ManipulateGroup", "TemplateCellGroup"},
   CellID->791025314]},
 "ManipulateGroup"->{
  Cell[9161, 201, 1944, 40, 70, "Section",ExpressionUUID->"ea06d89a-ceac-4dbe-98ed-a1d0d79c1569",
   CellTags->{"Manipulate", "ManipulateGroup", "TemplateCellGroup"},
   CellID->791025314]},
 "SnapshotGroup"->{
  Cell[48198, 1108, 1302, 31, 70, "Section",ExpressionUUID->"f5ec9e5e-ae8a-4fb5-96ab-b6b665528ed0",
   CellTags->{"SnapshotGroup", "Snapshots", "TemplateCellGroup"},
   CellID->98938448]},
 "Snapshots"->{
  Cell[48198, 1108, 1302, 31, 70, "Section",ExpressionUUID->"f5ec9e5e-ae8a-4fb5-96ab-b6b665528ed0",
   CellTags->{"SnapshotGroup", "Snapshots", "TemplateCellGroup"},
   CellID->98938448]},
 "Snapshot"->{
  Cell[97419, 1933, 47937, 791, 70, "Output",ExpressionUUID->"86db37b8-b3b6-4ddc-b115-b1685afca0eb",
   CellTags->"Snapshot",
   CellID->1206745619],
  Cell[145359, 2726, 45175, 746, 70, "Output",ExpressionUUID->"dbde7e77-07d1-4a9d-9c8f-1d2f59de5b6c",
   CellTags->"Snapshot",
   CellID->938056265],
  Cell[190537, 3474, 51406, 848, 70, "Output",ExpressionUUID->"5de388c0-a437-40cb-8fdc-1792d955ab36",
   CellTags->"Snapshot",
   CellID->1234193228]},
 "SourceInformationGroup"->{
  Cell[241980, 4327, 273, 5, 70, "Section",ExpressionUUID->"92eaa833-77a2-4f01-a6e4-574b2a10fa19",
   CellTags->"SourceInformationGroup",
   CellID->62407265]},
 "AuthorNames"->{
  Cell[242278, 4336, 1221, 29, 70, "Subsection",ExpressionUUID->"56bf5db5-b8c0-4e50-9a10-ec1ee88c7c59",
   CellTags->{"AuthorNames", "Contributed By", "TemplateCellGroup"},
   CellID->255368948]},
 "Contributed By"->{
  Cell[242278, 4336, 1221, 29, 70, "Subsection",ExpressionUUID->"56bf5db5-b8c0-4e50-9a10-ec1ee88c7c59",
   CellTags->{"AuthorNames", "Contributed By", "TemplateCellGroup"},
   CellID->255368948]},
 "AuthorNotes"->{
  Cell[243661, 4374, 2197, 46, 70, "Subsection",ExpressionUUID->"7d4f3392-4fd1-4c6a-8bcc-3905ef434063",
   CellTags->{"AuthorNotes", "DetailCells", "Details & Citations", "TemplateCellGroup"},
   CellID->441931514]},
 "DetailCells"->{
  Cell[243661, 4374, 2197, 46, 70, "Subsection",ExpressionUUID->"7d4f3392-4fd1-4c6a-8bcc-3905ef434063",
   CellTags->{"AuthorNotes", "DetailCells", "Details & Citations", "TemplateCellGroup"},
   CellID->441931514]},
 "Details & Citations"->{
  Cell[243661, 4374, 2197, 46, 70, "Subsection",ExpressionUUID->"7d4f3392-4fd1-4c6a-8bcc-3905ef434063",
   CellTags->{"AuthorNotes", "DetailCells", "Details & Citations", "TemplateCellGroup"},
   CellID->441931514]},
 "ReferenceCells"->{
  Cell[246490, 4436, 2173, 45, 70, "Subsection",ExpressionUUID->"ac3556f7-cc4b-4eb5-8b39-eb80ed19f14e",
   CellTags->{"ReferenceCells", "References", "TemplateCellGroup"},
   CellID->592881655]},
 "References"->{
  Cell[246490, 4436, 2173, 45, 70, "Subsection",ExpressionUUID->"ac3556f7-cc4b-4eb5-8b39-eb80ed19f14e",
   CellTags->{"ReferenceCells", "References", "TemplateCellGroup"},
   CellID->592881655]},
 "Submission Notes"->{
  Cell[249281, 4497, 1242, 30, 70, "Subsection",ExpressionUUID->"8d0444a3-8342-4162-9e92-22f1b7221c18",
   CellTags->{"Submission Notes", "SubmissionNotes", "TemplateCellGroup"},
   CellID->797097429]},
 "SubmissionNotes"->{
  Cell[249281, 4497, 1242, 30, 70, "Subsection",ExpressionUUID->"8d0444a3-8342-4162-9e92-22f1b7221c18",
   CellTags->{"Submission Notes", "SubmissionNotes", "TemplateCellGroup"},
   CellID->797097429]},
 "Keywords"->{
  Cell[251152, 4543, 1106, 27, 70, "Subsection",ExpressionUUID->"e3cce7ef-c4c5-4389-bd49-8a186662675e",
   CellTags->{"Keywords", "TemplateCellGroup"},
   CellID->938146184]},
 "Categories"->{
  Cell[252855, 4586, 1128, 27, 70, "Subsection",ExpressionUUID->"c60af39c-3370-41d9-b523-92a1dc0c8539",
   CellTags->{"Categories", "DemoCategories", "TemplateCellGroup"},
   CellID->845692503]},
 "DemoCategories"->{
  Cell[252855, 4586, 1128, 27, 70, "Subsection",ExpressionUUID->"c60af39c-3370-41d9-b523-92a1dc0c8539",
   CellTags->{"Categories", "DemoCategories", "TemplateCellGroup"},
   CellID->845692503]},
 "CheckboxCell"->{
  Cell[253986, 4615, 185635, 3430, 70, "Output",ExpressionUUID->"966f28d9-e35b-4704-9ab2-8df8cae8fa7d",
   CellTags->{"CheckboxCell", "Topics", "Topics-Checkboxes"},
   CellID->256892528],
  Cell[448952, 8289, 1370, 35, 70, "Output",ExpressionUUID->"8c646c65-a739-4675-a89a-e1a703e08da5",
   CellTags->{"CheckboxCell", "CompatibilityARSupport", "CompatibilityARSupport-Checkboxes"},
   CellID->885916833],
  Cell[452821, 8397, 1328, 34, 70, "Output",ExpressionUUID->"7fb49c0d-e71c-4163-9a0e-be712d9e8d5c",
   CellTags->{"CheckboxCell", "CompatibilityCloudSupport", "CompatibilityCloudSupport-Checkboxes"},
   CellID->874890799]},
 "Topics"->{
  Cell[253986, 4615, 185635, 3430, 70, "Output",ExpressionUUID->"966f28d9-e35b-4704-9ab2-8df8cae8fa7d",
   CellTags->{"CheckboxCell", "Topics", "Topics-Checkboxes"},
   CellID->256892528]},
 "Topics-Checkboxes"->{
  Cell[253986, 4615, 185635, 3430, 70, "Output",ExpressionUUID->"966f28d9-e35b-4704-9ab2-8df8cae8fa7d",
   CellTags->{"CheckboxCell", "Topics", "Topics-Checkboxes"},
   CellID->256892528]},
 "Related Demonstrations"->{
  Cell[439658, 8050, 1216, 30, 70, "Subsection",ExpressionUUID->"d279f5a6-e0a5-42be-95fc-b50ebbfaaa27",
   CellTags->{"Related Demonstrations", "RelatedDemonstrations", "TemplateCellGroup"},
   CellID->1132753]},
 "RelatedDemonstrations"->{
  Cell[439658, 8050, 1216, 30, 70, "Subsection",ExpressionUUID->"d279f5a6-e0a5-42be-95fc-b50ebbfaaa27",
   CellTags->{"Related Demonstrations", "RelatedDemonstrations", "TemplateCellGroup"},
   CellID->1132753]},
 "External Links"->{
  Cell[441494, 8096, 1558, 37, 70, "Subsection",ExpressionUUID->"3326a0e4-445d-462d-bcc2-076fef1488fc",
   CellTags->{"External Links", "ExternalLinks", "TemplateCellGroup"},
   CellID->843468725]},
 "ExternalLinks"->{
  Cell[441494, 8096, 1558, 37, 70, "Subsection",ExpressionUUID->"3326a0e4-445d-462d-bcc2-076fef1488fc",
   CellTags->{"External Links", "ExternalLinks", "TemplateCellGroup"},
   CellID->843468725]},
 "Related Symbols"->{
  Cell[443669, 8149, 1191, 29, 70, "Subsection",ExpressionUUID->"5b819928-34d1-42e7-8dd5-3defd3aacec3",
   CellTags->{"Related Symbols", "RelatedSymbols", "TemplateCellGroup"},
   CellID->899564547]},
 "RelatedSymbols"->{
  Cell[443669, 8149, 1191, 29, 70, "Subsection",ExpressionUUID->"5b819928-34d1-42e7-8dd5-3defd3aacec3",
   CellTags->{"Related Symbols", "RelatedSymbols", "TemplateCellGroup"},
   CellID->899564547]},
 "Published Date"->{
  Cell[445496, 8194, 1070, 26, 70, "Subsection",ExpressionUUID->"cfa3d10a-a79f-4014-82a8-c55bb4fee2ff",
   CellTags->{"Published Date", "PublishedDate", "TemplateCellGroup"},
   CellID->364555554]},
 "PublishedDate"->{
  Cell[445496, 8194, 1070, 26, 70, "Subsection",ExpressionUUID->"cfa3d10a-a79f-4014-82a8-c55bb4fee2ff",
   CellTags->{"Published Date", "PublishedDate", "TemplateCellGroup"},
   CellID->364555554]},
 "Compatibility"->{
  Cell[446726, 8229, 1073, 26, 70, "Subsection",ExpressionUUID->"ce5467a6-7f77-409a-a7a6-bfeca1f98708",
   CellTags->{"Compatibility", "TemplateCellGroup"},
   CellID->618273920]},
 "CompatibilityARSupport"->{
  Cell[448952, 8289, 1370, 35, 70, "Output",ExpressionUUID->"8c646c65-a739-4675-a89a-e1a703e08da5",
   CellTags->{"CheckboxCell", "CompatibilityARSupport", "CompatibilityARSupport-Checkboxes"},
   CellID->885916833]},
 "CompatibilityARSupport-Checkboxes"->{
  Cell[448952, 8289, 1370, 35, 70, "Output",ExpressionUUID->"8c646c65-a739-4675-a89a-e1a703e08da5",
   CellTags->{"CheckboxCell", "CompatibilityARSupport", "CompatibilityARSupport-Checkboxes"},
   CellID->885916833]},
 "ScrapeDefault"->{
  Cell[451533, 8360, 139, 3, 70, "Text",ExpressionUUID->"9d6cbda0-71b0-4ad0-9e31-3c6577b9c849",
   CellTags->"ScrapeDefault",
   CellID->720902404]},
 "CompatibilityCloudSupport"->{
  Cell[452821, 8397, 1328, 34, 70, "Output",ExpressionUUID->"7fb49c0d-e71c-4163-9a0e-be712d9e8d5c",
   CellTags->{"CheckboxCell", "CompatibilityCloudSupport", "CompatibilityCloudSupport-Checkboxes"},
   CellID->874890799]},
 "CompatibilityCloudSupport-Checkboxes"->{
  Cell[452821, 8397, 1328, 34, 70, "Output",ExpressionUUID->"7fb49c0d-e71c-4163-9a0e-be712d9e8d5c",
   CellTags->{"CheckboxCell", "CompatibilityCloudSupport", "CompatibilityCloudSupport-Checkboxes"},
   CellID->874890799]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Name", 595145, 11100},
 {"Title", 595305, 11104},
 {"Caption", 595467, 11108},
 {"CaptionCells", 595669, 11112},
 {"TemplateCellGroup", 595876, 11116},
 {"Initialization Code", 598832, 11162},
 {"InitializationCode", 599060, 11166},
 {"DefaultContent", 599284, 11170},
 {"samplecell", 600621, 11195},
 {"TabNext", 600815, 11199},
 {"Manipulate", 602152, 11224},
 {"ManipulateGroup", 602365, 11228},
 {"SnapshotGroup", 602576, 11232},
 {"Snapshots", 602781, 11236},
 {"Snapshot", 602985, 11240},
 {"SourceInformationGroup", 603466, 11250},
 {"AuthorNames", 603645, 11254},
 {"Contributed By", 603863, 11258},
 {"AuthorNotes", 604078, 11262},
 {"DetailCells", 604313, 11266},
 {"Details & Citations", 604556, 11270},
 {"ReferenceCells", 604794, 11274},
 {"References", 605007, 11278},
 {"Submission Notes", 605226, 11282},
 {"SubmissionNotes", 605451, 11286},
 {"Keywords", 605669, 11290},
 {"Categories", 605862, 11294},
 {"DemoCategories", 606079, 11298},
 {"CheckboxCell", 606294, 11302},
 {"Topics", 606937, 11312},
 {"Topics-Checkboxes", 607151, 11316},
 {"Related Demonstrations", 607370, 11320},
 {"RelatedDemonstrations", 607611, 11324},
 {"External Links", 607845, 11328},
 {"ExternalLinks", 608064, 11332},
 {"Related Symbols", 608285, 11336},
 {"RelatedSymbols", 608507, 11340},
 {"Published Date", 608729, 11344},
 {"PublishedDate", 608948, 11348},
 {"Compatibility", 609167, 11352},
 {"CompatibilityARSupport", 609377, 11356},
 {"CompatibilityARSupport-Checkboxes", 609635, 11360},
 {"ScrapeDefault", 609873, 11364},
 {"CompatibilityCloudSupport", 610055, 11368},
 {"CompatibilityCloudSupport-Checkboxes", 610322, 11372}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 359, 6, 70, "Title",ExpressionUUID->"5b117da6-40c7-4534-b65c-13505717c553",
 CellTags->{"Name", "Title"},
 CellID->118417941],
Cell[CellGroupData[{
Cell[964, 32, 1495, 33, 70, "Section",ExpressionUUID->"e1358b63-00d2-43fc-96cd-4b61e4f4f797",
 CellTags->{"Caption", "CaptionCells", "TemplateCellGroup"},
 CellID->138150581],
Cell[2462, 67, 3625, 58, 70, "Text",ExpressionUUID->"dc758a88-607c-4a76-93c4-1f653211d338",
 CellID->560350242]
}, Closed]],
Cell[CellGroupData[{
Cell[6124, 130, 2246, 48, 70, "Section",ExpressionUUID->"a964dcce-d970-4eee-8637-eadd12c47b0b",
 CellTags->{"Initialization Code", "InitializationCode", "TemplateCellGroup"},
 CellID->447669593],
Cell[8373, 180, 751, 16, 70, "CodeText",ExpressionUUID->"cca18a78-0dfe-4937-8ec9-4b17dded0004",
 CellTags->{"DefaultContent", "samplecell", "TabNext"},
 CellID->687519280]
}, Closed]],
Cell[CellGroupData[{
Cell[9161, 201, 1944, 40, 70, "Section",ExpressionUUID->"ea06d89a-ceac-4dbe-98ed-a1d0d79c1569",
 CellTags->{"Manipulate", "ManipulateGroup", "TemplateCellGroup"},
 CellID->791025314],
Cell[CellGroupData[{
Cell[11130, 245, 25415, 617, 70, "Input",ExpressionUUID->"7c9065db-13e0-4b09-a51e-dc7adf8fa6b1",
 CellID->168934683],
Cell[36548, 864, 11601, 238, 70, "Output",ExpressionUUID->"31a00447-4085-4907-9e9d-295e67727d22",
 CellID->129021848]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[48198, 1108, 1302, 31, 70, "Section",ExpressionUUID->"f5ec9e5e-ae8a-4fb5-96ab-b6b665528ed0",
 CellTags->{"SnapshotGroup", "Snapshots", "TemplateCellGroup"},
 CellID->98938448],
Cell[49503, 1141, 47913, 790, 70, "Output",ExpressionUUID->"3beb5e0c-2e6f-4058-a80f-be0c4fc1e686",
 CellID->296330815],
Cell[97419, 1933, 47937, 791, 70, "Output",ExpressionUUID->"86db37b8-b3b6-4ddc-b115-b1685afca0eb",
 CellTags->"Snapshot",
 CellID->1206745619],
Cell[145359, 2726, 45175, 746, 70, "Output",ExpressionUUID->"dbde7e77-07d1-4a9d-9c8f-1d2f59de5b6c",
 CellTags->"Snapshot",
 CellID->938056265],
Cell[190537, 3474, 51406, 848, 70, "Output",ExpressionUUID->"5de388c0-a437-40cb-8fdc-1792d955ab36",
 CellTags->"Snapshot",
 CellID->1234193228]
}, Closed]],
Cell[CellGroupData[{
Cell[241980, 4327, 273, 5, 70, "Section",ExpressionUUID->"92eaa833-77a2-4f01-a6e4-574b2a10fa19",
 CellTags->"SourceInformationGroup",
 CellID->62407265],
Cell[CellGroupData[{
Cell[242278, 4336, 1221, 29, 70, "Subsection",ExpressionUUID->"56bf5db5-b8c0-4e50-9a10-ec1ee88c7c59",
 CellTags->{"AuthorNames", "Contributed By", "TemplateCellGroup"},
 CellID->255368948],
Cell[243502, 4367, 122, 2, 70, "Item",ExpressionUUID->"a99a35e3-f598-4280-9bdb-74870b695b5c",
 CellID->67106448]
}, Open  ]],
Cell[CellGroupData[{
Cell[243661, 4374, 2197, 46, 70, "Subsection",ExpressionUUID->"7d4f3392-4fd1-4c6a-8bcc-3905ef434063",
 CellTags->{"AuthorNotes", "DetailCells", "Details & Citations", "TemplateCellGroup"},
 CellID->441931514],
Cell[245861, 4422, 592, 9, 70, "Text",ExpressionUUID->"fb976067-70a4-46b9-ba31-cb61e71fdd21",
 CellTags->{"DefaultContent", "TabNext"},
 CellID->111711384]
}, Open  ]],
Cell[CellGroupData[{
Cell[246490, 4436, 2173, 45, 70, "Subsection",ExpressionUUID->"ac3556f7-cc4b-4eb5-8b39-eb80ed19f14e",
 CellTags->{"ReferenceCells", "References", "TemplateCellGroup"},
 CellID->592881655],
Cell[248666, 4483, 578, 9, 70, "Text",ExpressionUUID->"52883aa9-e14d-45c8-9d5e-248e3bf09f1d",
 CellTags->{"DefaultContent", "TabNext"},
 CellID->423796343]
}, Open  ]],
Cell[CellGroupData[{
Cell[249281, 4497, 1242, 30, 70, "Subsection",ExpressionUUID->"8d0444a3-8342-4162-9e92-22f1b7221c18",
 CellTags->{"Submission Notes", "SubmissionNotes", "TemplateCellGroup"},
 CellID->797097429],
Cell[250526, 4529, 589, 9, 70, "Text",ExpressionUUID->"b261e028-15f2-4441-bb92-a57ea8f53f8d",
 CellTags->{"DefaultContent", "TabNext"},
 CellID->820829112]
}, Open  ]],
Cell[CellGroupData[{
Cell[251152, 4543, 1106, 27, 70, "Subsection",ExpressionUUID->"e3cce7ef-c4c5-4389-bd49-8a186662675e",
 CellTags->{"Keywords", "TemplateCellGroup"},
 CellID->938146184],
Cell[252261, 4572, 557, 9, 70, "Item",ExpressionUUID->"8876a9af-babe-4aa2-a657-e937791a3571",
 CellTags->{"DefaultContent", "TabNext"},
 CellID->12473014]
}, Open  ]],
Cell[CellGroupData[{
Cell[252855, 4586, 1128, 27, 70, "Subsection",ExpressionUUID->"c60af39c-3370-41d9-b523-92a1dc0c8539",
 CellTags->{"Categories", "DemoCategories", "TemplateCellGroup"},
 CellID->845692503],
Cell[253986, 4615, 185635, 3430, 70, "Output",ExpressionUUID->"966f28d9-e35b-4704-9ab2-8df8cae8fa7d",
 CellTags->{"CheckboxCell", "Topics", "Topics-Checkboxes"},
 CellID->256892528]
}, Open  ]],
Cell[CellGroupData[{
Cell[439658, 8050, 1216, 30, 70, "Subsection",ExpressionUUID->"d279f5a6-e0a5-42be-95fc-b50ebbfaaa27",
 CellTags->{"Related Demonstrations", "RelatedDemonstrations", "TemplateCellGroup"},
 CellID->1132753],
Cell[440877, 8082, 580, 9, 70, "Item",ExpressionUUID->"9141165a-5063-4cd0-b087-09e8b690a52e",
 CellTags->{"DefaultContent", "TabNext"},
 CellID->288851603]
}, Open  ]],
Cell[CellGroupData[{
Cell[441494, 8096, 1558, 37, 70, "Subsection",ExpressionUUID->"3326a0e4-445d-462d-bcc2-076fef1488fc",
 CellTags->{"External Links", "ExternalLinks", "TemplateCellGroup"},
 CellID->843468725],
Cell[443055, 8135, 577, 9, 70, "Item",ExpressionUUID->"f5add3f6-a89e-494f-961c-873748ff622b",
 CellTags->{"DefaultContent", "TabNext"},
 CellID->474339324]
}, Open  ]],
Cell[CellGroupData[{
Cell[443669, 8149, 1191, 29, 70, "Subsection",ExpressionUUID->"5b819928-34d1-42e7-8dd5-3defd3aacec3",
 CellTags->{"Related Symbols", "RelatedSymbols", "TemplateCellGroup"},
 CellID->899564547],
Cell[444863, 8180, 596, 9, 70, "Item",ExpressionUUID->"89c3216d-9548-4f72-9b19-bca9e9f9b816",
 CellTags->{"DefaultContent", "TabNext"},
 CellID->107750934]
}, Open  ]],
Cell[CellGroupData[{
Cell[445496, 8194, 1070, 26, 70, "Subsection",ExpressionUUID->"cfa3d10a-a79f-4014-82a8-c55bb4fee2ff",
 CellTags->{"Published Date", "PublishedDate", "TemplateCellGroup"},
 CellID->364555554],
Cell[446569, 8222, 120, 2, 70, "Text",ExpressionUUID->"8d0259b0-3f66-441a-b680-6cdd14dbef72",
 CellID->485338474]
}, Open  ]],
Cell[CellGroupData[{
Cell[446726, 8229, 1073, 26, 70, "Subsection",ExpressionUUID->"ce5467a6-7f77-409a-a7a6-bfeca1f98708",
 CellTags->{"Compatibility", "TemplateCellGroup"},
 CellID->618273920],
Cell[CellGroupData[{
Cell[447824, 8259, 1125, 28, 70, "Subsubsection",ExpressionUUID->"009923e3-ba40-4015-b8a8-9aee6670df2b",
 CellID->939515199],
Cell[448952, 8289, 1370, 35, 70, "Output",ExpressionUUID->"8c646c65-a739-4675-a89a-e1a703e08da5",
 CellTags->{"CheckboxCell", "CompatibilityARSupport", "CompatibilityARSupport-Checkboxes"},
 CellID->885916833]
}, Closed]],
Cell[CellGroupData[{
Cell[450359, 8329, 1171, 29, 70, "Subsubsection",ExpressionUUID->"52c2a784-4882-484d-a0a2-f814f28de751",
 CellID->903878728],
Cell[451533, 8360, 139, 3, 70, "Text",ExpressionUUID->"9d6cbda0-71b0-4ad0-9e31-3c6577b9c849",
 CellTags->"ScrapeDefault",
 CellID->720902404]
}, Open  ]],
Cell[CellGroupData[{
Cell[451709, 8368, 1109, 27, 70, "Subsubsection",ExpressionUUID->"056d52b7-01f1-4ade-83a2-5cd2300be228",
 CellID->576624648],
Cell[452821, 8397, 1328, 34, 70, "Output",ExpressionUUID->"7fb49c0d-e71c-4163-9a0e-be712d9e8d5c",
 CellTags->{"CheckboxCell", "CompatibilityCloudSupport", "CompatibilityCloudSupport-Checkboxes"},
 CellID->874890799]
}, Closed]]
}, Open  ]]
}, Closed]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
